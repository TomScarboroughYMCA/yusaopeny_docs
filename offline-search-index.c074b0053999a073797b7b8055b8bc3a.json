[{"body":" These basic sample guidelines assume that your Docsy site is deployed using Netlify and your files are stored in GitHub. You can use the guidelines “as is” or adapt them with your own instructions: for example, other deployment options, information about your doc project’s file structure, project-specific review guidelines, versioning guidelines, or any other information your users might find useful when updating your site. Kubeflow has a great example.\nDon’t forget to link to your own doc repo rather than our example site! Also make sure users can find these guidelines from your doc repo README: either add them there and link to them from this page, add them here and link to them from the README, or include them in both locations.\n We use Hugo to format and generate our website, the Docsy theme for styling and site structure, and Netlify to manage the deployment of the site. Hugo is an open-source static site generator that provides us with templates, content organisation in a standard directory structure, and a website generation engine. You write the pages in Markdown (or HTML if you want), and Hugo wraps them up into a website.\nAll submissions, including submissions by project members, require review. We use GitHub pull requests for this purpose. Consult GitHub Help for more information on using pull requests.\nQuick start with Netlify Here’s a quick guide to updating the docs. It assumes you’re familiar with the GitHub workflow and you’re happy to use the automated preview of your doc updates:\n Fork the Goldydocs repo on GitHub. Make your changes and send a pull request (PR). If you’re not yet ready for a review, add “WIP” to the PR name to indicate it’s a work in progress. (Don’t add the Hugo property “draft = true” to the page front matter, because that prevents the auto-deployment of the content preview described in the next point.) Wait for the automated PR workflow to do some checks. When it’s ready, you should see a comment like this: deploy/netlify — Deploy preview ready! Click Details to the right of “Deploy preview ready” to see a preview of your updates. Continue updating your doc and pushing your changes until you’re happy with the content. When you’re ready for a review, add a comment to the PR, and remove any “WIP” markers.  Updating a single page If you’ve just spotted something you’d like to change while using the docs, Docsy has a shortcut for you:\n Click Edit this page in the top right hand corner of the page. If you don’t already have an up to date fork of the project repo, you are prompted to get one - click Fork this repository and propose changes or Update your Fork to get an up to date version of the project to edit. The appropriate page in your fork is displayed in edit mode. Follow the rest of the Quick start with Netlify process above to make, preview, and propose your changes.  Previewing your changes locally If you want to run your own local Hugo server to preview your changes as you work:\n  Follow the instructions in Getting started to install Hugo and any other tools you need. You’ll need at least Hugo version 0.45 (we recommend using the most recent available version), and it must be the extended version, which supports SCSS.\n  Fork the Goldydocs repo repo into your own project, then create a local copy using git clone. Don’t forget to use --recurse-submodules or you won’t pull down some of the code you need to generate a working site.\ngit clone --recurse-submodules --depth 1 https://github.com/google/docsy-example.git   Run hugo server in the site root directory. By default your site will be available at http://localhost:1313/. Now that you’re serving your site locally, Hugo will watch for changes to the content and automatically refresh your site.\n  Continue with the usual GitHub workflow to edit files, commit them, push the changes up to your fork, and create a pull request.\n  Creating an issue If you’ve found a problem in the docs, but you’re not sure how to fix it yourself, please create an issue in the Goldydocs repo. You can also create an issue about a specific page by clicking the Create Issue button in the top right hand corner of the page.\nUseful resources  Docsy user guide: All about Docsy, including how it manages navigation, look and feel, and multi-language support. Hugo documentation: Comprehensive reference for Hugo. Github Hello World!: A basic introduction to GitHub concepts and workflow.  ","categories":"","description":"How to contribute to the docs\n","excerpt":"How to contribute to the docs\n","ref":"/openy_docs/docs/contribution-guidelines/","tags":"","title":"Contribution Guidelines"},{"body":"Paragraph 1 Column This is a paragraph type that will be used for implements a paragraph with 1 column.\nFields    Name Machine name Required Description Notes     Line Above field_prfg_display_line_above No Display a line above the column.    Column field_prgf_1c_column No Enter column body.    Paragraph Title field_prgf_1c_title No Enter title to display at the top of 1 column paragraph.    Paragraph Description field_prgf_1c_description No Enter description to display under the 1 column paragraph title.     ","categories":"","description":"","excerpt":"Paragraph 1 Column This is a paragraph type that will be used for …","ref":"/openy_docs/docs/content-structure/paragraphs/1c/","tags":"","title":"1c"},{"body":"Paragraph 2 Column This is a paragraph type that will be used for implements a paragraph with 2 column.\nFields    Name Machine name Required Description Notes     Line Above field_prfg_display_line_above No Display a line above the column.    Left Column field_prgf_2c_left No Enter left column body.    Right Column field_prgf_2c_right No Enter right column body.     ","categories":"","description":"","excerpt":"Paragraph 2 Column This is a paragraph type that will be used for …","ref":"/openy_docs/docs/content-structure/paragraphs/2c/","tags":"","title":"2c"},{"body":"Paragraph 3 Column This is a paragraph type that will be used for implements a paragraph with 3 column.\nFields    Name Machine name Required Description Notes     Line Above field_prfg_display_line_above No Display a line above the column.    Left Column field_prgf_3c_left No Enter left column body.    Center Column field_prgf_3c_center No Enter center column body.    Right Column field_prgf_3c_right No Enter right column body.    Paragraph Title field_prgf_title No Enter title to display at the top of 3 columns paragraph.     ","categories":"","description":"","excerpt":"Paragraph 3 Column This is a paragraph type that will be used for …","ref":"/openy_docs/docs/content-structure/paragraphs/3c/","tags":"","title":"3c"},{"body":"Paragraph 4 Column This is a paragraph type that will be used for implements a paragraph with 4 column.\nFields    Name Machine name Required Description Notes     Line Above field_prfg_display_line_above No Display a line above the column.    First Column field_prgf_4c_1st No Enter first column body.    Second Column field_prgf_4c_2nd No Enter second column body.    Third Column field_prgf_4c_3rd No Enter third column body.    Fourth Column field_prgf_4c_4th No Enter forth column body.    Button field_prgf_4c_button No Button with link to display under 4 column paragraph    Paragraph Title field_prgf_title No Enter title to display at the top of 4 columns paragraph.    Paragraph Description field_prgf_description No Enter description to display under the 4 columns paragraph title.     ","categories":"","description":"","excerpt":"Paragraph 4 Column This is a paragraph type that will be used for …","ref":"/openy_docs/docs/content-structure/paragraphs/4c/","tags":"","title":"4c"},{"body":"Open Y Acceptance testing best practices Open Y is a big distribution with a large amount of modules, components, subsystems, and business processes, therefore we have to take appropriate steps to ensure the stability of major functionality during development.\nFor the automated tests we have created General Checks template on GitHub every developer should follow to get review approval from Open Y core team. However, General Checks are for testing functionality for the current proposed change only, not for Regression Testing.\nFor regression testing, Behat tests in this flow are provided automatically on each build by Open Y community.\nEvery pull request should include a testing plan prior to release into Open Y. This plan should cover the testing of all workflows and functionality to ensure that they continue to work with any new code or change implemented. This is because it is possible for conflicts to occur between elements of Open Y, Drupal Modules, and Drupal Core. These pull request testing plans will increase productivity and decrease effort for manual Acceptance Testing of upcoming Releases. This testing plan should cover specific features and functionality that is likely to cause regression issues post-release or post-upgrade to the latest version of Open Y once this new code is implemented.\nExample of testing plan: If the Drupal core is updated it is important to gather all Drupal core Release Notes since last release core upgrade for Open Y and analyze important issues fixed. Example - in case if you are doing upgrade from latest 8.4.0 to 8.4.4:\n https://www.drupal.org/project/drupal/releases/8.4.4 (translations) https://www.drupal.org/project/drupal/releases/8.4.3 (postgreSQL and migration) https://www.drupal.org/project/drupal/releases/8.4.2 (migrations, taxonomy, ckeditor) https://www.drupal.org/project/drupal/releases/8.4.1 (composer)  This means the list of systems should be tested are\n multilingual postgreSQL support migration taxonomy ckeditor composer  This list could be extended by analyzing some highly important parts of Open Y distributions that depends from the above subsystems. It is not required to spend time on every module that has a dependency taxonomy, but it is important to test at least one impacted module to ensure it is still working post-implementation. In case if there is a Behat test already created for the subsystem in a list then a manual test could be skipped as long as the build is not failing due to the module or element covered in the associatied Behat test.\nHow to choose which modules to test: These can be a random selection from the list of systems impacted, or one of the oldest modules in a system impacted. This is because there is a higher chance that a minor change could cause a regression issue for the modules that have not received recent or regular updates.\nThe oldest modules(contrib modules) that have dependencies from the above list should also be updated, but to improve productivity, these updates should only be initiated if there is a security issue or a module stopped working because of the subsystems getting updated within an upcoming release. In case if a respective module update creates more issues that the older version of said module - then it is better to keep the old module and fix an associated regression bug. Tip: usually a new version of the module already contains a bug fix, so adding a patch from the drupal.org to composer.json of the Open Y distribution is preffered to get distribution released. Keep in mind, you will need to create a follow-up task for the module to be updated after release.\nAfter creating list of modules that could introduce regression issues it is highly recommended to follow Quickstart section of the module’s readme files, that usually is shipped with modules. Example for the location_finder. In case if a module has no Quickstart of Acceptance testing section in readme - it is important to test at least one place where functionality of the module should be working. It is highly recommended to add this manual test steps as a follow-up task, new issue or even better - create Pull Request with changes to readme into Open Y repository. For the sake of performance, adding step by step how-to to the respective module’s README.md file is highly recommended. It takes only a few minutes to write a couple of lines of documentation which will greatly help others with future contributions and changes.\nOptional, but grately appreciated: Add a Drupal tour for the how-to, created in README will benefit future Open Y users and developers. Having a tour for the business functionality is highly recommended to ship with the component - it creates an in-site visual guided documentation and helps to decrease time for the Acceptance testing.\nAnd last, but not the lease - adding Behat tests to the system will ensure functionality is tested on every pull request, on every CI build in the future.\nRule Every release of Open Y since 8.1.9 should include list of subsystems, changed in release for the community to be aware of the possible regressions on their end.)\n","categories":"","description":"","excerpt":"Open Y Acceptance testing best practices Open Y is a big distribution …","ref":"/openy_docs/docs/development/acceptancetesting/","tags":"","title":"AcceptanceTesting"},{"body":"Activity Activity content type is used for adding Activities on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the activity item.   Program Subcategory field_activity_category Yes A reference field for selecting the program subcategory.   Content Area Field group     Description field_activity_description No Textarea for the description/body with WYSIWYG, without summary.    URL pattern Content type is using following pattern: /programs/[node:field_activity_category:entity:field_category_program:entity:title]/[node:field_activity_category:entity:title]/[node:title]\n","categories":"","description":"","excerpt":"Activity Activity content type is used for adding Activities on the …","ref":"/openy_docs/docs/content-structure/content-types/activity/","tags":"","title":"Activity"},{"body":"How to configure AddThis Open Y AddThis module allow you easy add Social icons to any node.\n  Go to http://www.addthis.com and create your account and get public id.\n  Go to admin/openy/settings/openy-addthis add public id   Select the content type for which to show the social icons and save.\n  How to use AddThis paragraph You can add AddThis to specific node use ‘Social share icons’ paragraph\n  Click on ‘Edit’ any node\n  After content add ‘Social share icons’ paragraph )\n  ","categories":"","description":"","excerpt":"How to configure AddThis Open Y AddThis module allow you easy add …","ref":"/openy_docs/docs/development/addthis/","tags":"","title":"AddThis"},{"body":"Alert Alert content type is used for adding alerts on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the activity item.   Background color field_alert_color Yes Reference field for choosing the term from “Color” vocabulary.   Text color field_alert_text_color Yes Reference field for choosing the term from “Color” vocabulary.   Icon color field_alert_icon_color No Reference field for choosing the term from “Color” vocabulary. Description for field: “Leave empty to hide icon.”   Placement field_alert_place Yes Select list field (singular) for choosing place: HeaderFooter   Description field_alert_description Yes Textarea for the description/body with WYSIWYG, without summary.   Link field_alert_link No Internal or external link.   Reference field_alert_belongs No Entityreference with autocomplete to any node. Description for field: “Reference to node (branch, camp, landing page and etc.), where local alert will be displayed.”    URL pattern Content type is using following pattern: /alert/[node:title].\n","categories":"","description":"","excerpt":"Alert Alert content type is used for adding alerts on the site.\nFields …","ref":"/openy_docs/docs/content-structure/content-types/alert/","tags":"","title":"Alert"},{"body":"All Amenities Provide a paragraph with a table view shows list of Branches.\nFields    Name Machine name Required Description     All amenities field_field_prgf_amnts_view No Predefined reference to a view to display all amenities.   Title field_prgf_title No Enter title which is going to be displayed on top of the paragraph.    ","categories":"","description":"","excerpt":"All Amenities Provide a paragraph with a table view shows list of …","ref":"/openy_docs/docs/content-structure/paragraphs/all-amenities/","tags":"","title":"All Amenities"},{"body":"Amenities Vocabulary This is a vocabulary that will be used for adding reference Branch amenities. We will use this for the Branch.\nMachine_name: amenities\n","categories":"","description":"","excerpt":"Amenities Vocabulary This is a vocabulary that will be used for adding …","ref":"/openy_docs/docs/content-structure/taxonomy/amenities/","tags":"","title":"Amenities"},{"body":"Area Vocabulary This is a vocabulary that will be used for adding location areas on the site. We will use this for the Location Branch and Facility CTs.\nMachine_name: area\n","categories":"","description":"","excerpt":"Area Vocabulary This is a vocabulary that will be used for adding …","ref":"/openy_docs/docs/content-structure/taxonomy/area/","tags":"","title":"Area"},{"body":"Banner This is a paragraph type that will be used for the banner content.\nFields    Name Machine name Required Description Notes     Headline field_prgf_headline Yes Headline of the banner. Plain text, 255 characters   Color field_prgf_color Yes Reference field for choosing the term from “Color” vocabulary.    Image field_prgf_image No Entityreference to media image. Single value.    Description field_prgf_description No WYSIWYG field without summary.    Link field_prgf_link No Link field that should store internal and external links.     ","categories":"","description":"","excerpt":"Banner This is a paragraph type that will be used for the banner …","ref":"/openy_docs/docs/content-structure/paragraphs/banner/","tags":"","title":"Banner"},{"body":"Basic Block A simple block with a description.\nFields    Name Machine name Required Description     Content field_block_content Yes WYSIWYG field without summary.    ","categories":"","description":"","excerpt":"Basic Block A simple block with a description.\nFields    Name Machine …","ref":"/openy_docs/docs/content-structure/blocks/basic/","tags":"","title":"Basic"},{"body":"Block Menu Implements custom block type with a links.\nFields    Name Machine name Required Description     Menu Links field_menu_block_links Yes The Menu Links.   Color field_menu_block_color Yes Select colors for menu block background gradient.   Text color field_menu_block_text_color Yes Select text color of the menu block.    ","categories":"","description":"","excerpt":"Block Menu Implements custom block type with a links.\nFields    Name …","ref":"/openy_docs/docs/content-structure/blocks/block-menu/","tags":"","title":"Block Menu"},{"body":"","categories":"","description":"","excerpt":"","ref":"/openy_docs/docs/content-structure/blocks/","tags":"","title":"Blocks"},{"body":"Blog Blog Post content type is used for adding blog posts on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the blog item.   Locations field_blog_location Yes Reference field to branch and camp nodes. Multiple Values.   Category field_blog_category No Reference field for choosing the term from “Blog Category” vocabulary. Multiple Values.   Meta Tags field_meta_tags No A meta tags field allows us to provide structured metadata and Graph meta tags for Facebook, Pinterest, LinkedIn and other social networking sites.   Styles Field group     Style field_blog_style Yes Select list field with multiple options for choosing style: Story CardPhoto CardNews Card (default)Color Card   Background color field_blog_color No teaser background color (used when Color Card style is selected.)   Text color field_blog_text_color No teaser text color (used when Color Card style is selected.)   Content Area Field group     Image field_blog_image No Image field for the Blog item. Entity reference to Media bundle.   Description field_blog_description No Textarea for the description/body with WYSIWYG, without summary.   Content field_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Sidebar Area Field group     Related content field_blog_related No Reference field for choosing related Blog nodes. Multiple Values.   Content field_sidebar_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.    URL pattern Content type is using following pattern: /blog/[node:title]\n","categories":"","description":"","excerpt":"Blog Blog Post content type is used for adding blog posts on the site. …","ref":"/openy_docs/docs/content-structure/content-types/blog/","tags":"","title":"Blog"},{"body":"Blog Category This is a vocabulary that will be used for adding blog categories on the site.\nMachine_name: blog_category\n","categories":"","description":"","excerpt":"Blog Category This is a vocabulary that will be used for adding blog …","ref":"/openy_docs/docs/content-structure/taxonomy/blog-category/","tags":"","title":"Blog Category"},{"body":"Blog Posts Listing This is dynamic paragraph that renders the latest blog posts and utilizes exposed filters.\n Location Category Text  It uses sticky at the top option and order items based on published date (newest at the top).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Blog Posts Listing This is dynamic paragraph that renders the latest …","ref":"/openy_docs/docs/content-structure/paragraphs/blog-posts-listing/","tags":"","title":"Blog Posts Listing"},{"body":"Branch Branch content type is used for adding Branches on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the branch item.   Neighborhood field_location_area No A taxonomy reference field using the “Area” vocabulary.   Coming Soon field_location_state No A checkbox field to determine branches in development.   Temporary URL field_location_temp_url No A link field to provide a temporary page URL (a blog post, or smth else) if the branch is coming soon.   Meta Tags field_meta_tags No A meta tags field allows us to provide structured metadata and Graph meta tags for Facebook, Pinterest, LinkedIn and other social networking sites.   Contact Field group     Address field_location_address Yes An address field that will provide the ability to add details about the locations. Details to be completed: AddressCityStateZip Code   Branch Coordinates field_location_coordinates No Input for providing the latitude and longitude information.   Phone field_location_phone Yes Input for providing the phone information.   Fax field_location_fax No Input for providing the fax information.   Email field_location_email No Input for providing the email information.   Directions field_location_directions No A link field for adding the directions link.   Branch Hours Field group     Branch Hours field_branch_hours Paragraph Paragraph to indicate the branch hours.   Day of the week field_branch_hours_day No Select list with following values: sunday|Sundaymonday|Mondaytuesday|Tuesdaywednesday|Wednesdaythursday|Thursdayfriday|Fridaysaturday|Saturday   Start/End Time field_branch_hours_time No Textfield with description “e.g. 9am - 5pm, closed.”   Header Area Field group     Content field_header_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Content Area Field group     Content field_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Bottom Area Field group     Content field_bottom_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.    URL pattern Content type is using following pattern: /locations/[node:title]\n","categories":"","description":"","excerpt":"Branch Branch content type is used for adding Branches on the site. …","ref":"/openy_docs/docs/content-structure/content-types/branch/","tags":"","title":"Branch"},{"body":"Block Branch Amenities A block with amenities list of the current branch.\nFields    Name Machine name Required Description     Branch amenities field_branch_am Yes Uses only Custom Formatter to display a list of amenities within Paragraph block.   Link field_sb_link No Link to display at the bottom of the block.   Title field_sb_title No Title to display at top of block.   Icon class field_icon_class No Provide a “Font Awesome” icon name, e.g. flag, car, info. Overrides image icon.    ","categories":"","description":"","excerpt":"Block Branch Amenities A block with amenities list of the current …","ref":"/openy_docs/docs/content-structure/blocks/branch-amenities/","tags":"","title":"Branch Amenities"},{"body":"Branches Popup (All) This is dynamic paragraph that renders the locations selection popup, based on current node.\nRelates to:\n [Schedule search list](Schedule search list.md) [Classes Listing](Classes Listing.md)  Fields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Branches Popup (All) This is dynamic paragraph that renders the …","ref":"/openy_docs/docs/content-structure/paragraphs/branches-popup-all/","tags":"","title":"Branches Popup (All)"},{"body":"Branches Popup (Class) This is dynamic paragraph that renders the locations selection popup, based on current node.\nRelates to:\n [Class Sessions](Class Sessions.md) [Class Location](Class Location.md)  Fields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Branches Popup (Class) This is dynamic paragraph that renders the …","ref":"/openy_docs/docs/content-structure/paragraphs/branches-popup-class/","tags":"","title":"Branches Popup (Class)"},{"body":"Camp Camp content type is used for adding Camps on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the camp item.   Menu links field_camp_menu_links Yes Link field with multiple values, that should have the Title and Link field. Based on it, we will complete the Camp Menu.   Meta Tags field_meta_tags No A meta tags field allows us to provide structured metadata and Graph meta tags for Facebook, Pinterest, LinkedIn and other social networking sites.   Contact Field group     Address field_location_address Yes An address field that will provide the ability to add details about the locations. Details to be completed: AddressCityStateZip Code   Camp Coordinates field_location_coordinates No Input for providing the latitude and longitude information.   Phone field_location_phone Yes Input for providing the phone information.   Fax field_location_fax No Input for providing the fax information.   Email field_location_email No Input for providing the email information.   Directions field_location_directions No A link field for adding the directions link.   Header Area Field group     Content field_header_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Content Area Field group     Content field_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Bottom Area Field group     Content field_bottom_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.    URL pattern Content type is using following pattern: /camps/[node:title]\n","categories":"","description":"","excerpt":"Camp Camp content type is used for adding Camps on the site.\nFields …","ref":"/openy_docs/docs/content-structure/content-types/camp/","tags":"","title":"Camp"},{"body":"","categories":"","description":"","excerpt":"","ref":"/openy_docs/categories/","tags":"","title":"Categories"},{"body":"Categories Listing This is dynamic paragraph that renders all published categories according to current program page.\nIt uses sticky at the top option and order items based on published date(newest at the top).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Categories Listing This is dynamic paragraph that renders all …","ref":"/openy_docs/docs/content-structure/paragraphs/categories-listing/","tags":"","title":"Categories Listing"},{"body":"Class Class content type is used for adding Classes on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the class item.   Activity field_class_activity No A reference field for selecting the class.   Meta Tags field_meta_tags No A meta tags field allows us to provide structured metadata and Graph meta tags for Facebook, Pinterest, LinkedIn and other social networking sites.   Header Area Field group     Content field_header_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Content Area Field group     Description field_class_description No Textarea for the description/body with WYSIWYG, without summary.   Content field_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Sidebar Area Field group     Content field_sidebar_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Bottom Area Field group     Content field_bottom_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.    URL pattern Content type is using following pattern: /programs/[node:field_class_activity:entity:field_activity_category:entity:field_category_program:entity:title]/[node:field_class_activity:entity:field_activity_category:entity:title]/[node:title]/class-times\n","categories":"","description":"","excerpt":"Class Class content type is used for adding Classes on the site. …","ref":"/openy_docs/docs/content-structure/content-types/class/","tags":"","title":"Class"},{"body":"Class Location This is dynamic paragraph that renders the locations class location view mode, based on url query parameter location with a valid id.\nRelates to [Branches Popup (Class)](Branches Popup (Class).md).\n When the page has a location parameter the Branches Popup paragraph will make an “Edit” link on this paragraph visible. That link triggers the Branches Popup to open.  Fields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Class Location This is dynamic paragraph that renders the locations …","ref":"/openy_docs/docs/content-structure/paragraphs/class-location/","tags":"","title":"Class Location"},{"body":"Class Sessions This is dynamic paragraph that renders the class session instances, based on url query parameter location with a valid id.\nRelates to [Branches Popup (Class)](Branches Popup (Class).md).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    Displayed table  Location(should be displayed in case if \u0026location=% not in the URL. Otherwise should be hiddedn. Time + date Registration(link) Details  Online registration Ticket required In membership   Age Min - Max  Use cases Use case 3: Class page WITHOUT location popup 3.1 Location in specified URL\n When I open Class page WITHOUT location popup on page And I have location=% in the URL We skip cookie whether is empty or exist Results should be filtered based on location from URL In sidebar we should see location teaser  3.2 Preferred branch is empty and no location in URL or Preferred branch is selected and no location in URL\n When I open Class page WITHOUT location popup on page And I don’t have a preferred branch Or I have a preferred branch And I don’t have location=% in the URL Results should contain all branches In sidebar we should see “All locations….”  Use case 4: Class page WITH location popup 4.1 Location in specified URL\n When I open Class page WITH location popup on page And I have location=% in the URL We skip cookie whether is empty or exist Results should be filtered based on location from URL In sidebar we should see location teaser Location is sidebar should have “Edit” link that will open location popup  4.2 Preferred branch is empty and no location in URL or Preferred branch is selected and no location in URL\n When I open Class page WITH location popup on page And I don’t have a preferred branch Or I have a preferred branch And I don’t have location=% in the URL Results should contain all branches In sidebar we should see “All locations….” Location popup should be shown (Unless only one location is associated with the class)  ","categories":"","description":"","excerpt":"Class Sessions This is dynamic paragraph that renders the class …","ref":"/openy_docs/docs/content-structure/paragraphs/class-sessions/","tags":"","title":"Class Sessions"},{"body":"Classes Listing + Classes Listing Filters Classes Listing - should display all published classes grouped by activity.\nClasses Listing Filters - this paragraph should disply filter form for “Classes Listing” with following fields:\n Location Program Sub-program Activity  Relates to [Branches Popup (All)](Branches Popup (All).md).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    Use cases Use case 1: Classes Listing paragraph on a Program subcategory page WITHOUT location popup paragraph 1.1 Preferred branch is selected and no location in URL\n When I open Program subcategory page with Classes Listing WITHOUT location popup on page And I have a preferred branch And I don’t have location=% in the URL Filter by location should be predefined based on cookie Results should be filtered  1.2 Preferred branch is empty and no location in URL\n When I open Program subcategory page with Classes Listing WITHOUT location popup on page And I don’t have a preferred branch And I don’t have location=% in the URL Filter by location should show “All” Results should be shown for all branches  1.3 Location in specified URL\n When I open Program subcategory page with Classes Listing WITHOUT location popup on page And I have location=% in the URL We skip cookie whether is empty or exist Filter by location should show branch from URL Results should be filtered  Use case 2: Classes Listing paragraph on a Program subcategory page WITH location popup 2.1 Preferred branch is selected and no location in URL\n When I open Program subcategory page with Classes Listing WITH location popup on page And I have a preferred branch And I don’t have location=% in the URL Location popup shouldn’t be shown Filter by location should be predefined based on cookie Results should be filtered  2.2 Preferred branch is empty and no location in URL\n When I open Program subcategory page with Classes Listing WITH location popup on page And I don’t have a preferred branch And I don’t have location=% in the URL Filter by location should show “All” Results should be shown for all branches Location popup should be shown  2.3 Location in specified URL\n When I open Program subcategory page with Classes Listing WITH location popup on page And I have location=% in the URL We skip cookie whether is empty or exist Location popup shouldn’t be shown Filter by location should show branch from URL Results should be filtered  ","categories":"","description":"","excerpt":"Classes Listing + Classes Listing Filters Classes Listing - should …","ref":"/openy_docs/docs/content-structure/paragraphs/classes-listing/","tags":"","title":"Classes Listing"},{"body":"Code Provide paragraph containing a Code block. Can be used to embed Youtube video for instance.\nFields    Name Machine name Required Description     Code field_prgf_code_block Yes Block reference to Code block. Create a new one or pick up an existed Code block.    ","categories":"","description":"","excerpt":"Code Provide paragraph containing a Code block. Can be used to embed …","ref":"/openy_docs/docs/content-structure/paragraphs/code/","tags":"","title":"Code"},{"body":"This document serves as an addition to our Code of Conduct and Best Practices. It is more technical and in-depth for specific cases that were discussed during code quality review processes the Open Y team has in place. During this process, all code should be reviewed by 1-2 developers before being merged into the Open Y codebase.\nGeneral Rules Components in Open Y (whether modules, themes, or other code structures) should be, as much as possible, reusable and atomic. All features, content types, settings, styles, etc. should be bundled together to create a cohesive component.\n General naming conventions  Features module naming  openy_${entity_type|abbr}_${entity_bundle|abbr}_${feature|optional}  Example: openy_node_blog_feature openy_prgf_sc_feature -\u003e OpenY Paragraph Simple Content (name within yml)     Fields naming (\u003c=20 chars)  field_${entity_type|abbr}_${entity_bundle|abbr}_{name|abbr}  Example: field_prgf_sc_body     All descriptions are mandatory!   Module naming conventions - Depending on the context we should choose the name from this list:  ${project_name|abbr}_${business_name|abbr} - when the code looks like legacy and has specifics that are not ready to be open-sourced openy_${business_name|abbr} - when the code is ready to be ejected to OpenY package ${business_name} - when the code is so abstract that it has no connection to OpenY and is ready to be hosted on Drupal.org as an independent project.    Code Sharing To support reuse by the community, the MODULE-NAME should relate to the business logic of the module. It is not good to create modules by abstracting them out of the business. All modules that have been shared to drupal.org from past projects were possible to share only because they represent some feature, tied to a business need. For example:\n personify - module for SOAP related methods for working with Personify API acrypt - Asymmetric crypt algorithm  and so on.\nPHP Return early pattern To keep readability in functions and methods, it is wise to return early if simple conditions apply that can be checked at the beginning of a method:\n\u003c?php function foo($bar, $baz) { if ($foo) { // logic goes here  return $calculated_value; } else { return null; } } ?\u003eIt’s better to return early, keeping indentation and brainpower needed to follow the code low.\n\u003c?php function foo($bar, $baz) { if (!$foo) { return null; } // logic goes here  return $calculated_value; } ?\u003eDefine early pattern When you have a condition that aims to change the value of a variable without additional logic, get rid of if else elseif code and instead define your variable early and change it via conditions.\nBefore:\nif ($a = 'hello') { $text = 'Welcome to site'; } else { $text = 'Register please'; } After:\n$text = 'Register please'; if ($a = 'hello') { $text = 'Welcome to site'; } Null Checks with isset isset() verifies if set and not null. There is no need to do additional verification against NULL.\nBefore:\n... 'video' =\u003e (isset($feed['profile_media_videos']) || $feed['profile_media_videos'] != NULL) ? $feed['profile_media_videos'] : '', ... After:\n... 'video' =\u003e (isset($feed['profile_media_videos'])) ? $feed['profile_media_videos'] : '', ... Dependency Injection For the decoupled and easier to upgrade code in Drupal 8+ Dependency injection should be used instead of calling methods from services statically.\nSee the Drupal API Overview of the Dependency Injection Container and Services.\nBefore:\n... $node = Drupal::entityTypeManager()-\u003egetStorage('node')-\u003eload($result-\u003egetField('nid')-\u003egetValues()[0]); ... After:\n... $node = $this-\u003eentityTypeManager-\u003egetStorage('node')-\u003eload($result-\u003egetField('nid')-\u003egetValues()[0]); ... Creating meaningful log messages To provide useful logging for site managers, we need to write meaningful log messages with a proper context.\nBefore:\n... if($type == 'program') { if ($feed['profile_media_videos'] != NULL || $feed['profile_media_images'] != NULL) { \\Drupal::logger('272')-\u003enotice($type); ... After:\n... if($type == 'program') { if ($feed['profile_media_videos'] != NULL || $feed['profile_media_images'] != NULL) { \\Drupal::logger('form_import')-\u003enotice(\"FORM IMPORT: type is $type\"); ... Maintaining an Upgrade Path All changes in configurations should be added to appropriate hook_update_N to update already existing environments. We suggest using the Config Importer and Tools  package for working with hook_update_N.\nInstall files openy.install in profile In this file, we should put updates that are related to the distribution in general and don’t fit into any feature.\n Enable/Disable module General configs  openy_*.install in modules If you update some configuration for a specific feature, make sure that you put updates into this file in the appropriate module.\nConfig Management Revert only specific property from config This is the preferred method of updating configs as it will result in fewer conflicts for upgrading customized Open Y instances.\nWith config_import module we can update only part of the full config.\nFor updating specific property in config use the openy_upgrade_tool.param_updater service:\n Find the module where your config lives. Create a new hook_update_N in the openy_*.install file. In that hook add the update code (for example):  $config = drupal_get_path('module', 'openy_media_image') . '/config/install/views.view.images_library.yml'; $config_importer = \\Drupal::service('openy_upgrade_tool.param_updater'); $config_importer-\u003eupdate($config, 'views.view.images_library', 'display.default.display_options.pager'); Where:\n $config variable contains path to config with config name, like: views.view.images_library - config name display.default.display_options.pager - config specific property (you can set value from a nested array with variable depth)  Revert full configs This variant uses extensive config file manipulation and increases the time for an upgrade.\nFor updating full config or several configs from directory use the openy_upgrade_tool.importer service:\n$config_dir = drupal_get_path('module', 'openy_media_image') . '/config/install'; $config_importer = \\Drupal::service('openy_upgrade_tool.importer'); $config_importer-\u003esetDirectory($config_dir); $config_importer-\u003eimportConfigs(['views.view.images_library']); Where:\n $config_dir - path to directory with config views.view.images_library - config name  Also you can update several configs from a directory:\n$config_importer-\u003eimportConfigs([ 'views.view.images_library', 'views.view.example_view', ]); JavaScript includes ","categories":"","description":"","excerpt":"This document serves as an addition to our Code of Conduct and Best …","ref":"/openy_docs/docs/wiki/code-review-quality-best-practices/","tags":"","title":"Code-Review-Quality-Best-Practices"},{"body":"Area Vocabulary This is a vocabulary that will be used for adding colors on the site.\nMachine_name: color\nFields    Name Machine name Required Description     Name drupal’s default Yes Color name.   Color field_color Yes Color selector.    ","categories":"","description":"","excerpt":"Area Vocabulary This is a vocabulary that will be used for adding …","ref":"/openy_docs/docs/content-structure/taxonomy/color/","tags":"","title":"Color"},{"body":"","categories":"","description":"","excerpt":"","ref":"/openy_docs/community/","tags":"","title":"Community"},{"body":"Composer Please always make sure composer.lock file is updated after any changes in composer.json file. You can use composer update command to update any package, in this case composer will take care about updating of composer.lock file.\ncomposer update drupal/metatag Also you can use composer update --lock command to force updating of composer.lock file according to dependencies in composer.json.\nPlease check official composer documentation for details: https://getcomposer.org/doc/01-basic-usage.md)\n","categories":"","description":"","excerpt":"Composer Please always make sure composer.lock file is updated after …","ref":"/openy_docs/docs/development/composer/","tags":"","title":"Composer"},{"body":"In 2020, due to changes in Drupal core release management and demand from Open Y customers to improve upgrade path flexibility and stability, the Open Y team added extended composer version constraints to our composer.json.\nExamples from composer.json:\n \"drupal/ckeditor_bootstrap_buttons\": \"^1.2 || ^2.0.0\", - this line means previous version was 1.2 or any 1.x starting from 1.2, and latest tested - 2.0.0 with allowed any stable 2.x starting from 2.0.0 \"drupal/custom_formatters\": \"^3.0 || ^3.0@beta\", - tested with 3.0 beta of custom_formatters and allowed any 3.x starting from 3.0 (when it will be released)  By having multiple OR (||) conditions we are providing information for developers on which versions could be used for upgrades. There are cases when the latest, even stable version of dependency could be incompatible with some other functionality and it makes sense to keep the version older while functionality is in the process of upgrading.\nFor example, if, for some reason, custom_formatters 3.0 won’t be compatible with any of Open Y dependencies at the time of release, a developer can select an older beta version in order to proceed with the upgrade.\nTo select a specific version of a dependency when you do an upgrade of Open Y, add a dependency and its version alongside Open Y at the composer require... step.\nFor example:\nfrom upgrade doc\ncomposer require ymcatwincities/openy:NEW_VERSION_HERE --no-update composer update --prefer-dist --with-dependencies --prefer-stable --no-suggest then change the dependency version\ncomposer require ymcatwincities/openy:NEW_VERSION_HERE --no-update composer require drupal/custom_formatters:3.0@beta1 You can change any of the dependency versions without upgrading Open Y by running only the composer require... command for specific dependencies and Drupal Update DB routines afterward.\nCheck official Composer documentation about version constraints and updating Drupal modules with Composer.\n","categories":"","description":"","excerpt":"In 2020, due to changes in Drupal core release management and demand …","ref":"/openy_docs/docs/wiki/composer-version-constraints-for-open-y/","tags":"","title":"Composer-version-constraints-for-Open-Y"},{"body":"Add import social posts to site (Facebook, Instagram, Twitter)\nHow configure import of posts from the social networks Given: As an Open Y site developer, I want to be able import posts from company’s accounts form social networks (Twitter, Facebook, Instagram) and save them as content on the site.\nHow to:\n Open configuration page /admin/config/social_feed_fetcher_settings - Configuration -\u003e Social Feed Settings Select checkbox for needed social network and add additional settings. Every social network has their own API, please read documentation for this settings on the official pages of each social networks. When all settings will be filled - click on the button - Run Cron. Import is started. )  ","categories":"","description":"","excerpt":"Add import social posts to site (Facebook, Instagram, Twitter)\nHow …","ref":"/openy_docs/docs/development/configuration-for-social-posts-import/","tags":"","title":"Configuration for social posts import"},{"body":"Welcome to the Content Structure documentation.\nHere you can find all needed technical descriptions about content types can be used by Open Y site builders. The Open Y core team decided to finalize and stick to specifictions of fields, created naming conventions aimed to help developers to maintain and upgrade their sites alongside Open Y development timeline.\n","categories":"","description":"","excerpt":"Welcome to the Content Structure documentation.\nHere you can find all …","ref":"/openy_docs/docs/content-structure/","tags":"","title":"Content Structure"},{"body":"Welcome to the Open Y Content Types documentation\nIn terms of Open Y - content types are bundles of node entity of the Drupal Framework. You can find a much more low level documentation at drupal.org.\nOpen Y has a bunch of content types shipped for the convenience of usage the resulting site. We are not limiting amount of content types, could be added by developers, so the list is not final. The only rule we are trying to follow is to cover shipped list of content types by Open Y upgrade path.\n","categories":"","description":"","excerpt":"Welcome to the Open Y Content Types documentation\nIn terms of Open Y - …","ref":"/openy_docs/docs/content-structure/content-types/","tags":"","title":"Content Types"},{"body":"Contributing to Open Y Issues If you have a support request, you’ve found a bug or you have a feature request:\n Search through known issues/requests https://github.com/ymcatwincities/openy/issues Create new issue https://github.com/ymcatwincities/openy/issues/new  Pull Requests If you have some time to make a contribution to the project, here are the steps that will help you:\n Create fork of main project. How to create fork. Commit \u0026 push changes into your fork Create new Pull Request. How to create Pull Request. Write steps for review. In this way maintainers can go through steps on build to verify your fix/feature. Ensure steps for review added to README.md file in a module’s/project’s directory if it makes sence to check them on regular basis. Often this is needed for crucial parts of the system which is main business functionality of the component. Example of super simple steps for review see in Quickstart section of location_finder module, plese. Create Drupal tour module, based on steps for review and ship it with the module which provides a functionality. Wait for a CI build and ask maintainers for review.  Important: make sure your git email is associated with account on drupal.org, otherwise you won’t get commits there.\nDrupal.org credits If you would like to get drupal.org credits for your contribution:\n Create issue on drupal.org Link drupal.org issue to GitHub Pull Request Specify in GitHub Pull Request link to drupal.org issue Once PR has been merged, reviewer will close drupal.org issue with appropriate credits.)  ","categories":"","description":"","excerpt":"Contributing to Open Y Issues If you have a support request, you’ve …","ref":"/openy_docs/docs/development/contributing/","tags":"","title":"Contributing"},{"body":"How to Create new View mode and use As with any other entity in drupal, when it comes to render the rendering it in different contexts, you might want to have specific viewmodes.\nHere you can find instructions how you can add new view modes into embedded entity form on Open Y distribution.\nHow-to create new View mode  Go to ‘View modes’ page: Structure -\u003e Display modes -\u003e View modes (or visit the URL: /admin/structure/display-modes/view )   Create new view mode: click ‘Add view mode’ button and select entity type (or visit the URL: /admin/structure/display-modes/view/add )  or after each entity type you can see ‘Add new {Name} view mode’ and click on it Select “Media” and then give a name to your new viewmode (or visit the URL: /admin/structure/display-modes/view/add/media )   How-to use new View mode  Go to Configuration -\u003e Text editor embed buttons (or visit the URL: /admin/config/content/embed )   Then make sure you enable the new viewmode in “Allowed Entity Embed Display plugins”, and at the bottom of the page click “Save”. )  ","categories":"","description":"","excerpt":"How to Create new View mode and use As with any other entity in …","ref":"/openy_docs/docs/development/create-view-modes/","tags":"","title":"Create View Modes"},{"body":"Block Custom Simple A simple block with a body.\nFields    Name Machine name Required Description     Icon field_icon No Icon for block.   Icon class field_icon_class No Provide a “Font Awesome” icon name, e.g. flag, car, info. Overrides image icon.   Body field_sb_body No Enter body text.   Link field_sb_link No Add link to the block.   Title field_sb_title No Title to display at top of block.    ","categories":"","description":"","excerpt":"Block Custom Simple A simple block with a body.\nFields    Name Machine …","ref":"/openy_docs/docs/content-structure/blocks/custom-simple/","tags":"","title":"Custom Simple"},{"body":"See also the Data Layer module readme datalayer/README.md\nThe Data Layers module output data on the page in a json format. By default it will output properties (langcode, vid, name, uid, created, status, roles) and related taxonomy for any node, user, or any route based entity.\nA limited set of properties are available via the Data Layers configuration form at /admin/config/search/datalayer (langcode, vid, name, uid, created, status, roles).\nAdding additional properties can be done through use of hook_datalayer_meta().\nfunction my_module_datalayer_meta() { return array( 'property', ); } It will be added to the page as:\n{ \"entityProperty\": \"whatever the value is\" } Altering which properties will be output can be done via hook_datalayer_meta_alter().\nfunction my_module_datalayer_meta_alter(\u0026$properties) { // Override module norm in all cases.  unset($properties['entityUid']); // Specific situation alteration...  $type = false; if ($obj = _datalayer_menu_get_any_object($type)) { if ($type === 'node' \u0026\u0026 in_array(array('my_bundle', 'my_nodetype'), $obj-\u003etype)) { // Remove author names on some content type.  if ($key = array_search('name', $properties)) { unset($properties[$key]); } } elseif ($type === 'my_entity_type') { // Remove some property on some entity type.  if ($key = array_search('my_property', $properties)) { unset($properties[$key]); } } } } Adding additional data can be done using datalayer_add().\nfunction _my_module_myevent_func($argument = FALSE) { if ($argument) { datalayer_add(array( 'drupalMyProperty' =\u003e $argument, 'userAnotherProperty' =\u003e _my_module_other_funct($argument), )); } } To alter the data to be output use hook_datalayer_alter().\nfunction my_module_datalayer_alter(\u0026$data_layer) { // Make the title lowercase on some node type.  if (isset($data_layer['entityBundle']) \u0026\u0026 $data_layer['entityBundle'] == 'mytype') { $data_layer['entityLabel'] = strtolower($data_layer['entityLabel']); } } ```) ","categories":"","description":"","excerpt":"See also the Data Layer module readme datalayer/README.md\nThe Data …","ref":"/openy_docs/docs/development/datalayer/","tags":"","title":"DataLayer"},{"body":"Daxko Relates to: [Program Registration (Daxko)](../Paragraphs/Program Registration (Daxko).md)\nConfiguration setting at /admin/config/development/daxko\nAccount configuration must be setup before the Program Registration paragraph will work.)\n","categories":"","description":"","excerpt":"Daxko Relates to: [Program Registration (Daxko)](../Paragraphs/Program …","ref":"/openy_docs/docs/development/daxko/","tags":"","title":"Daxko"},{"body":"History In 2019 the Open Y team started decoupling major components to streamline the distribution and simplify support.\nCommunication started in the Community Board - Ejecting modules from OpenY distro as independent projects.\nThe decoupling process is ongoing. See the index of decoupled projects.\nIn 2021 the Open Y core team faced coupling blockers in the distribution during the upgrade from Drupal 8 to Drupal 9\nTo formalize the ongoing development and maintenance strategy, the Open Y core team shared its decoupling plan with the wider community in mid-2021.\nThis document elaborates on those processes.\nPolicy  Every new component or sub-project of Open Y should be developed in its own repository - either on GitHub or Drupal.org.  Drupal.org example: paragraph_skins GitHub Example: openy_activity_finder   The decoupled project could be  part of Open Y core - e.g. Activity Finder and added to Open Y profile by default, or not part of the core, e.g. Open Y Membership Framework which could be installed later.   GitHub should be used when there is no strategy to make a component or project available for the wider Drupal community - that is, when it is tied to YMCA business and unlikely to be leveraged by somebody else. Drupal.org should be used when the component could be useful to projects outside of Open Y.  Process for creating a new decoupled component  Create a new GitHub/Drupal.org repository. Work on getting an initial release with at least beta version stability. Create a composer.json file for the component in order to be able to start using it via composer. See Virtual Y for an example. Make it available for the public via packagist.org or drupal.org as a release. Ensure podarok is added as a co-maintainer to the respective system. Suggest adding to Open Y by opening an issue. If approved, create a Pull Request adding it as a dependency in composer.json. Ensure this component is enabled in any of the packages maintained in the Open Y profile installation Ask for review and release, according to the release plan.  for decoupling an existing component of Open Y Follow the steps above, but:\n After creating the repo, filter the selected component by running git filter-branch --subdirectory-filter ... from the latest development branch of the Open Y profile. This keeps credits of work done for this component as a part of the Code of Conduct. After separating the code, ensure the ejected code is not duplicated in the Open Y profile. Remove duplicated code in the same Pull Request in which you add the new dependency.  Examples How to update module on Drupal.org  Git filter-branch to get a history of changes. Change git origin to Drupal.org project. Create a new branch and push the code to Drupal.org. Create and push tag to Drupal.org. Create a release on drupal.org. Update composer.json in this distribution with a new tag.  How to decouple module from YN to Drupal.org Example: paragraph_skins\ngit clone git@github.com:ymcatwincities/openy.git decouple rm -rf decouple_copy \u0026\u0026 cp -a decouple decouple_copy cd decouple_copy git filter-branch --subdirectory-filter docroot/modules/contrib/paragraph_skins git clean -dfx git remote remove origin \u0026\u0026 git remote add origin git@git.drupal.org:project/paragraph_skins.git git pull origin 8.x-1.x --allow-unrelated-histories # Resolve conflicts if applicable. git push origin production:8.x-1.x # Create tags and release on Drupal.org How to decouple module from Open Y to Open Y Subprojects Request a repository for the module. Example: shared_content_server\ngit clone git@github.com:ymcatwincities/openy.git decouple rm -rf decouple_copy \u0026\u0026 cp -a decouple decouple_copy cd decouple_copy git filter-branch --subdirectory-filter docroot/profiles/contrib/openy/modules/custom/SOME_MODULE_HERE git clean -dfx git remote remove origin \u0026\u0026 git remote add origin git@github.com:Open-Y-subprojects/SOME_MODULE_HERE.git git push origin production # Create composer.json on the decoupled repository. Example: https://github.com/ymcatwincities/openy_activity_finder/blob/4.x/composer.json git clone git@github.com:ynorth-projects/distribution.git yn-distribution # Update composer json for distrubution. See below Example for Activity Finder\nReferences  A useful article for future decoupling - Move files from one repository to another, preserving git history  ","categories":"","description":"","excerpt":"History In 2019 the Open Y team started decoupling major components to …","ref":"/openy_docs/docs/wiki/decouple-component-from-open-y-as-independent-module-project/","tags":"","title":"Decouple-component-from-Open-Y-as-independent-module-project"},{"body":"Inventory of external modules available via Composer Check all GitHub for the tag openy-decoupled\nGitHub hosted  ymcatwincities/openy_block_modal - Implements a simple block with a body and title that will be used to display modal windows. ymcatwincities/openy_memberships - Membership Framework for OpenY and Drupal. ymcatwincities/openy_prgf_sidebar_menu - SideBar menu for referencing menu blocks and using in SideBars across different pages. ymcatwincities/openy_loc_finder - Extended Location Finder Open-Y-subprojects/reqclique_gxp_sync - Reqclique Group Exercise Sync open-y-subprojects/virtual_y_signaling_server - Signalling server for Virtual Y open-y-subprojects/openy_daxko_gxp_syncer - Daxko GroupEx PRO v1 API Syncer into Program Event Framework open-y-subprojects/ynorth_gxp_spots_proxy - Availability Spots Cache Proxy for Groupex PRO embed API Syncer into PEF open-y-subprojects/openy_node_alert - Alerts APP for Open Y open-y-subprojects/openy_focal_point - Open Y Focal Point routines open-y-subprojects/shared_content_server - Shared Content Server ynorth-projects/openy_node_session - Open Y Node Session ynorth-projects/openy_repeat - Repeat API for PEF. Schedules APP built in Vue.js ynorth-projects/openy_pef_gxp_sync - Groupex Pro Embed/OpenY Syncer into PEF ymcatwincities/ymca_sync - Syncer backend core ymcatwincities/openy_activity_finder - Activity Finder app ymcatwincities/media_entity_document - Media Entity Document ynorth-projects/openy_prgf_session_table - if you need to present couple of Sessions in a table view without using any complex app like Schedules or Activity Finder  Drupal.org hosted  drupal/upgrade_tool - Open Y Upgrade Tool ymcatwincities/paragraph_skins - Skins component from OpenY. Decoupled to drupal/paragraph_skins drupal/openy_autocomplete_path - Open Y Autocomplete Path. Works in Drupal 8 only. Removed from 9.* Open Y releases.  Decoupling mind-map ","categories":"","description":"","excerpt":"Inventory of external modules available via Composer Check all GitHub …","ref":"/openy_docs/docs/wiki/decoupled-external-projects-of-openy/","tags":"","title":"Decoupled-(-external-)-projects-of-OpenY"},{"body":"In order to generate composer.json, Drupal.org defines specific rules in the modules info.yml file\nIf you need to add a dependency to the Drupal.org module you should provide a format:\ndependencies:- drupal:webformIn this case, your module will have composer dependency to drupal/webform\nIf you make it:\ndependencies:- whatevernameyouwish:webformthe Drupal.org packaging routine will replace it with drupal:webform on the fly.\nIn order to break the dependency on composer level but still tell Drupal core to have module dependency while resolving dependencies during the process of enabling the module, you should use the simplified format:\ndependencies:- webformIn the above case, composer won’t have any dependencies, but your module will require that the webform module be available in the codebase in order to be enabled by Drupal core.\n","categories":"","description":"","excerpt":"In order to generate composer.json, Drupal.org defines specific rules …","ref":"/openy_docs/docs/wiki/dependencies-in-drupal-info.yml/","tags":"","title":"Dependencies-in-drupal-info.yml"},{"body":"Occasionally old code is deprecated from the Open Y codebase. In order to minimize disruption to existing sites, we use the following process:\n Decide - Before removing components from the distribution we gather feedback from the community to protect active projects from having components accidentally removed. This is accomplished via messaging in the Open Y Slack and discussion on Monthly calls. Deprecate - Once a decision is made, we notify users that the feature will be removed soon. The deprecated component is moved from the Open Y package group to the Open Y ( Deprecated ) package group. For example: Deprecate Daxko Program Registration Paragraph. Deprecation notices are posted in point and quarterly releases of Open Y. Uninstall - Before removing code, components should be uninstalled via an update hook in the distribution and any hard dependencies should be removed. Uninstalls must occur at least one point (fix) release after the deprecation notice. Remove - Complete removal of the component from the codebase or composer.json should happen at least one quarterly (feature) release after the deprecation notice.  Additionally, the following housekeeping steps should be taken when deprecating a component:\n The release where the deprecated component has been uninstalled should be added to the important versions document in the Wiki. Code should be decoupled to external GitHub repositories with all history of commits, marked as openy-decoupled, and archived.  ","categories":"","description":"","excerpt":"Occasionally old code is deprecated from the Open Y codebase. In order …","ref":"/openy_docs/docs/wiki/deprecate-and-remove-components-from-open-y/","tags":"","title":"Deprecate-and-remove-components-from-Open-Y"},{"body":"Welcome to the development corner of the Open Y distribution.\nHere you can find all needed documentation and how-to work with Open Y codebase from developer’s point of view.)\n","categories":"","description":"","excerpt":"Welcome to the development corner of the Open Y distribution.\nHere you …","ref":"/openy_docs/docs/development/","tags":"","title":"Development"},{"body":"Open Y Developer FAQ Local Development Getting started with a local environment To start developing you need to obtain the latest Open Y codebase. See the openy-project repository for the full process.\nThis video tutorial will walk you through how to initiate a local development environment.\nThe Open Y team has pre-built environments and walkthroughs using either Vagrant and VirtualBox or Docker and Docksal. Choose the method that you’re most comfortable with and get started!\nGathering information about your local environment To best troubleshoot issues, it’s helpful for the Open Y team to have as much information about your environment as possible. Before you ask for help, watch this tutorial on how to gather that information.\nDebugging with Xdebug in your local The Docksal project maintains detailed information for using Xdebug with VSCode, PHPStorm, and more.\nContributing Who should I specify for review? We have a best practice to get at least 2 independent reviews before merging code. Please request a review from the Open Y Lead Technical Architect (Andrii Podanenko, @podarok) and somebody else (from your team or another Open Y partner).\nWho is responsible for merging? The Open Y Lead Technical Architect (Andrii Podanenko, @podarok) is responsible for final approval, merging, and release management on the Open Y project.\nWhat labels in PRs should I use? What milestone should I specify? Why I can’t add labels or specify milestones? All of these require you to be granted Contributor access to the Open Y GitHub repository. Contact the Open Y Lead Technical Architect (Andrii Podanenko, @podarok) to get access. Labels are usually set by the Open Y Core Team.\nWhy are the steps for review in Pull Requests so important? When you send your code for review our team must know both how to review the code and what to test to verify the functionality. You are the only source of truth for how to check functionality. Adding steps for review will help the reviewer and QA team to verify that the issue is resolved.\nWhy should I add a reference to the GitHub issue in my PR description? As we are a community-led project, there may be a long time between creating an issue and resolving it in a Pull Request. The reviewer should be able to understand the context and possible discussion around the issue to be resolved with your PR. The more context we have, the better and faster we can review the request.\nIn what format should I add commits, should I add internal Jira task ID or GitHub issue? It is important to make commit messages with some sort of sense for the human to read them when digging back in history. Adding any task identifications from the project management system is allowed.\nWhat is the “DeepCode” bot? DeepCode bot is the automated, machine learning code review system that analyses huge amounts of GitHub repositories and is sometimes useful to find common issues before humans do reviews. It is helpful, but not always necessary to fix issues found by the DeepCode bot because sometimes it fails. If you see a comment be sure to read the report. If the report makes sense, then fix the issue suggested by the bot.\nBuild Automation \u0026 CI What CI processes does Open Y have in place? To get a fully working Open Y site for the code change you are about to push for review there is a build generating system installed for the Open Y GitHub repository that automatically generates a dedicated temporary website with your changes applied.\nWhy are some builds created automatically and some not? By default, builds are configured for trusted users, so if you are getting a message from the bot like\n “Can one of the admins verify this patch? Use “o+k to test” or ‘’t+est this please” for manual build execution.\"\n then your username is not in the allowlist and somebody from the Open Y Core Team can comment to initiate a build for you. Contact @podarok to get your build generated or your name added to the allowlist.\nHow do I create a build for my PR? If you are on the allowlist then simply create a Pull Request from your fork to the Open Y repository. After up to 30 minutes you’ll receive comments with links to the generated site builds.\nWhen are builds deleted from the server? Usually, you have a day for the build to be wiped out from the server. If there is an upcoming deadline and many PRs are coming in, the lifetime could be significantly shorter, down to a couple of hours.\nWho should I contact to get logs from the build server? Andrii Podanenko @podarok or Dima Danylevskyi @danylevskyi\nWhat should I do if tests fail? If you have any concerns with reports generated by the code checkers that are used in Open Y ask Open Y Lead Technical Architect Andrii Podanenko to get them resolved. The majority of these systems are works-in-progress and it is helpful to have feedback on them.\nHow do I install Open Y on Pantheon hosting See request from a community. The solution is described in Pantheon’s documentation on nested docroots. We suggest that you maintain your own composer.json with the specified web-root directory, as described in the Pantheon examples.\n","categories":"","description":"","excerpt":"Open Y Developer FAQ Local Development Getting started with a local …","ref":"/openy_docs/docs/wiki/development-faq/","tags":"","title":"Development-FAQ"},{"body":"Open Y Distribution The Open Y platform is a content management system that uses Drupal 8 functionality and useful modules from YMCAs and digital partners. It’s easy and free to use—everyone is welcome to implement Open Y and run Open Y projects.\nIn 2016 a group of YMCA digital, marketing and technology experts recognized the digital opportunities that exist if we work together as a community and established Open Y.\nA core team led by a small group of YMCAs including the Greater Twin Cities, Greater Seattle and Greater Houston:\n Pays for expenses associated with managing Open Y Maintains the Open Y content management system Ensures all basic functionality accessible from the content management system is available free of charge—those who contribute cannot charge others for what is shared Strives to be aware of issues found within the Open Y content management system Is not liable for bugs, crashes or performance issues of the content management system Invites and approves digital partners to join Offers training for Open Y Specialists—digital partners that are very familiar with the platform Offers certification for Open Y Integrators—digital partners that can install and work directly on the codebase Distributes communication about Open Y Organizes events for the Open Y community—including an annual meeting each June  Open Y is similar to the Thunder Coalition for the publishing industry, which has generously agreed to share some of the same concepts and content that you see used on this site.\nDocumentation Documentation is available at https://github.com/ymcatwincities/openy/tree/8.x-1.x/docs\nDetails For details please visit http://www.openymca.org\n","categories":"","description":"","excerpt":"Open Y Distribution The Open Y platform is a content management system …","ref":"/openy_docs/docs/","tags":"","title":"Documentation"},{"body":"This document is no longer updated.\nTo update the version of Drupal being used on your site independent of Open Y see Updating Drupal Core via Composer. Be aware that openy/composer.json may set Drupal core version constraints.\n February 2021 release tagged Drupal core both 9.0.x and 9.1.x as allowed to be used.\nComposer by default is installing the latest stable version, so a command\ncomposer create-project ymcatwincities/openy-project:dev-9.2.x-development OPENY --no-interaction will install Open Y on latest 9.1.x Drupal core.\nIf there is a need to stay on Drupal 9.0.x stable core please use\ncomposer create-project ymcatwincities/openy-project:dev-9.2.x-development OPENY --no-interaction cd OPENY composer require drupal/core:~9.0.7 where 9.0.7 - is a needed version for your Open Y instance\nFor modules see Composer-version-constraints-for-Open-Y\n","categories":"","description":"","excerpt":"This document is no longer updated.\nTo update the version of Drupal …","ref":"/openy_docs/docs/wiki/drupal-9-core-dependencies-version-flexibility/","tags":"","title":"Drupal-9-core-dependencies-version-flexibility"},{"body":"Facility Facility content type is used for adding facilities on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the facility item.   Neighborhood field_location_area No A taxonomy reference field using the Area Vocabulary(area).   Type field_facility_type No A taxonomy reference field using the “Facility Type” vocabulary.   Facility Branch field_facility_loc No A entity reference field to reference the related Branch node.   Meta Tags field_meta_tags No A meta tags field allows us to provide structured metadata and Graph meta tags for Facebook, Pinterest, LinkedIn and other social networking sites.   Contact Field group     Address field_location_address Yes An address field that will provide the ability to add details about the locations. Details to be completed: AddressCityStateZip Code   Facility Coordinates field_location_coordinates No Input for providing the latitude and longitude information.   Phone field_location_phone Yes Input for providing the phone information.   Fax field_location_fax No Input for providing the fax information.   Email field_location_email No Input for providing the email information.   Directions field_location_directions No A link field for adding the directions link.   Content Area Field group     Content field_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Sidebar Area Field group     Content field_sidebar_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.    URL pattern Content type is using following pattern: /facility/[node:title]\n","categories":"","description":"","excerpt":"Facility Facility content type is used for adding facilities on the …","ref":"/openy_docs/docs/content-structure/content-types/facility/","tags":"","title":"Facility"},{"body":"Facility Type This is a vocabulary that will be used for adding facility type on the site. We will use this for the Facility CT.\nMachine name: facility_type\n","categories":"","description":"","excerpt":"Facility Type This is a vocabulary that will be used for adding …","ref":"/openy_docs/docs/content-structure/taxonomy/facility-type/","tags":"","title":"Facility Type"},{"body":"Featured Blog Posts This is a paragraph type that will be used for the featured stories.\nFields    Name Machine name Required Description     Headline field_prgf_headline No Headline of the banner.   Blog Posts field_fblog_posts Yes Multiple values. Reference field to Blog posts.    ","categories":"","description":"","excerpt":"Featured Blog Posts This is a paragraph type that will be used for the …","ref":"/openy_docs/docs/content-structure/paragraphs/featured-blog-posts/","tags":"","title":"Featured Blog Posts"},{"body":"Featured Content This is a paragraph type that will be used for the featured content.\nFields    Name Machine name Required Description     Headline field_prgf_headline No Headline of the featured content.   Description field_prgf_description No Textarea for the description/body with WYSIWYG, without summary.   Link field_prgf_link No Link field that supports internal and external URLs.   Style field_prgf_grid_style Yes Select list with following values: 2:2 items per row, 3:3 items per row, 4:4 items per row   Column description field_prgf_fc_clm_description No Multiple values. Textarea for the column with WYSIWYG, without summary.    ","categories":"","description":"","excerpt":"Featured Content This is a paragraph type that will be used for the …","ref":"/openy_docs/docs/content-structure/paragraphs/featured-content/","tags":"","title":"Featured Content"},{"body":"Featured Highlights Provides a paragraph containing blocks of specific types positioned as 2, 3 or 4 blocks per row.\nFields    Name Machine name Required Description     Title field_prgf_title No Paragraph title.   Style field_prgf_grid_style Yes Select list with following values: 2:2 items per row, 3:3 items per row, 4:4 items per row.   Featured Highlights block field_prgf_block_ref_unlim Yes Create a new one or pick up an existing block of given types: Featured Highlight Block, Basic Block, Simple Block, Date block.    ","categories":"","description":"","excerpt":"Featured Highlights Provides a paragraph containing blocks of specific …","ref":"/openy_docs/docs/content-structure/paragraphs/featured-highlights/","tags":"","title":"Featured Highlights"},{"body":"Featured News Posts This is a paragraph type that will be used for the featured news.\nFields    Name Machine name Required Description     Headline field_prgf_headline No Headline of the banner.   News Posts field_fnews_posts Yes Multiple values. Reference field to News posts.    ","categories":"","description":"","excerpt":"Featured News Posts This is a paragraph type that will be used for the …","ref":"/openy_docs/docs/content-structure/paragraphs/featured-news-posts/","tags":"","title":"Featured News Posts"},{"body":"Block Flexible Content A block with amenities list of the current branch.\nFields    Name Machine name Required Description     Node reference field_node_ref Yes Provide reference to Node .    ","categories":"","description":"","excerpt":"Block Flexible Content A block with amenities list of the current …","ref":"/openy_docs/docs/content-structure/blocks/flexible/","tags":"","title":"Flexible"},{"body":"#Fonts\nThe majority of the fonts used by the Open Y distribution are freely available, except for Cachet.\nHelvetica is used for paragraph text, with Verdana as a fallback. Page titles, headers, highlighted text, etc, use Cachet, with Ubuntu Condensed as a fallback.\nThe font definitions in the distribution’s main theme, Open Y Rose, are set to use Cachet, but fallback to Ubuntu Condensed if the font is not present.\nfont-family: \"Cachet W01 Bold\", 'Ubuntu Condensed', sans-serif;  Ubuntu Condensed Ubuntu Condensed is a free font available from Google Fonts, https://fonts.google.com/specimen/Ubuntu+Condensed .\nIf you look at the openy_rose.libraries.yml file you can see Ubunutu Condensed is already linked as part of the theme.\nglobal-styling: css: base: //fonts.googleapis.com/css?family=Ubuntu+Condensed:400,700: {}  Cachet Cachet, specifically “Cachet W01 Medium”, is part of the YMCA styleguide. It is a commercial font, and must be purchased for individual sites. It cannot be distributed as part of the Open Y distribution or hosted on Drupal.org.\nThe font can be purchased from fonts.com, https://www.fonts.com/font/monotype/cachet/book .\nInstalling Cachet There are a number of ways to get Cachet setup on your site. As long as the font gets linked in the page it should get used, since it is already part of the font declarations.\nIf you purchase Cachet from fonts.com, add the URL you are provided to the global-styling library in openy_rose.libraries.yml, right where Ubuntu Condensed is linked.\n css: base: //fast.fonts.net/cssapi/abcdef-12345-tuvwxyx-67890.css: {} //fonts.googleapis.com/css?family=Ubuntu+Condensed:400,700: {}  You may also need to add a JavaScript file provided by fonts.com. You can add that in the same global-styling library.\njs: //fast.fonts.net/jsapi/12345-abcdef-67890.js: {}  Another option is to use the @font-your-face Drupal module, https://www.drupal.org/project/fontyourface .\nOnce installed you can connect your Drupal site to your font.com account, or one of the other font providers, and have the font automatically retrieved and added to your site. Follow the directions provided by the module to connect to your font provider account.)\n","categories":"","description":"","excerpt":"#Fonts\nThe majority of the fonts used by the Open Y distribution are …","ref":"/openy_docs/docs/development/fonts/","tags":"","title":"Fonts"},{"body":"Gallery This is a paragraph type that will be used for the gallery content.\nFields    Name Machine name Required Description     Headline field_prgf_headline Yes Headline of the gallery.   Description field_prgf_description No WYSIWYG field without summary.   Link field_prgf_link No Link field that should store internal and external links.   Images field_prgf_images No Entityreference to media image. Multiple values.    ","categories":"","description":"","excerpt":"Gallery This is a paragraph type that will be used for the gallery …","ref":"/openy_docs/docs/content-structure/paragraphs/gallery/","tags":"","title":"Gallery"},{"body":"  #td-cover-block-0 { background-image: url(/openy_docs/featured-background_hu7c3508149195da5eb41afb368d166c0f_85952_960x540_fill_q75_catmullrom_top.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/openy_docs/featured-background_hu7c3508149195da5eb41afb368d166c0f_85952_1920x1080_fill_q75_catmullrom_top.jpg); } }  Welcome to Open Y: A Docsy Example Project! Learn More   Download   Porridge temperature assessment - in the cloud!\n         Goldydocs provides a single web UI providing visibility into porridge temperature, chair size, and bed softness metrics! You can even find out who’s been eating your porridge.\n(Sadly, Goldydocs isn’t a real project, but you can use this site as an example to create your own real websites with Docsy)\n      New chair metrics! The Goldydocs UI now shows chair size metrics by default.\nPlease follow this space for updates!\n    Contributions welcome! We do a Pull Request contributions workflow on GitHub. New users are always welcome!\n Read more …\n   Follow us on Twitter! For announcement of latest features etc.\n Read more …\n     This is the second Section        Download from AppStore Get the Goldydocs app!\n    Contributions welcome! We do a Pull Request contributions workflow on GitHub. New users are always welcome!\n Read more …\n   Follow us on Twitter! For announcement of latest features etc.\n Read more …\n     This is another Section     ","categories":"","description":"","excerpt":"  #td-cover-block-0 { background-image: …","ref":"/openy_docs/","tags":"","title":"Goldydocs"},{"body":"How to configure search tracking in Google Analytics account ##Prerequisites Google Analitycs account to track you site should be created. Google Analitycs contrib module should be enabled and configured to use existing GA account.\n##Steps\n  Log in to Google Analytics account that configured to track your Open Y site.\n  Click Admin button in bottom right corner of main screen   Click View Settings   Scroll to “Site Search Settings” section and enable “Site Search Tracking” switch   Fill query parameter field with q, query values and click Save\n  Reports about the search tracking you can find at main screen in Behavior → Site Search Section\n  Attention: Data processing latency for search tracking reports is 24-48 hours (see https://support.google.com/analytics/answer/1070983?hl=en#DataProcessingLatency))\n","categories":"","description":"","excerpt":"How to configure search tracking in Google Analytics account …","ref":"/openy_docs/docs/development/google_analytics_search/","tags":"","title":"Google_Analytics_Search"},{"body":"Google Custom Search configuration The Open Y release 8.2.4 introduces Google Custom Search for the website out of the box.\nEnabling the module Fresh installations The search feature is included in the Extended installation type. For Standard see the Existing websites section.\nIf you are installing a fresh Open Y website and going through the installation process via the Web interface, on the 3rd party integration step you can specify Google Search ID. If you specify the Google Search ID in this form your site’s search feature is up.\nExisting websites The search feature is not automatically enabled after upgrading an Open Y website. You have to manually enable it.\nIn order to do that:\n Log in as an admin (or a user with the administrator role). Go to the Open Y package install page (Admin menu \u003e Open Y \u003e Extend \u003e Install, or /admin/openy/extend/list) Find the SEARCH package there, tick the checkbox and submit the form.  Now the search modules are enabled and the header of the website should have a search field. Upon installation, the modules create a Landing page for search results and point the header search form to the page.\nConfiguring the Google Search modules  Go to the Google Search settings form (Admin menu \u003e Open Y \u003e Settings \u003e Google Search settings, or /admin/openy/settings/google-search). Set the value of the Google Search ID field (see the following section for details) and submit the form.  Obtaining Search Engine ID  Go to https://cse.google.com/, register if you haven’t yet, log in if you aren’t logged in. Create the Search Engine (this process is explained in Google documentation https://support.google.com/customsearch/answer/4513882?hl=en\u0026ref_topic=4513742):  Click “New Search Engine”. Specify the domain of your website (e.g. www.openymca.org). Specify the name of the Search Engine (e.g. openymca.org). Click “Create”.   On the newly created Search Engine page there is the Search engine ID field. Use this value in the Open Y Google Search configuration form.  Configuring the Search Engine look and feel  Go to Look and feel section of the Search Engine In the Layout tab, select Full width option and click Save  If this change hasn’t made, the search results on the website are shown in a popup window.\nDealing with ads By default, newly created Search engines use Free Edition (with ads) of the service. As YMCAs are non-profit organizations they have the option to switch to Non-profit Edition of the CSE, where it is possible to disable ads.\nTake a look here https://support.google.com/customsearch/answer/4542102?hl=en\u0026ctx=topic\nIf you are already registered as a Non-profit in Google:\n From the CSE Control Panel, select the search engine you want to change. Click Setup then Make Money Toggle the Show Ads option to off.  Advanced setup Official Google documentation https://support.google.com/customsearch/topic/4542213?hl=en\u0026ref_topic=4513868\nMutli-site search You can add not only your website’s domain but other domains as well if you have other websites dedicated to your Association but split from the main website.\nYou can also add not only the whole websites but their parts by specifying patterns like example.com/blog/*.\nRefinements and facets https://support.google.com/customsearch/answer/4542637?hl=en\u0026ctx=topic\u0026topic=2642564\u0026visit_id=637166170019174137-3540762397\u0026rd=1\nRefinements let users filter results according to categories you provide.\nRefinements appear in the search results page as tabs. The content of each tab is configured in Search features \u003e Refinement section of the Custom Search Control panel.\nTo set up a dedicated tab in search results for Blog posts do the following:\n In Control panel, go to Search features \u003e Refinements Click Add  Set the name of the refinement to Blog Select Search only the sites with this label for How to search sites with this label? Click Ok   Go to Setup Find Sites to search, click Add  Add the yourymcadomain.org/blog/* in the text field Select Blog in the Label dropdown Select Include just this specific page or URL pattern I have entered Click Save    The search results page now shows the Blog tab that only shows blog entries relevant to the search term.\nPromotions Official Google documentation https://support.google.com/customsearch/answer/4542640?hl=en\u0026ref_topic=4542213\nInformation for developers Google Custom Search Developers documentation \nEnabling via Drush Use the following snippet to enable the package on existing websites:\ndrush en openy_google_search Configuring the module via Drush Use the following snippet when you install Open Y via Drush to set the Search Engine ID:\ndrush site-install openy \\ --account-pass=password \\ --db-url=\"mysql://user:pass@host:3306/db\" \\ --root=/var/www/docroot \\ openy_configure_profile.preset=extended \\ openy_theme_select.theme=openy_rose \\ openy_third_party_services.google_search_engine_id=\"01234567890123456789:abcedefgh\" The openy_third_party_services.google_search_engine_id parameter sets the Search Engine ID (01234567890123456789:abcedefgh in the example).\nUse the following snippet to set the Search Engine ID on already installed websites:\ndrush config-set openy_google_search.settings google_engine_id \"01234567890123456789:abcedefgh\" ```) ","categories":"","description":"","excerpt":"Google Custom Search configuration The Open Y release 8.2.4 introduces …","ref":"/openy_docs/docs/development/googlecustomsearchconfiguration/","tags":"","title":"GoogleCustomSearchConfiguration"},{"body":"Grid columns This is a paragraph type that will be used for field_grid_columns the in Grid Content paragraph.\nFields    Name Machine name Required Description     Description field_prgf_grid_clm_description No Textarea for the description/body with WYSIWYG, without summary.   Headline field_prgf_clm_headline No Headline of the grid content.   Icon field_prgf_clm_icon No Entityreference to media asset. Should allow to upload svgs.   Icon class field_prgf_clm_class No Input field that allows to add the font-awesome icons needed. Description - “Provide a “Font Awesome” icon mane, e.g. flag, car, info. Overrides image Icon.”   Link field_prgf_clm_link No Link field that supports internal and external URLs.    ","categories":"","description":"","excerpt":"Grid columns This is a paragraph type that will be used for …","ref":"/openy_docs/docs/content-structure/paragraphs/grid-columns/","tags":"","title":"Grid columns"},{"body":"Grid Content This is a paragraph type that will be used for the grid content stories.\nFields    Name Machine name Required Description     Style field_prgf_grid_style Yes Select list with following values: 2:2 items per row, 3:3 items per row, 4:4 items per row   Content field_grid_columns Paragraph Grid columns   Description field_prgf_grid_clm_description No Textarea for the description/body with WYSIWYG, without summary.   Headline field_prgf_clm_headline No Headline of the grid content.   Icon field_prgf_clm_icon No Entityreference to media asset. Should allow to upload svgs.   Icon class field_prgf_clm_class No Input field that allows to add the font-awesome icons needed. Description - “Provide a “Font Awesome” icon mane, e.g. flag, car, info. Overrides image Icon.”   Link field_prgf_clm_link No Link field that supports internal and external URLs.    ","categories":"","description":"","excerpt":"Grid Content This is a paragraph type that will be used for the grid …","ref":"/openy_docs/docs/content-structure/paragraphs/grid-content/","tags":"","title":"Grid Content"},{"body":"Group Schedules This is dynamic paragraph that renders the group schedules from GroupEx Pro.\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and is configurable in form display.    ","categories":"","description":"","excerpt":"Group Schedules This is dynamic paragraph that renders the group …","ref":"/openy_docs/docs/content-structure/paragraphs/group-schedules/","tags":"","title":"Group Schedules"},{"body":"This document has been moved to ynorth-projects/openy_pef_gxp_sync.\n","categories":"","description":"","excerpt":"This document has been moved to ynorth-projects/openy_pef_gxp_sync.\n","ref":"/openy_docs/docs/wiki/groupex-pro-quick-start/","tags":"","title":"GroupEx-PRO-quick-start"},{"body":"Our best practices for backporting large features into Open Y, contributing code for others to use, can be found on this Open Y message board post.\n","categories":"","description":"","excerpt":"Our best practices for backporting large features into Open Y, …","ref":"/openy_docs/docs/wiki/how-to-contribute-large-features-into-open-y-backporting-etc/","tags":"","title":"How-to-contribute-large-features-into-Open-Y-(backporting,-etc)"},{"body":"Working with Themes Each Open Y theme was developed independently, either by the Open Y Core Team or by a partner for one specific Y and then contributed back. You can see demos of each theme on the Sandboxes.\nEach theme has its own dependencies and build processes. Please read the steps in each README for details.\nInventory of themes As of December 2021, themes have been decoupled from the Open Y profile to independent projects on Drupal.org.\nCarnation  openy_carnation project on Drupal.org README for getting started with development  Lily  openy_lily project on Drupal.org README for getting started with development  Rose  openy_rose project on Drupal.org README for getting started with development  ","categories":"","description":"","excerpt":"Working with Themes Each Open Y theme was developed independently, …","ref":"/openy_docs/docs/wiki/how-to-develop-themes-in-open-y/","tags":"","title":"How-to-develop-themes-in-Open-Y"},{"body":"Repos involved in releases  Open Y Drupal Profile Distribution ymcatwincities/openy Open Y Project for initiating an Open Y instance - ymcatwincities/openy-project Continuous Integration/DevOps for rebuilding/installing Open Y - ymcatwincities/openy-cibox-build CIBox development environment (Virtualbox, Docker, Vagrant) ymcatwincities/openy-cibox-vm Docksal development environment (Docker, VirtualBox) - ymcatwincities/openy-docksal  Release Management When tagging a new release of Open Y, the Lead Architect takes the following steps:\n Review/Merge/Update ymcatwincities/openy-project (usually composer.json or/and oneline script install) and tag a new release there. Review/Merge all Pull Requests in ymcatwincities/openy that were planned for release. Change the Open Y version in openy.info.yml. Change the Open Y version in major modules if there were changes to them (Activity Finder, PEF, etc). Create Changelog release notes as a draft and include Contributors as well as major issues fixed/introduced. Spin up a copy of an Open Y site and check top priority functionality for regressions. Send for review to Core Team (Craig Paulnock, Paige Kiecker), get approval. Change the Open Y version to next with -dev suffix for developers in openy.info.yml. Refresh the Open Y private mirror on the openy.cibox.tools CI server. Check that the one-click install is working on a fresh DigitalOcean instance ($10: 1CPU 2Gb RAM). Ensure the version of Open Y is the proper one in site info (admin/reports/status). Publish announcement in #developers Open Y Slack channel. Publish announcement in #general Open Y Slack channel.  ","categories":"","description":"","excerpt":"Repos involved in releases  Open Y Drupal Profile Distribution …","ref":"/openy_docs/docs/wiki/how-we-release-openy-distribution-from-code-perspective/","tags":"","title":"How-we-release-OpenY-distribution-from-code-perspective"},{"body":"Open Y development moves quickly and in this document, we flag important versions that should not be skipped while you upgrade your sites.\nDetermining your upgrade path For example: If you are on Open Y 8.1.2 and want to upgrade to Open Y 8.2.8.5 you should make it in a couple of steps\n Upgrade 8.1.2 to 8.1.13.1 Upgrade 8.1.13.1 to 8.2.2.1 Upgrade 8.2.2.1 to 8.2.7.3 Upgrade 8.2.7.3 …  These supplemental documents elaborate on a few specific cases:\n Upgrade from Open Y \u003c8.1.3 Upgrade from 8.1.3 to 8.2.2.1 Upgrade from 8.2.2.3 to 8.2.7.3  Important versions  8.1.13.1 - Optional, when you have a lot of customized code and 8.2.2.1 is failing in most places. 8.2.2.1 - This is a very important step everyone should have. After this version, drush entup stops working. In this version, we finally migrated to the core media subsystem, and before going further it is important to upgrade media by upgrading your site to this version first. 8.2.7.3 - This is a very stable Drupal 8 based Open Y with a bunch of contrib module updates. This is one of the last Drupal 8 based Open Y versions before the upgrade to Drupal 9 core. Also, in 8.2.7.0 and 8.2.7.1 we started to introduce multiple version constraints in composer.json to allow developers to choose between the minimum or latest dependency versions. This is for securing the upgrade path as well as adding flexibility for version selection if needed. 9.2.8.0 - Drupal 9 version which must be used in the upgrade path before going to 9.2.8.1+. This version added 9.0-9.1 Drupal Core and disabled deprecated components. 9.2.10.0 - Removed a bunch of unused modules from distribution.  See Version Constraints practices for Open Y\nKnown issues If you are faced with an issue when composer installs an improper version of drupal/core for the chosen version of Open Y from the list above, please use this trick in order to downgrade:\ncomposer require drupal/core-recommended:9.2.8 Run the above command where your docroot is. Use the current core version instead of 9.2.8.\n","categories":"","description":"","excerpt":"Open Y development moves quickly and in this document, we flag …","ref":"/openy_docs/docs/wiki/important-versions-for-upgrade-path/","tags":"","title":"Important-versions-for-upgrade-path"},{"body":"Open Y leverages Apache Solr for a few features:\n Activity Finder requires Solr Site search can optionally use Solr as per this Pull Request  Quick Start / Upgrade path  Log in as admin. Go to admin/modules and enable the Open Y Search API module.   Approve the next step for enabling Database Search.   Go to the Search API configuration page admin/config/search/search-api. Verify that the “OpenY Database Search” server is enabled. Visit “Search content” index.  tip: Admins can enable and the Solr search and switch the index between servers.\n Index content by clicking “Index now”.   Go to the homepage and search for any keyword.   Verify search results are displayed correctly.  Starting from the Open Y installer  Find the Select search service step displayed during the Open Y installation. Choose from one of these options during installation:  None  Nothing happens if the user chooses this option, search modules are displayed after installation.   Open Y Google Custom Search  Google Custom Search configuration form is displayed if the user chooses this option. The Open Y Google Search module is enabled after installation and ready to use.   Open Y Search API  Search API backend options are displayed in this case with the following options:  Database  The Open Y Search API module is enabled after installation. The database search API server is enabled. The search is ready to use after content indexation.   Solr  Additional installation step with Solr configuration form is displayed in this case and user can specify all params for Solr connection. The Open Y Search API module is enabled after installation, Solr search API server is enabled. The search is ready to use after content indexing (if the correct Solr settings were used).          Switch from database search backend to Solr backend Watch a video tutorial on how to switch an existing site from the database backend to a Solr server. This requires a Solr server to be configured in your environment.\n Edit the “Solr search” server from the Search API configuration admin/config/search/search-api. Add the configuration information for your Solr server. Refer to Drupal’s Search API Solr project for troubleshooting connection information. Save the server and observe that Search API has successfully connected to your server. Edit the “Search content” index and change the “Server” field to the newly configured “Solr Search” index. Visit the “Search content” index and click “Index now” to re-index the content.  ","categories":"","description":"","excerpt":"Open Y leverages Apache Solr for a few features:\n Activity Finder …","ref":"/openy_docs/docs/wiki/install-solr-site-search-for-open-y/","tags":"","title":"Install-Solr-site-search-for-Open-Y"},{"body":"Web Security and Open Y As many parties have moved to Encrypt the Web, https sites and SSL certificates have shifted from “nice to have” to necessities.\nIf you’re running Open Y on a managed platform you most likely have SSL already configured. If you choose to manage Open Y on your own, you’ll have to install a certificate.\nLet’s Encrypt is “a free, automated, and open certificate authority (CA), run for the public’s benefit. It is a service provided by the Internet Security Research Group (ISRG).” Certbot is “a free, open source software tool for automatically using Let’s Encrypt certificates on manually-administrated websites to enable HTTPS.”\nCertbot maintains detailed documentation for installing SSL certificates on a variety of systems. Simply visit Certbot’s instructions wizard and follow the instructions to configure your server.\n","categories":"","description":"","excerpt":"Web Security and Open Y As many parties have moved to Encrypt the Web, …","ref":"/openy_docs/docs/wiki/install-ssl-certificate-for-the-openy-site/","tags":"","title":"Install-SSL-certificate-for-the-OpenY-site"},{"body":"Site installation with drush Use drush site-install command.\nBasically you use something like this:\ndrush site-install openy --account-pass=password --db-url=\"mysql://user:pass@host:3306/db\" --root=/var/www/docroot Complete Open Y profile preset and Open Y Rose theme is used in this case.\nYou can set which preset must be installed by specifying it with openy_configure_profile.preset variable, and theme with openy_theme_select.themevariable e.g.:\ndrush site-install openy --account-pass=password --db-url=\"mysql://user:pass@host:3306/db\" --root=/var/www/docroot openy_configure_profile.preset=extended openy_theme_select.theme=openy_rose ```) ","categories":"","description":"","excerpt":"Site installation with drush Use drush site-install command.\nBasically …","ref":"/openy_docs/docs/development/installationwithdrush/","tags":"","title":"InstallationWithDrush"},{"body":"Landing Page Landing Page content type is used for adding landing pages on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the landing page item.   Layout field_lp_layout Yes Select list with the options: one_column_clean|One Column - Full widthone_column|One Columntwo_column|Two Columnstwo_column_fixed|Two Columns with fixed sidebar (sticky at the top)   Meta Tags field_meta_tags No A meta tags field allows us to provide structured metadata and Graph meta tags for Facebook, Pinterest, LinkedIn and other social networking sites.   Header Area Field group     Content field_header_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Content Area Field group     Content field_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Sidebar Area Field group     Content field_sidebar_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Bottom Area Field group     Content field_bottom_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.    URL pattern Content type is using following pattern: [node:title]\n","categories":"","description":"","excerpt":"Landing Page Landing Page content type is used for adding landing …","ref":"/openy_docs/docs/content-structure/content-types/landing-page/","tags":"","title":"Landing Page"},{"body":"Latest Blog Posts This is dynamic paragraph that renders the latest blog posts that are promoted to the front page.\nIt uses sticky at the top option and order items based on published date (newest at the top).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Latest Blog Posts This is dynamic paragraph that renders the latest …","ref":"/openy_docs/docs/content-structure/paragraphs/latest-blog-posts/","tags":"","title":"Latest Blog Posts"},{"body":"Latest Blog Posts (Branch) This is dynamic paragraph that renders the latest blog posts associated with a branch.\nIt uses sticky at the top option and order items based on published date (newest at the top).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Latest Blog Posts (Branch) This is dynamic paragraph that renders the …","ref":"/openy_docs/docs/content-structure/paragraphs/latest-blog-posts-branch/","tags":"","title":"Latest Blog Posts (Branch)"},{"body":"Latest Blog Posts (Camp) This is dynamic paragraph that renders the latest blog posts associated with a camp.\nIt uses sticky at the top option and order items based on published date (newest at the top).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Latest Blog Posts (Camp) This is dynamic paragraph that renders the …","ref":"/openy_docs/docs/content-structure/paragraphs/latest-blog-posts-camp/","tags":"","title":"Latest Blog Posts (Camp)"},{"body":"Latest News Posts This is dynamic paragraph that renders the latest news posts that are promoted to the front page.\nIt uses sticky at the top option and order items based on published date (newest at the top).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Latest News Posts This is dynamic paragraph that renders the latest …","ref":"/openy_docs/docs/content-structure/paragraphs/latest-news-posts/","tags":"","title":"Latest News Posts"},{"body":"Latest News Posts (Branch) This is dynamic paragraph that renders the latest news posts associated with a branch.\nIt uses sticky at the top option and order items based on published date (newest at the top).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Latest News Posts (Branch) This is dynamic paragraph that renders the …","ref":"/openy_docs/docs/content-structure/paragraphs/latest-news-posts-branch/","tags":"","title":"Latest News Posts (Branch)"},{"body":"Latest News Posts (Camp) This is dynamic paragraph that renders the latest news posts associated with a camp.\nIt uses sticky at the top option and order items based on published date (newest at the top).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Latest News Posts (Camp) This is dynamic paragraph that renders the …","ref":"/openy_docs/docs/content-structure/paragraphs/latest-news-posts-camp/","tags":"","title":"Latest News Posts (Camp)"},{"body":"Limited Time Offer This Paragraph add limited time offer for Home Page based on Landing Page CT.\nFields    Name Machine name Required Description     Subtitle field_lto_subtitle No Enter subtitle for Limited time offer.   Link field_lto_link No Add link for Latest time offer.   Title field_lto_title No Enter title for the Limited Time Offer.    ","categories":"","description":"","excerpt":"Limited Time Offer This Paragraph add limited time offer for Home Page …","ref":"/openy_docs/docs/content-structure/paragraphs/limited-time-offer/","tags":"","title":"Limited Time Offer"},{"body":"Location finder This is paragraph that renders the Location finder block.\nLocation finder block contains locations views displays with branches, camps and facilities.\nFields    Name Machine name Required Description     Location finder field_prgf_location_finder No Block reference to the location_finder block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Location finder This is paragraph that renders the Location finder …","ref":"/openy_docs/docs/content-structure/paragraphs/location-finder/","tags":"","title":"Location finder"},{"body":"Location finder filters This is paragraph that renders the Location finder map with pins and filters.\nFields    Name Machine name Required Description     Location finder field_prgf_location_finder No Block reference to the location_finder block. Should have default value and should be hidden in form display.   Tags style field_prgf_lf_tags_style Yes Tags style that will be used for map tags filter. Default - checkboxes. Second option is multiselect widget with checkboxes.    ","categories":"","description":"","excerpt":"Location finder filters This is paragraph that renders the Location …","ref":"/openy_docs/docs/content-structure/paragraphs/location-finder-filters/","tags":"","title":"Location finder filters"},{"body":"","categories":"","description":"","excerpt":"","ref":"/openy_docs/docs/content-structure/media/","tags":"","title":"Media"},{"body":"Media Tags This is a vocabulary that will be used for adding media tags that will allow you to structurize your media assets library.\nMachine name: media_tags\n","categories":"","description":"","excerpt":"Media Tags This is a vocabulary that will be used for adding media …","ref":"/openy_docs/docs/content-structure/taxonomy/media-tags/","tags":"","title":"Media Tags"},{"body":"Membership Membership content type is used for adding membership on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the membership item.   Description field_mbrshp_description Yes Textarea for the description/body with WYSIWYG, without summary.   Image field_mbrshp_image Yes Media field to upload the image.   Membership info field_mbrshp_info Paragraph Paragraph to indicate the location where the membership is available and the URL.   Location field_mbrshp_location No Select list with locations (branches). Single value.   Link field_mbrshp_link No Link field to provide the membership redirect URL.   Join Fee field_mbrshp_join_fee No Dollar value for how much someone has to pay to join.   Monthly Rate field_mbrshp_monthly_rate No Dollar value for the monthly fee of the membership.    URL pattern Content type is using following pattern: /membership/[node:title]\n","categories":"","description":"","excerpt":"Membership Membership content type is used for adding membership on …","ref":"/openy_docs/docs/content-structure/content-types/membership/","tags":"","title":"Membership"},{"body":"Membership info This is a paragraph type that will be used for field_mbrshp_info the in Membership CT.\nFields    Name Machine name Required Description     Location field_mbrshp_location No Select list with locations (branches). Single value.   Link field_mbrshp_link No Link field to provide the membership redirect URL.   Join Fee field_mbrshp_join_fee No Dollar value for how much someone has to pay to join.   Monthly Rate field_mbrshp_monthly_rate No Dollar value for the monthly fee of the membership.    ","categories":"","description":"","excerpt":"Membership info This is a paragraph type that will be used for …","ref":"/openy_docs/docs/content-structure/paragraphs/membership-info/","tags":"","title":"Membership info"},{"body":"Microsites Menu Provide paragraph containing a microsites menu block.\nFields    Name Machine name Required Description     Menu Block field_prgf_block_ref Yes Block reference to the view/block. Create a new one or pick up an existed menu block.   Hide Main Menu field_prgf_ms_menu_hide_menu No Whether to hide or not the main website menu.    ","categories":"","description":"","excerpt":"Microsites Menu Provide paragraph containing a microsites menu block. …","ref":"/openy_docs/docs/content-structure/paragraphs/microsites-menu/","tags":"","title":"Microsites menu"},{"body":"Module content removal When deleting an entity, where plugins or services of removing module are used, then content removal should be done in the hook_uninstall() of that module. See openy_prgf_camp_menu.install as example.)\n","categories":"","description":"","excerpt":"Module content removal When deleting an entity, where plugins or …","ref":"/openy_docs/docs/development/module-develompent/","tags":"","title":"Module Develompent"},{"body":"News News Post content type is used for adding news posts on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the news item.   Locations field_news_location Yes Reference field to branch and camp nodes. Multiple Values.   Category field_news_category No Reference field for choosing the term from “News Category” vocabulary. Multiple Values.   Meta Tags field_meta_tags No A meta tags field allows us to provide structured metadata and Graph meta tags for Facebook, Pinterest, LinkedIn and other social networking sites.   Content Area Field group     Image field_news_image No Image field for the News item. Entity reference to Media bundle.   Description field_news_description No Textarea for the description/body with WYSIWYG, without summary.   Content field_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Sidebar Area Field group     Related content field_news_related No Reference field for choosing related News nodes. Multiple Values.   Content field_sidebar_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.    URL pattern Content type is using following pattern: /news/[node:title]\n","categories":"","description":"","excerpt":"News News Post content type is used for adding news posts on the site. …","ref":"/openy_docs/docs/content-structure/content-types/news/","tags":"","title":"News"},{"body":"News Category This is a vocabulary that will be used for adding news categories on the site.\nMachine_name: news_category\n","categories":"","description":"","excerpt":"News Category This is a vocabulary that will be used for adding news …","ref":"/openy_docs/docs/content-structure/taxonomy/news-category/","tags":"","title":"News Category"},{"body":"News Posts Listing This is dynamic paragraph that renders the latest news posts and utilizes exposed filters.\n Location Category Text  It uses sticky at the top option and order items based on published date (newest at the top).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"News Posts Listing This is dynamic paragraph that renders the latest …","ref":"/openy_docs/docs/content-structure/paragraphs/news-posts-listing/","tags":"","title":"News Posts Listing"},{"body":"There are plenty of YAML configuration files at the root of the profile. Some of them are standard Drupal configuration and others are Open Y specific.\nBasic .yml files The following ones are very common and can be found in many Drupal modules:\n openy.info.yml (documentation) - defines Open Y as a profile and defines its name and dependencies openy.libraries.yml (documentation) - defines global Open Y drupal asset libraries openy.permissions.yml - defines global Open Y permissions openy.services.yml (documentation) - if you are introducing a service that is needed by all (or the majority of) Open Y modules add it here and store the service class file in the openy/src directory  Open Y specific .yml files There are also a few configurations related to the Open Y installation process and the Open Y package system:\n openy.installation_types.yml openy.themes.yml openy.packages.yml  Open Y packages The Open Y package system introduces a new level of abstraction, shifting from the Drupal standard module level to packages. Packages represent complete Open Y features, which could include multiple modules. A package is a declaration of a group of several modules. You can enable and disable a package, which means the whole set of the associated Drupal modules are enabled or disabled.\nThis approach provides a convenient way of managing Open Y features.\nThe Open Y system module provides a page where the enabled and available packages are listed and can be installed/uninstalled. See the Open Y Extend page (at /admin/openy/extend).\nOpen Y Installation types When an Open Y site is installed there is also another abstraction level - the installation type - which groups packages.\nThe hierarchy is as follows:\n installation type  package  module module   package  module module module   package  module     installation type  package  module      openy.installation_types.yml openy.installation_types.yml defines the high-level presets available during website installation.\nFile structure:\nstandard: name: Standard packages: - alerts - editorial - news - seo - webform extended: name: Extended packages: - alerts - analytics - ... complete: name: Complete/Developer hidden: true packages: - activenet - ... Each installation type has a machine name which is a key of the top-level items.\nProperties of installation types:  name (required) - a human-friendly name of the installation type packages (required) - a list of Open Y packages that are associated with the installation type. The packages are listed when a website is installed via the web-interface hidden (optional) - if the installation type must be hidden when a website is installed via the web interface  If an Open Y site is installed using the web interface there is a step where the installation type can be selected.\nIf an Open Y site is installed using Drush then the installation type can be specified by an optional argument for the drush site-install command (Installation with Drush):\ndrush site-install openy \\ --db-url=\"mysql://user:pass@host:3306/db\" \\ --root=/docroot \\ openy_configure_profile.preset=extended openy.packages.yml Packages are defined in openy.packages.yml. This file is placed in the root of the profile, it’s automatically detected and used by the Open Y installation process.\nFile structure\nblog: name: 'Blog' description: \"Blog package provides a set of modules to maintain and create different blog post listings.\" help: '\u003cp\u003eUsing Blog package you can create and maintain blog posts and create flexible listings of blog posts. Watch a video below to learn more about blog anatomy.\u003c/p\u003e \u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/PTZkgOb8CFE\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen\u003e\u003c/iframe\u003e' modules: - openy_node_blog - openy_prgf_blog_listing - openy_prgf_featured_blogs - openy_prgf_blog_branch - openy_prgf_blog_camp - openy_prgf_blog_latest - openy_txnm_blog_category camps: name: 'Camps' description: \"Camps package provides a set of modules to maintain camps and add them to the location finder page.\" help: '\u003cp\u003eUsing Camps package you can create and maintain Camps and extend location finder page to include them.\u003c/p\u003e' modules: - openy_prgf_camp_menu - openy_loc_camp Each package has a machine name which is a key of the top-level items.\nProperties of packages:  name (required) - a human-friendly name of the package. description (required) - a short description of the package features to show up on the Open Y Extend page. help (required) - an HTML markup for the installation via web interface. It contains a help message that pops up when the package name is clicked on the Select installation type step. modules (required) - a list of Drupal modules that are associated with the package. When the package is installed/uninstalled the associated modules are installed/uninstalled respectively. When a website is installed via web interface all the available packages are listed there but split into two groups - the ones that are to be installed (associated with the selected package) and all the rest.  openy.theme.yml The file defines which Open Y themes are available for installation when a website is being installed.\nIf an Open Y site is installed using Drush then the theme can be specified by an optional argument for the drush site-install command (Installation with Drush):\ndrush site-install openy \\ --db-url=\"mysql://user:pass@host:3306/db\" \\ --root=/docroot \\ openy_configure_profile.preset=extended \\ openy_theme_select.theme=openy_rose ","categories":"","description":"","excerpt":"There are plenty of YAML configuration files at the root of the …","ref":"/openy_docs/docs/wiki/open-y-2.0-root-yaml-files/","tags":"","title":"Open-Y-2.0-root-YAML-files"},{"body":"Open Y’s system requirements generally track those of Drupal with some occasional more opinionated recommendations.\nGeneral Requirements Supported versions may differ based on your Drupal version.\n A supported web server like Apache or Nginx A supported database server like MySQL or MariaDB A supported version of PHP A Linux-based operating system  Ubuntu 16, 18, and 20 are supported. CentOS or similar may work as well.    Recommended for advanced functionality, but not required:\n Apache SOLR search server  Version 4.9.1 and version 8 have been tested for Activity Finder. Other versions are works in progress.    For high load/performance sites  A memory-based key-value store  Memcache Redis   A reverse proxy/HTTP cache  Varnish Nginx reverse proxy    See also Drupal’s recommendations for managing site performance and scalability.\nFor development  Oracle VM Virtualbox Vagrant configuration manager Ansible configuration manager and automation Composer package manager Docker virtual environments  See our installation instructions for a full walkthrough of these tools.\nSoftware libraries and frameworks Open Y leverages many other open source frameworks including, but not limited to:\n Drupal Symfony ReactJS Vue.js Google reCAPTCHA NodeJS  ","categories":"","description":"","excerpt":"Open Y’s system requirements generally track those of Drupal with some …","ref":"/openy_docs/docs/wiki/open-y-3rd-party-dependencies/","tags":"","title":"Open-Y-3rd-party-dependencies"},{"body":"The Open Y community aims to build from the methods and best practices of other open-source projects, such as the Drupal community and the Drupal Ukrainian community.\nBylaws For the OpenY distribution we have Terms of Use and Participant Agreement.\nDevelopment To understand how we use and develop technologies, refer to the documents below:\n Drupal Code of Conduct Conventional commits policy Drupal Coding Standards Open Y Development FAQ Open Y Development Best Practices  JavaScript Code Standards\n Airbnb React/JSX Style Guide (for reviewing JavaScript ES5/ES6) Vue.js code style guide (for Vue.js components)  ","categories":"","description":"","excerpt":"The Open Y community aims to build from the methods and best practices …","ref":"/openy_docs/docs/wiki/open-y-code-of-conduct-and-best-practices/","tags":"","title":"Open-Y-Code-of-Conduct-and-Best-Practices"},{"body":"This walk-through is outdated and is in the process of being updated. Instead, try:\n A video walk-through of installing Open Y for tech novices An overview of the Open Y Sandboxes  Installing Open Y on DigitalOcean droplet  Create Ubuntu 16.04 LTS x64 droplet in area close to your location   Use 2Gb droplet or more powerful if you need. Do not use 1Gb option - Open Y will fail on it.\nLogin to the SSH console of the droplet Follow the comment from https://github.com/ymcatwincities/openy-project/blob/8.1.x/scripts/openyonclickinstall.sh Basically - run a command under root  curl -Ls http://bit.ly/initopeny | bash -s The command above will run approximately 10 minutes. 4. In the end you should see a message similar to\nOpen http://127.0.0.1/core/install.php to proceed with OpenY installation. Open the link from the above message(from your console, not from this document) with your browser and proceed with Open Y installation.  Enjoy.\n In order to install the latest beta release of Open Y 2.0 change the command on step 3:\ncurl -Ls http://bit.ly/initopeny | bash -s beta  If you find any issues please post a message to the issue queue https://github.com/ymcatwincities/openy/issues\n","categories":"","description":"","excerpt":"This walk-through is outdated and is in the process of being updated. …","ref":"/openy_docs/docs/wiki/open-y-one-click-install-how-to/","tags":"","title":"Open-Y-one-click-install-how-to"},{"body":"OPEN Y PARTICIPATION AGREEMENT\nThis Open Y Participation Agreement (this “Agreement”) is between Open Y, LLC, and participating YMCA member associations in the United States (“Member Associations”). Open Y, LLC has received license rights from the National Council of Young Men’s Christian Associations of the United States of America, an Illinois not-for-profit corporation (“YUSA”) to provide the Platform (as defined below) to you. Open Y is not a part of YUSA; Open Y is a part of the YMCA of the Greater Twin Cities.\nThe purpose of the Open Y community is to collectively advance YMCA web and online experiences to better serve the YMCA mission. The terms of this Agreement govern your use of Open Y’s open-source digital content management system, which facilitates the sharing of YUSA brand-compliant website templates, tools, applications, and related digital assets (“Platform”). The community provides a collaborative environment for individuals to positively interact and participate in the Platform. These guidelines address the standards and expectations of those contributing to and participating in the Open Y community and are meant to help our YMCA community grow and thrive. Your participation in Open Y means that you agree to the following guidelines and to the Open Y Terms of Use.\nYMCA BRAND ASSETS\nNo right is granted by this Agreement to use or license the YUSA brand assets. YMCA brand assets, which include, but are not limited to YMCA trademarks, trade dress, logos and other indicia of origin, are owned and controlled by YUSA. Open Y, LLC provides the Platform to you under license from YUSA. Accordingly, neither Open Y, LLC nor any Member Association shall, either directly or indirectly, at any time do any act or thing contesting the validity of YUSA’s trademarks or its rights thereto.\nOnly Member Associations in the United States will have access to use any YUSA brand assets included in Open Y. All use by Member Associations must be in compliance with YUSA brand standards and guidelines as established by the National Board. YUSA is a third party beneficiary to this Agreement, with the right to enforce each of the terms of this Agreement with respect to Open Y and you. Open Y shall send copies of all notices due to you under this Agreement to each of you and YUSA.\nBEING A MEMBER OF OUR COMMUNITY\nParticipation: Open Y will be at its best if each member participates in the community. There are many different ways you can participate, including through using the platform, presentations, forums, summits, emails, calls, etc. We encourage your active participation to the extent you feel you are able and willing. Open Y, LLC may publicly disclose your participation in the project.\nContribution: Open Y encourages Members to contribute to the enhancement, editing, and building of Open Y. To ensure valuable contributions to the community, Open Y encourages Members to stay familiar and up-to-date with the Open Y roadmap, as well as new features in active development. When you make changes that improve Open Y features, please contribute those back to the community by ensuring they are re-useable and decoupled.\nCollaboration: Open Y encourages Members to collaborate across the YMCA community to share costs and efforts on building new capabilities.\nTransparency: Customizations of code provided by Open Y for your website will likely increase the initial fees, support, and upgrade costs for your website. When modifying or redistributing code, you must include a notice giving credit to Open Y for the portion of the Open Y code you use.\nPromotion: Open Y encourages Members to share their expertise and Open Y experience to expand its reach and accessibility to experienced and new members alike. There will be many opportunities for members to support Open Y and its marketing and messaging initiatives.\nReporting Problems\nIf you believe someone has violated the Open Y Community Guidelines, or have any questions or concerns, please contact Open Y, LLC at http://openy.org.\n","categories":"","description":"","excerpt":"OPEN Y PARTICIPATION AGREEMENT\nThis Open Y Participation Agreement …","ref":"/openy_docs/docs/wiki/open-y-participant-agreement/","tags":"","title":"Open-Y-Participant-Agreement"},{"body":"Check more technical guidelines about our best practices for code quality.\nAdherence to Standards The Open Y Core Team will adhere to the same standards we set for the community for all areas of development and technologies as per the Open Y documentation.\nThe Open Y Core Team reserves the right to break these standards only in the following scenarios:\n Emergency - a major defect or security risk has been discovered that requires extreme measures to resolve. When the standards are broken, it is the responsibility of the Open Y Core Team to explain why the standards needed to be broken, and what the new standards will be moving forward. This communication will be posted to the Open Y message board, Slack, and the documentation on GitHub will be updated to reflect the new standards.  Requirements for Pull Requests  Code in Pull Requests should follow our established best practices Submitters' profiles on GitHub or Drupal.org should be up to date and contain at least a name and organization.  Template for the PR In order to create a good quality Pull Request, we prepared a PR template which is automatically added to new Pull Requests on GitHub.\nList of requirements from the template:\n Provide a link to the original issue, which is going to be fixed by the PR you are creating. All coding styles are fulfilled and there are no issues reported by CodeSniffer. See Code of Conduct. Documentation have been updated according to PR changes. Steps for review have been provided according to PR changes.  Make sure you’ve provided all necessary hook_update_N to support upgrade path. Make sure your git email is associated with an account on drupal.org, otherwise you won’t get commits there.  If you would like to get credits on drupal.org, check documentation.  ","categories":"","description":"","excerpt":"Check more technical guidelines about our best practices for code …","ref":"/openy_docs/docs/wiki/open-y-pull-requests-review-standard/","tags":"","title":"Open-Y-Pull-Requests-review-standard"},{"body":"Open Y Release Guidelines Open Y releases major releases of the base project Open Y and Virtual Y quarterly. Minor releases and sub-project releases occur as needed.\nMajor releases (Quarterly) Major releases are scheduled for the second Tuesday of the second month of each quarter (February, May, August, November). They are numbered 2.x and consist of:\n New Features New Enhancements New Bugfixes  Minor Releases Minor releases are numbered 2.x.x and consist of\n Only bugfixes Never have new features or major enhancements  Release schedule 2021 Prior years  Open Y releases for 2018-2019  ","categories":"","description":"","excerpt":"Open Y Release Guidelines Open Y releases major releases of the base …","ref":"/openy_docs/docs/wiki/open-y-release-schedule-and-guidelines/","tags":"","title":"Open-Y-Release-Schedule-and-Guidelines"},{"body":"Smoke tests in core and dependencies  Open Y core tests and dependencies Alert Application Virtual Y Application Activity Finder v3  Open Y Features  Location Finder Application Small Banner Banner Simple Content Grid Content Embedded GroupEx Pro Schedule Open Y Search  ","categories":"","description":"","excerpt":"Smoke tests in core and dependencies  Open Y core tests and …","ref":"/openy_docs/docs/wiki/open-y-smoke-tests-index/","tags":"","title":"Open-Y-Smoke-Tests-Index"},{"body":"To deliver the best technologies for the YMCA movement, the Open Y development community maintains the following documents and best practices:\n Development FAQ Open Y Coding Standards How new technologies and features are added to Open Y Sandboxes Smoke Tests  Smoke Tests YouTube Playlist Open-Y-Smoke-Tests-Index   A Slack Team by invite with an #architects_support channel where we discuss technical issues with our partners and YUSA. A YouTube playlist for Developers A list of 3rd party dependencies which are reviewed periodically for new features and deprecations.  ","categories":"","description":"","excerpt":"To deliver the best technologies for the YMCA movement, the Open Y …","ref":"/openy_docs/docs/wiki/open-y-technology-pipeline/","tags":"","title":"Open-Y-technology-pipeline"},{"body":"Version 2.0, May 2018\nThis is a free service provided by Open Y, LLC (“we,” “us,” and “our”) for users in the YMCA community (“users,” “you,” and “your”). By using the Open Y repository, you agree to these Terms of Use.\nWe reserve the right to modify or discontinue, temporarily or permanently any services or the Terms of Use at any time, with or without prior notice to users. Open Y, LLC is not liable for any damage to any user or other third party that may result from any such modification, suspension or discontinuance of the service or of the Terms of Use.\nDownloading\nOpen Y, LLC is not responsible for the content maintained in the repository. Any material downloaded or otherwise obtained through your use of our services is done at your own discretion and risk, and you will be solely responsible for any damage to your computer system or loss of data that results from the download of any such material. You agree that we have no responsibility or liability for the deletion of or the failure to store or to transmit, any content or communication maintained by the service. We retain the right to create limits on use and storage at our sole discretion at any time with or without notice.\nWe are not responsible for the content, data, or actions of third parties, and you release Open Y, LLC, our directors, officers, employees, and agents from any claims and damages, known and unknown, arising out of or in any way connected with any claim you have against any such third parties. No advice or information, whether oral or written, obtained by you from us or through or from our services creates any warranty not expressly stated in these Terms of Use.\nAll code downloaded from Open Y is based on the Drupal® code base, which is subject to the terms of the Drupal license (www.drupal.org). Open Y code is a derivative work of Drupal and any distribution must be under the terms of the GNU General Public License version 2 or later versions.\nUnless otherwise stated, all content (excluding code), including user-generated content, such as comments and discussions on the Open Y web site, is licensed under Creative Commons License, Attribution-ShareAlike 2.0.\nContributing\nThe term “contribution” means any source code, object code, patch, tool, sample, graphic, specification, manual, documentation, comments or any other content posted or submitted by you to Open Y. We welcome proposed contributions, however, all contributions are subject to review and approval, and potential modification, before inclusion in a release as part of Open Y.\nIt is your responsibility to obtain appropriate licensing and attribution for content that you submit to Open Y. Content without appropriate licensing or attribution will be removed.\nYou represent and warrant that:\n  Each contribution that you submit is an original work of authorship and you can legally grant the rights set out in these Terms of Use;\n  To the best of your knowledge, each contribution will not violate any third party’s copyrights, trademarks, patents, or other intellectual property rights;\n  Each contribution shall be in compliance with U.S. export control laws and other applicable export and import laws.\n  You agree to notify us if you become aware of any circumstance which would make any of the foregoing representations inaccurate in any respect.\nAll code must comply with the reasonable standards issued by Open Y, including architecture and security protocols. All code submitted to the repository that is a derivative work must be GPLv2+ compatible and will automatically be redistributed as GPLv2+.\nOpen Y, LLC in its sole discretion will review, modify and determine whether to include code in its next release. We can refuse or remove any contributions at our discretion and without prior notice.\nDisclaimer\nAll content is provided “as is,” without any warranty of any kind, either expressed or implied, including, but not limited to, the implied warranties of merchantability, fitness for a particular purpose and non-infringement; (ii) Open Y, LLC makes no other warranty that its services will meet your requirements, be safe, secure, uninterrupted, timely, accurate, or error-free, or that your information will be secure; and (iii) the entire risk as to the quality and performance of the content is with you.\nLimit of Liability\nIn no event will Open Y, LLC, its affiliates or their licensors, service providers, employees, agents, officers, or directors be liable for any indirect, special, incidental, consequential or punitive damages, including but not limited to loss of revenue, loss of profits, loss of business or anticipated savings, loss of goodwill, and whether caused by tort (including negligence), breach of contract or otherwise, even if foreseeable. The foregoing does not affect any liability which cannot be excluded or limited under applicable law.\nCopyright DMCA Notice\nIf a user or other third party believes that its content has been copied in a way that constitutes copyright infringement, that user or third party should provide Open Y, LLC with the following information: (a) an electronic or physical signature of the person authorized to act on behalf of the owner of the copyright\ninterest; (b) a description of the copyrighted work that has been infringed; (c) a description of where the allegedly infringing material is located; (d) the affected user or third party’s address, telephone number and email address; (e) a statement by the affected user or third party that he or she has a good faith belief that the disputed use is not authorized by the copyright owner, its agent or the law; and (f) a statement by the affected user or third party, under penalty of perjury, that the above information is accurate and that such user or third party is the copyright owner or is otherwise authorized to act on the copyright owner’s behalf. Please report any alleged copyright infringements to http://openy.org.\nVenue and Governing Law This Agreement shall be governed by, and construed in accordance with, the laws of the State of Minnesota, without reference to conflicts of laws principles. The parties agree that the federal and state courts in the county of Hennepin, Minnesota will have exclusive jurisdiction and venue under this Agreement, and each party hereby agrees to submit to such jurisdiction exclusively.\n","categories":"","description":"","excerpt":"Version 2.0, May 2018\nThis is a free service provided by Open Y, LLC …","ref":"/openy_docs/docs/wiki/open-y-terms-of-use/","tags":"","title":"Open-Y-Terms-of-Use"},{"body":"Preamble Back on 28 Jan 2020 Open Y decided to add an anonymous analytics module openy_analytics which was a free opt-in/opt-out solution for the Core team to gather stats from Open Y sites about the frequency of components used.\nThe idea behind this was to gather data in order to understand the demand for the components in Open Y and use the data to make better decisions.\nRecently, the Open Y Core Team decided to sunset this functionality and remove openy_analytics as well as openy_update modules from the Open Y Distribution, as this feature was rarely used. By sunsetting this functionality, we reduced server load from Open Y instances and archive the analytics server.\nHow to opt-out from analytics subsystem Visit Open Y -\u003e Terms and Conditions in your Open Y site instance and uncheck the Optional Permissions checkbox\nAfter submitting this form your site will stop sending anonymous data.\nIf the checkbox was not enabled just disregard it, you didn’t opt-in earlier.\nDeprecation action Uninstall and deprecation was done in #2537\n","categories":"","description":"","excerpt":"Preamble Back on 28 Jan 2020 Open Y decided to add an anonymous …","ref":"/openy_docs/docs/wiki/open-y-update-sunset-opt-out-tutorial/","tags":"","title":"Open-Y-update-sunset---opt-out-tutorial"},{"body":"In order to protect Open Y customers, we have added anti-spam protection based on CAPTCHA and Google reCAPTCHA out of the box in Open Y core\nYou can check the tutorial for how to install and configure reCaptcha on your site.\nIn the majority of cases having the above configuration in place will protect you from 99% of spam, unless there is human-entered spam that has no protection. To overcome some human-based spam you should use blacklist logic for blocking email domains, used in spam messages.\nFor that, you can use the Protected Submissions module module, which allows you to harden all submissions on a site with a list of stop words as well as per-language settings.\nVirtual Y use case In order to overcome caching issues, Virtual Y uses the simple_recaptcha module which could be used in similar cases.\nThe CAPTCHA + reCAPTCHA module solution has presented some reliability issues. The most recent discussion and fix from drupal.org has also not reliably resolved issues for some clients.\nAt some point, the “Simple reCaptcha” module was used on a project and had no issues, so we’ve started to replace the “CAPTCHA” + “reCAPTCHA” modules with “Simple reCAPTCHA”.\n","categories":"","description":"","excerpt":"In order to protect Open Y customers, we have added anti-spam …","ref":"/openy_docs/docs/wiki/openy-anti-spam-protection/","tags":"","title":"OpenY-anti-spam-protection"},{"body":"To update your OpenY site with security fix from Drupal core https://www.drupal.org/SA-CORE-2018-004 OpenY team is suggesting 2 options- via patch and via Drupal core upgrade(or OpenY upgrade). Drupal core upgrade or OpenY upgrade is not always possible, but security issue should be fixed asap. So consider to apply patch and plan OpenY upgrade later.\nHow to apply the patch Patching OpenY releases 8.0.1 - 8.1.10 (Drupal cores 8.2.x, 8.3.x, 8.4.x) For patching your OpenY release, follow steps below:\n Login to your production server environment via SSH and find docroot folder of your site codebase. If you installed OpenY by following a tutorial https://www.youtube.com/watch?v=V3K4-RLjxQo - you should: if your site is located in /var/www/html  ssh -l root YOUR_SERVER_DOMAIN_NAME cd /var/www/html wget https://raw.githubusercontent.com/ymcatwincities/openy-project/8.1.x/scripts/patches/SA-CORE-2018-004.patch if your site is located in /var/www/openy\nssh -l root YOUR_SERVER_DOMAIN_NAME cd /var/www/openy wget https://raw.githubusercontent.com/ymcatwincities/openy-project/8.1.x/scripts/patches/SA-CORE-2018-004.patch Now you are ready to patch your site. But before patching - make a backup of the file which is about to be patched\nsudo cp docroot/core/lib/Drupal/Core/Security/RequestSanitizer.php /var/backups/RequestSanitizer.php sudo cp docroot/core/modules/file/src/Element/ManagedFile.php /var/backups/ManagedFile.php To patch your site run the command to test if the patch can be applied:\npatch -p1 --dry-run \u003c SA-CORE-2018-004.patch You should see a result\n# patch -p1 --dry-run \u003c SA-CORE-2018-004.patch  checking file core/lib/Drupal/Core/Security/RequestSanitizer.php checking file core/modules/file/src/Element/ManagedFile.php In case if result different - stop on this step and let us know you have issue. In case if all good proceed with a command below, which will patch your site:\npatch -p1 \u003c SA-CORE-2018-004.patch You should see the same output as previously, but now your site is patched.\nTIP: In case if you are using git repository for your site run\ngit add docroot/core/modules/file/src/Element/ManagedFile.php docroot/core/lib/Drupal/Core/Security \u0026\u0026 git commit -m \"Patching OpenY core\" \u0026\u0026 git push to store your patched core into your own repository.\n==========================\nHow to patch your Digitalocean OpenY install In case if you have followed tutorial https://www.youtube.com/watch?v=V3K4-RLjxQo you should have your OPenY installed on you DigitalOcean server(droplet) in a predictable for current document folder. That’s why we prepared a short how to patch your OpenY site in a most simple way if you are not a Tech Guru, but just a user\n Log in as an admin user to your site admin UI by visiting /user/login URI page. Login to your DigitalOcean cloud console at digitalocean.com and find Access Console in the dropdown for the droplet you are using for the OpenY  You should see a popup window with a black screen where console asks you for the login. Use root user and a password generated for you upon droplet creation. After login to a console run the command below, respectively to the version of your Drupal core.  One line script to patch Drupal core for OpenY Type manually exact line\nbash \u003c \u003c(curl -s https://raw.githubusercontent.com/ymcatwincities/openy-project/8.1.x/scripts/patches/runSA-CORE-2018-004.sh) and hit Enter. You should see OpenY was patched message.\n","categories":"","description":"","excerpt":"To update your OpenY site with security fix from Drupal core …","ref":"/openy_docs/docs/wiki/openy-security-drupal-sa-core-2018-004/","tags":"","title":"OpenY-security---Drupal-SA-CORE-2018-004"},{"body":"To update your OpenY site with security fix from Drupal core https://www.drupal.org/sa-core-2018-002 OpenY team is suggesting 2 options- via patch and via Drupal core upgrade(or OpenY upgrade). Drupal core upgrade or OpenY upgrade is not always possible, but security issue should be fixed asap. So consider to apply patch and plan OpenY upgrade later.\nHow to apply patch Patching OpenY releases 8.0.1 - 8.1.0 (Drupal core 8.2.x) For patching your very old OpenY release it is highly recommended to upgrade OpenY to latest version or at least to one of the 8.1.1-8.1.6 (Drupal core 8.3.x) with Drupal core upgrade to 8.3.9 https://www.drupal.org/project/drupal/releases/8.3.9 . In case if it is not possible right now, follow steps below:\n Login to your production server environment via SSH and find docroot folder of your site codebase. If you installed OpenY by following a tutorial https://www.youtube.com/watch?v=V3K4-RLjxQo - you should:  ssh -l root YOUR_SERVER_DOMAIN_NAME cd /var/www/html wget https://raw.githubusercontent.com/ymcatwincities/openy-project/8.1.x/scripts/patches/8.2.x.patch Now you are ready to patch your site. But before patching - make a backup of the file which is about to be patched\ncp docroot/core/lib/Drupal/Core/DrupalKernel.php /var/backups/DrupalKernel.php To patch your site run the command to test if the patch can be applied:\npatch -p1 --dry-run \u003c 8.2.x.patch You should see a result\n# patch -p1 --dry-run \u003c 8.2.x.patch  checking file docroot/core/lib/Drupal/Core/DrupalKernel.php checking file docroot/core/lib/Drupal/Core/Security/RequestSanitizer.php In case if result different - stop on this step and let us know you have issue. In case if all good proceed with a command below, which will patch your site:\npatch -p1 \u003c 8.2.x.patch You should see the same output as previously, but now your site is patched.\nTIP: In case if you are using git repository for your site run\ngit add docroot/core/lib/Drupal/Core/DrupalKernel.php docroot/core/lib/Drupal/Core/Security \u0026\u0026 git commit -m \"Patching OpenY core\" \u0026\u0026 git push to store your patched core into your own repository.\nPatching OpenY releases 8.1.1 - 8.1.6 (Drupal core 8.3.x) For patching your relatively old OpenY release it is highly recommended to upgrade OpenY to latest version or at least to one of the 8.1.7-8.1.10 (Drupal core 8.4.x) with Drupal core upgrade to 8.4.6 https://www.drupal.org/project/drupal/releases/8.4.6 . In case if it is not possible right now, follow steps below:\n Login to your production server environment via SSH and find docroot folder of your site codebase. If you installed OpenY by following a tutorial https://www.youtube.com/watch?v=V3K4-RLjxQo - you should:  ssh -l root YOUR_SERVER_DOMAIN_NAME cd /var/www/html wget https://raw.githubusercontent.com/ymcatwincities/openy-project/8.1.x/scripts/patches/8.3.x.patch Now you are ready to patch your site. But before patching - make a backup of the file which is about to be patched\ncp docroot/core/lib/Drupal/Core/DrupalKernel.php /var/backups/DrupalKernel.php To patch your site run the command to test if the patch can be applied:\npatch -p1 --dry-run \u003c 8.3.x.patch You should see a result\n# patch -p1 --dry-run \u003c 8.3.x.patch  checking file docroot/core/lib/Drupal/Core/DrupalKernel.php checking file docroot/core/lib/Drupal/Core/Security/RequestSanitizer.php In case if result different - stop on this step and let us know you have issue. In case if all good proceed with a command below, which will patch your site:\npatch -p1 \u003c 8.3.x.patch You should see the same output as previously, but now your site is patched.\nTIP: In case if you are using git repository for your site run\ngit add docroot/core/lib/Drupal/Core/DrupalKernel.php docroot/core/lib/Drupal/Core/Security \u0026\u0026 git commit -m \"Patching OpenY core\" \u0026\u0026 git push to store your patched core into your own repository.\nPatching OpenY releases 8.1.7 - 8.1.9 (Drupal core 8.4.x) For patching your OpenY release it is highly recommended to upgrade OpenY to latest version (8.1.10 or never) or at least to one of the 8.1.10 (Drupal core 8.4.x) with Drupal core upgrade to 8.4.6 https://www.drupal.org/project/drupal/releases/8.4.6 . In case if it is not possible right now, follow steps below:\n Login to your production server environment via SSH and find docroot folder of your site codebase. If you installed OpenY by following a tutorial https://www.youtube.com/watch?v=V3K4-RLjxQo - you should:  ssh -l root YOUR_SERVER_DOMAIN_NAME cd /var/www/html wget https://raw.githubusercontent.com/ymcatwincities/openy-project/8.1.x/scripts/patches/8.4.x.patch Now you are ready to patch your site. But before patching - make a backup of the file which is about to be patched\ncp docroot/core/lib/Drupal/Core/DrupalKernel.php /var/backups/DrupalKernel.php To patch your site run the command to test if the patch can be applied:\npatch -p1 --dry-run \u003c 8.4.x.patch You should see a result\n# patch -p1 --dry-run \u003c 8.4.x.patch  checking file docroot/core/lib/Drupal/Core/DrupalKernel.php checking file docroot/core/lib/Drupal/Core/Security/RequestSanitizer.php In case if result different - stop on this step and let us know you have issue. In case if all good proceed with a command below, which will patch your site:\npatch -p1 \u003c 8.4.x.patch You should see the same output as previously, but now your site is patched.\nTIP: In case if you are using git repository for your site run\ngit add docroot/core/lib/Drupal/Core/DrupalKernel.php docroot/core/lib/Drupal/Core/Security \u0026\u0026 git commit -m \"Patching OpenY core\" \u0026\u0026 git push to store your patched core into your own repository.\n==========================\nHow to patch your Digitalocean OpenY install In case if you have followed tutorial https://www.youtube.com/watch?v=V3K4-RLjxQo you should have your OPenY installed on you DigitalOcean server(droplet) in a predictable for current document folder. That’s why we prepared a short how to patch your OpenY site in a most simple way if you are not a Tech Guru, but just a user\n Log in as an admin user to your site admin UI by visiting /user/login URI page. Go to /admin/reports/status after login and search for Drupal Version string. It should be something like 8.2.x, 8.3.x or 8.4.x (x - some number too, like 8.4.2, for example). Based on your finding follow the steps below to your version Login to your ВigitalOcean cloud console at digitalocean.com and find Access Console in the dropdown for the droplet you are using for the OpenY  You should see a popup window with a black screen where console asks you for the login. Use root user and a password generated for you upon droplet creation. After login to a console run the command below, respectively to the version of your Drupal core.  One line script to patch 8.2.x Drupal core for OpenY Type manually exact line\nbash \u003c \u003c(curl -s https://raw.githubusercontent.com/ymcatwincities/openy-project/8.1.x/scripts/patches/run8.2.x.sh) and hit Enter. You should see OpenY was patched message.\nOne line script to patch 8.3.x Drupal core for OpenY Type manually exact line\nbash \u003c \u003c(curl -s https://raw.githubusercontent.com/ymcatwincities/openy-project/8.1.x/scripts/patches/run8.3.x.sh) and hit Enter. You should see OpenY was patched message.\nOne line script to patch 8.4.x Drupal core for OpenY Type manually exact line\nbash \u003c \u003c(curl -s https://raw.githubusercontent.com/ymcatwincities/openy-project/8.1.x/scripts/patches/run8.2.x.sh) and hit Enter. You should see OpenY was patched message.\n","categories":"","description":"","excerpt":"To update your OpenY site with security fix from Drupal core …","ref":"/openy_docs/docs/wiki/openy-security-update-how-to.-update-drupal-core-only/","tags":"","title":"OpenY-security-update-how-to.-Update-Drupal-core-only"},{"body":"Upgrade to old, Open Y 1.x version ( tested on upgrading 8.0.2 to 8.1.1.14 ) See upgrade from 8.1.3 to 8.2.2.1\nWe found the oldest OpenY instance working on 8.0.2 version of OpenY so this document should cover all the way of updating it to the latest version.\nPrepare dedicated environment for upgrade testing Ensure you have working computer or virtual machine with\n Ubuntu 14.04(16.04 or any decent Ubuntu LTS versions) 64 bit MySQL 5.5+ Apache 2.4 PHP 5.6-7.1 (7.2 is not supported yet)  OpenY team maintains Vagrant preconfigured Virtualbox based virtual machine with OpenY. Feel free to use it to get working virtual environment. Your own OpenY instance should have Virtual machine injected into your site codebase. Just find Vagrantfile and proceed with vagrant up accordingly to the documentation.\nObtain local copy of your production site You have to create local copy of your site locally to be able to proceed with the upgrade. For that\n Make a backup of your production database and copy it to your local machine Make a copy of your production site codebase and copy it to your local machine  …\n  Detect version of your OpenY   Starting from OpenY 1.10 release you should see a version of OpenY in your site reports dashboard. For previous versions the best way to check your version is to analyze creation date of index.php pr README.txt file in the docroot folder of your site and compare it to the release date from https://github.com/ymcatwincities/openy/releases . Your OpenY version should be the one which is older than creation date of the files.\n Run command with next never version   In a same folder where is your docroot folder run\nmv composer.json composer.json.bak || true wget https://raw.githubusercontent.com/ymcatwincities/openy-project/8.1.x/composer.json cd docroot/profiles/contrib/openy/ rm -f yparse* wget https://raw.githubusercontent.com/ymcatwincities/openy-project/8.1.x/scripts/yparse.sh drush cr sh yparse.sh | xargs drush en -y cd ../../../../ composer require ymcatwincities/openy:NEW_VERSION_HERE --no-update composer update --prefer-dist --with-dependencies --prefer-stable --update-with-all-dependencies --no-suggest  Update the site   Go to docroot folder of your codebase and run\ndrush updatedb drush entup Sometimes, when updatedb fails, it is important to get stable version of some modules we found causing problems\ndrush dl -y plugin-8.x-2.5 contribute-8.x-1.0-beta7 scheduler-8.x-1.0 views_block_filter_block datalayer simple_menu_icons rabbit_hole metatag simple_sitemap-8.x-2.9 easy_breadcrumb-8.x-1.6 drush en -y plugin contribute scheduler views_block_filter_block datalayer simple_menu_icons rabbit_hole metatag simple_sitemap || true drush ev \"Drupal::service('module_installer')-\u003einstall(['content_moderation','openy']);\" Ensure commands above finished with no error messages. Best way to check it - run them one more time. If next run shows\n$ drush updatedb No database updates required [success] $ drush entup No entity schema updates required [success] You almost 100% proved updated were executed correctly.\n Check for regressions   …\n Backup current state of the updated site   …\n Proceed with an update to next version until succeeded (Start from item 1)   …\n","categories":"","description":"","excerpt":"Upgrade to old, Open Y 1.x version ( tested on upgrading 8.0.2 to …","ref":"/openy_docs/docs/wiki/openy-upgrade-for-developers.-upgrade-to-old-openy-1.x-version/","tags":"","title":"OpenY-upgrade-for-developers.-Upgrade-to-old-OpenY-1.x-version"},{"body":"Review a video about this document.\nBefore upgrading, please review these required version steps for your upgrade path.\nOverview  Prepare a dedicated environment for upgrade testing Obtain a local copy of your production site Run command with next newer version (replace NEW_VERSION_HERE with the version you are upgrading to, e.g 8.2.0.7 ) Enable Open Y introduced modules in case if you are updating from very old version or if they are disabled intentionally Verify if the Media Entity to Media in Core migration is possible Update the site Visit the Open Y upgrade tool dashboard Check for regressions/Smoke tests Backup current state of the updated site Proceed with an update to next version until succeeded (Start from item 1)  Upgrade to Open Y 2.x Prepare dedicated environment for upgrade testing Ensure you have a working computer or virtual machine with:\n Ubuntu 20.04 (16.04, 18.04, or any decent Ubuntu LTS version) 64 bit MySQL 5.5+ (5.7 is preferred because of the performance improvements) Apache 2.4 (or Nginx + php-fpm in case if you are fine with htaccess issues down the road) PHP 7.3 (7.4+ could be an issue with some contrib modules) Drush 8.1.17 version (for Open Y pre 8.2 ). No support for Drush 9.x in Drupal 8 branches. Only in Drupal 9. Use Drush 8.3+ for OpenY 8.2+  The Open Y team maintains Vagrant preconfigured Virtualbox based virtual machine with OpenY. Feel free to use it to get a working virtual environment.\nYour own Open Y instance should have a virtual machine injected into your site codebase. Just find Vagrantfile and proceed with vagrant up accordingly to the documentation.\nObtain local copy of your production site You have to create a local copy of your site locally to be able to proceed with the upgrade.\nFor that:\n Make a backup of your production database and copy it to your local machine Make a copy of your production site codebase and copy it to your local machine Ensure you have not manually removed Drupal modules in your database without the uninstallation step being executed! In this case you’ll need to return the module back to the codebase and uninstall it via Drupal Extend UI or Drush before running the next steps to upgrade Open Y.  Run command with next never version ( replace NEW_VERSION_HERE with the version you are upgrading to, e.g 8.2.0.7 ) In the same folder where your docroot is, run:\nmv composer.json composer.json.bak || true wget https://raw.githubusercontent.com/ymcatwincities/openy-project/8.2.x/composer.json cd docroot/profiles/contrib/openy/ rm -f yparse* wget https://raw.githubusercontent.com/ymcatwincities/openy-project/8.2.x/scripts/yparse.sh drush cr sh yparse.sh | xargs drush en -y cd ../../../../ composer require ymcatwincities/openy:NEW_VERSION_HERE --no-update composer update --prefer-dist --with-dependencies --prefer-stable --no-suggest The script above replaces your composer.json file, so it’s only applicable to websites that have the file unmodified.\nIf your composer.json file is modified, merge the changes manually. Essentially, the repositories section of the file is updated.\nEnable OpenY introduced modules in case if you are updating from very old version or if they are disabled intentionally. cd docroot drush en openy_upgrade_tool openy_er openy_prgf_loc_finder openy_map openy_data_wrapper openy_loc_branch openy_focal_point media_directories_ui Sometimes it is important to get the latest openy_upgrade_tool from the repository even if you are not updating to the latest version of Open Y. You’ll be able to disable them in the end once all updates are executed successfully.\nVerify if the Media Entity to Media in Core migration is possible ( only for upgrades from OpenY 1.x to 2.x ) Go to the docroot directory of your codebase and execute:\ndrush mecu If the output looks like the following lines, you are good to proceed with database updates.\n✓ SUCCESS: All upgrade requirements are met and [ok] you can proceed with the DB updates. Drupal core is the correct version (\u003e= 8.6.0). [8.6.10 detected] [ok] The contributed \"Media\" module is not installed. [ok] All provider plugins and modules depending on media_entity are [ok] up-to-date. Site uses EXIF handling and the \"Media Entity Image EXIF\" module is [ok] available. Follow the instructions of the output messages if they contain warnings or errors. Take a look at the detailed guide if you have any troubles.\nUpdate the site Go to the docroot folder of your codebase and run:\ndrush updatedb drush entup We found, in some instances, because of the complexity of the database you’d need to run this command above up to 6 times to get all entities and updates run to the end. You may ignore errors of the commands until there are no errors after the final run. So:\ndrush updatedb drush entup drush updatedb drush entup drush updatedb drush entup drush updatedb drush entup drush updatedb drush entup Please any log errors as issues for the QA team investigate.\nIf you have issues, the only way to avoid errors is to use Drupal’s hook_update_dependencies API to change the order of running updates to eliminate issues. See this example.\nEnsure commands above have finished with no error messages. The best way to check it is to run them one more time. If the next run shows:\n$ drush updatedb No database updates required [success] $ drush entup No entity schema updates required [success] You have almost 100% proven updates were executed correctly.\nSometimes, you could face an error like:\n openy.terms_and_conditions.schema depends on the Open Y module that will not be installed after import.\n In this case, please, ensure that the module connected with this config is enabled.\nTo make it happen, please execute this command:\ndrush ev \"Drupal::service('module_installer')-\u003einstall(['module_with_problem']);\"\nVisit OpenY upgrade tool dashboard Review and revert or apply an updated version of the configs after the upgrade.\nCheck for regressions In order to check for regressions during the upgrade, it is best to work with smoke tests. Open Y maintains the smoke tests database document you should use for the process.\nBackup current state of the updated site Use drush sql-dump or another backup tool to take a backup of the site in its current state.\nProceed with an update to next version until succeeded (Start from item 1) DISCLAIMER: If you have an old 1.x version it makes sense to update to the latest 1.x before going OpenY 2.0 upgrade See OpenY-upgrade-for-developers.-Upgrade-to-old-OpenY-1.x-version\n","categories":"","description":"","excerpt":"Review a video about this document.\nBefore upgrading, please review …","ref":"/openy_docs/docs/wiki/openy-upgrade-how-to-for-developers/","tags":"","title":"OpenY-upgrade-how-to-for-Developers"},{"body":"Welcome to Open Y paragraphs.\nParagraphs are bits of content, components, from component based design ideology. In a scope of Open Y architecture paragraphs are based on Paragraphs Drupal module.\nThe core idea of paragraphs is to have a nice looking and behaving widget for adding predefined content blocks right in place, without referencing external entities. Keep in mind, that paragraphs are not reusable types. For having reusable type look for blocks or entities in terms of Drupal 8.\nParagraphs were created for making UX better and super convenient.\n","categories":"","description":"","excerpt":"Welcome to Open Y paragraphs.\nParagraphs are bits of content, …","ref":"/openy_docs/docs/content-structure/paragraphs/","tags":"","title":"Paragraphs"},{"body":"Here you can find instructions how you can patch Open Y distribution used on your project.\nWhen you need to patch Open Y  In case you found a bug and prepared a patch for Open Y on github. In case you developed a new feature that will be good to have in Open Y and created Pull Request to Open Y repository In case you want to add a feature that added to Open Y but not included yet to Open Y release.  How to patch Open Y via composer? If you followed instructions docs/Development/Start new Open Y project and you have configured composer.json you need just to do a few simple steps:\n Build a link to a patch using pull request ID https://patch-diff.githubusercontent.com/raw/ymcatwincities/openy/pull/XXX.patch   Where XXX is a number of pull request you want to use.\nAdd a new section patches to the section extra and add a patch to Open Y repository, as on this example: \"extra\": { \"installer-paths\": { ... }, \"enable-patching\": true, \"patches\": { \"ymcatwincities/openy\": { \"Patch description\": \"https://patch-diff.githubusercontent.com/raw/ymcatwincities/openy/pull/XXX.patch\" } } }  After adding a patch execute command composer update Verify you can see added changes in Open Y Enjoy!)  ","categories":"","description":"","excerpt":"Here you can find instructions how you can patch Open Y distribution …","ref":"/openy_docs/docs/development/patch-openy/","tags":"","title":"Patch OpenY"},{"body":"Program Program content type is used for adding Programs on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the program item.   Meta Tags field_meta_tags No A meta tags field allows us to provide structured metadata and Graph meta tags for Facebook, Pinterest, LinkedIn and other social networking sites.   Header Area Field group     Icon field_program_icon No A image field, supporting .svg for uploading the program icon.   Image field_program_image No A image field, for uploading the program image.   Color field_program_color No Reference field for choosing the term from “Color” vocabulary.   Content field_header_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types. If this field is not empty, then the image and icon are not displayed on the page.   Content Area Field group     Description field_program_description No Textarea for the description/body with WYSIWYG, without summary.   Content field_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Sidebar Area Field group     Content field_sidebar_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.    URL pattern Content type is using following pattern: /programs/[node:title]\n","categories":"","description":"","excerpt":"Program Program content type is used for adding Programs on the site. …","ref":"/openy_docs/docs/content-structure/content-types/program/","tags":"","title":"Program"},{"body":"Program Registration (Daxko) This is paragraph that renders the Programs Search Block.\nPrograms Search Block provides a form to search programs from Daxko.\nRelates to: Daxko\nDaxko \u0026 Program Registration (Daxko) configuration must be setup before the Program Registration paragraph will work.\nConfiguration setting at /admin/config/development/daxko/programs-search\nFields    Name Machine name Required Description     Program registration block field_prgf_reg_block No Block reference to the programs_search_block block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Program Registration (Daxko) This is paragraph that renders the …","ref":"/openy_docs/docs/content-structure/paragraphs/program-registration-daxko/","tags":"","title":"Program Registration (Daxko)"},{"body":"Program Subcategory Program Subcategory content type is used for adding program subcategories on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the program subcategory item.   Program field_category_program Yes A reference field for selecting the program.   Meta Tags field_meta_tags No A meta tags field allows us to provide structured metadata and Graph meta tags for Facebook, Pinterest, LinkedIn and other social networking sites.   Header Area Field group     Image field_category_image No A image field, for uploading the category image.   Color field_category_color No Reference field for choosing the term from “Color” vocabulary.   Content field_header_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Content Area Field group     Description field_category_description No Textarea for the description/body with WYSIWYG, without summary.   Content field_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Sidebar Area Field group     Content field_sidebar_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Bottom Area Field group     Content field_bottom_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.    URL pattern Content type is using following pattern: /programs/[node:field_category_program:entity:title]/[node:title]\n","categories":"","description":"","excerpt":"Program Subcategory Program Subcategory content type is used for …","ref":"/openy_docs/docs/content-structure/content-types/program-subcategory/","tags":"","title":"Program Subcategory"},{"body":"Promo Card This is a Paragraph type that will be used for the Promo Cards.\nFields    Name Machine name Required Description     Title field_prgf_title No Title of the Promo Card.   Headline field_prgf_headline Yes Headline of the Promo Card.   Description field_prgf_description No WYSIWYG field without summary.   Link field_prgf_link No Link field that should store internal and external links.    ","categories":"","description":"","excerpt":"Promo Card This is a Paragraph type that will be used for the Promo …","ref":"/openy_docs/docs/content-structure/paragraphs/promo-card/","tags":"","title":"Promo Card"},{"body":"Open Y Sandboxes for Evaluation and QA The Open Y core team manages sandboxes for stable and development versions of Open Y to facilitate the evaluation of the product, to help with QA, and enable investigation of issues.\nTo learn more:\n Watch a detailed video about the process of building the sandboxes Read a case study on Drupal.org  Stable Sandboxes https://sandboxes.openy.org/\nThese sandboxes are set to rebuild completely overnight and clear their database and files every 2 hours. To get access visit How can I try or get a demo of Open Y?\nThese sandboxes contain 3 profile variations:\n Standard Extended Custom  based on the latest stable release of Open Y.\nThese sandboxes are built on CI by running:\ncomposer create-project ymcatwincities/openy-project buildnew --no-interaction --prefer-dist ansible-playbook docroot/reinstall.yml -i /tmp/inventory5068801741271597001.ini -f 5 -e php_env_vars=APP_ENV=dev -e mysql_user=*** -e mysql_password=*** -e mysql_db=sandbox_carnation_custom -e drupal_folder=/var/www/sandbox_carnation_custom -e site_url=https://sandbox-carnation-cus.openy.org -e pp_environment=demo -e run_reinstall=true -e \"openy_profile_install_settings='openy_configure_profile.preset=complete openy_theme_select.theme=openy_carnation'\" -e use_solr=false -i localhost, --connection=local -vvvv Development Sandboxes https://sandboxes-dev.openy.org/\nThese usually contain the latest development version of Open Y (the master branch of openy.\nThese sandboxes are built on CI by running:\ncomposer create-project ymcatwincities/openy-project:dev-9.2.x-development buildnew --no-interaction --prefer-dist ansible-playbook docroot/reinstall.yml -i /tmp/inventory5068801741271597001.ini -f 5 -e php_env_vars=APP_ENV=dev -e mysql_user=*** -e mysql_password=*** -e mysql_db=sandbox_carnation_custom -e drupal_folder=/var/www/sandbox_carnation_custom -e site_url=https://sandbox-carnation-cus.openy.org -e pp_environment=demo -e run_reinstall=true -e \"openy_profile_install_settings='openy_configure_profile.preset=complete openy_theme_select.theme=openy_carnation'\" -e use_solr=false -i localhost, --connection=local -vvvv Membership Framework Sandboxes https://membership-framework-sandboxes-d9.openy.org/\nThese are based on the Open Y stable Standard profile and the development version of the Membership Framework.\nTo rebuild the sandbox, CI is running:\ncomposer create-project ymcatwincities/openy-project buildnew --no-interaction --prefer-dist cd buildnew composer config minimum-stability dev composer require \"openy/openy_memberships\":\"dev-master as 1.0.0\" ansible-playbook docroot/reinstall.yml -i /tmp/inventory13097841656330601319.ini -f 5 -e php_env_vars=APP_ENV=dev -e mysql_user=*** -e mysql_password=*** -e mysql_db=d9_sandbox_carnation_std_membership_framework -e drupal_folder=/var/www/d9_sandbox_carnation_std_membership_framework -e site_url=https://sandbox-carnation-std-membership-framework-d9.openy.org -e pp_environment=membership_framework -e run_reinstall=true -e \"openy_profile_install_settings='openy_configure_profile.preset=standard openy_theme_select.theme=openy_carnation openy_select_content.content=0'\" -e use_solr=false -i localhost, --connection=local -vvvv Activity Finder Sandboxes - development version    Theme Link Open Y Profile Activity Finder Theme Bootstrap     Carnation https://sandbox-carnation-cus-d9.openy.org/activity-finder-v4 stable Custom v4 dev v4    Rose https://sandbox-rose-cus-d9.openy.org/activity-finder-v4 stable Custom v4 dev v3    Lily https://sandbox-lily-cus-d9.openy.org/activity-finder-v4 stable Custom v4 dev v3     To rebuild the sandbox, CI is running:\ncomposer create-project ymcatwincities/openy-project:dev-9.2.x-development-af4 build --no-interaction --prefer-dist cd ${WORKSPACE}/build composer require ymcatwincities/openy_activity_finder:\"4.x-dev as 4.0\" ansible-playbook docroot/reinstall.yml -i /tmp/inventory4660848605526222353.ini -f 5 -e php_env_vars=APP_ENV=dev -e mysql_user=*** -e mysql_password=*** -e mysql_db=d9_sandbox_carnation_custom -e drupal_folder=/var/www/d9_sandbox_carnation_custom -e site_url=https://sandbox-carnation-cus-d9.openy.org -e pp_environment=demo -e run_reinstall=true -e \"openy_profile_install_settings='openy_configure_profile.preset=complete openy_theme_select.theme=openy_carnation'\" -i localhost, --connection=local -vvvv # Solr 4.5-4.9, Activity Finder v4 drush en -y search_api_solr_legacy openy_prgf_activity_finder_4 || true drush cset -y search_api.server.solr backend_config.connector_config.host 127.0.0.1 -y || true drush cset -y search_api.server.solr backend_config.connector_config.core ${VHOST_FOLDER} -y drush cset -y search_api.server.solr backend_config.connector_config.solr_version 4.5 -y drush search-api-mark-all || true drush sapi-i || true drush en -dvy openy_prgf_af4_demo || true # Solr 4.5-4.9, Activity Finder v4, Carnation theme, bootstrap v4 drush cset -y openy_activity_finder.settings bs_version 4 || true ","categories":"","description":"","excerpt":"Open Y Sandboxes for Evaluation and QA The Open Y core team manages …","ref":"/openy_docs/docs/wiki/sandboxes/","tags":"","title":"Sandboxes"},{"body":"Schedule search form This is dynamic paragraph that renders the session instances filters for [Schedule search list](Schedule search list.md).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Schedule search form This is dynamic paragraph that renders the …","ref":"/openy_docs/docs/content-structure/paragraphs/schedule-search-form/","tags":"","title":"Schedule search form"},{"body":"Schedule search list This is dynamic paragraph that renders the session instances, based on url parameters, and or filters from [Schedule search form](Schedule search form.md).\nRelates to [Branches Popup (All)](Branches Popup (All).md).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    Use cases Use case 1: Schedule search list paragraph on a page WITHOUT location popup paragraph 1.1 Preferred branch is selected and no location in URL\n When I open Schedule search list page WITHOUT location popup on page And I have a preferred branch And I don’t have location=% in the URL Filter by location should be predefined based on cookie Results should be filtered  1.2 Preferred branch is empty and no location in URL\n When I open Schedule search list page WITHOUT location popup on page And I don’t have a preferred branch And I don’t have location=% in the URL Filter by location should show “All” Results should be shown for all branches  1.3 Location in specified URL\n When I open Schedule search list page WITHOUT location popup on page And I have location=% in the URL We skip cookie whether is empty or exist Filter by location should show branch from URL Results should be filtered  Use case 2: Schedule search list paragraph on a page WITH location popup 2.1 Preferred branch is selected and no location in URL\n When I open Schedule search list page WITH location popup on page And I have a preferred branch And I don’t have location=% in the URL Location popup shouldn’t be shown Filter by location should be predefined based on cookie Results should be filtered  2.2 Preferred branch is empty and no location in URL\n When I open Schedule search list page WITH location popup on page And I don’t have a preferred branch And I don’t have location=% in the URL Filter by location should show “All” Results should be shown for all branches Location popup should be shown  2.3 Location in specified URL\n When I open Schedule search list page WITH location popup on page And I have location=% in the URL We skip cookie whether is empty or exist Location popup shouldn’t be shown Filter by location should show branch from URL Results should be filtered  ","categories":"","description":"","excerpt":"Schedule search list This is dynamic paragraph that renders the …","ref":"/openy_docs/docs/content-structure/paragraphs/schedule-search-list/","tags":"","title":"Schedule search list"},{"body":"","categories":"","description":"","excerpt":"","ref":"/openy_docs/search/","tags":"","title":"Search Results"},{"body":"Secondary Description and Sidebar This is a Paragraph type that will be used for the paragraphs with left (secondary description) and right (sidebar) blocks.\nFields    Name Machine name Required Description     Left Column field_prgf_left_column_block No Block reference to: Basic Block, Code Block, Date block or Simple Block. Create a new one or pick up an existed block.   Right Column field_prgf_right_column_block No Block reference to: Basic Block, Code Block, Date block or Simple Block. Create a new one or pick up an existed block.    ","categories":"","description":"","excerpt":"Secondary Description and Sidebar This is a Paragraph type that will …","ref":"/openy_docs/docs/content-structure/paragraphs/secondary-description-and-sidebar/","tags":"","title":"Secondary Description and Sidebar"},{"body":"This article only applies to long-term users of Open Y. Open Y supports Composer 2 as of version 8.2.7 in November 2020 and new installs use Composer 2 by default.\n Composer was upgraded to 2.x on October 30, 2020. This could cause instability when your older composer 1.x accidentally auto-updates to the 2.x version. Issues could include: composer fails to run any commands and blocks OpenY upgrade/maintenance. The instability would be in the developer environment, not Open Y/Drupal.\nThe Open Y team prepared an avoidance plan for the community to take action steps before the release while Open Y will be verifying Composer 2.x causes no issues or regressions.\nIf you use Docksal or Vagrant local environments your composer version will not update automatically, so you’re currently safe from inadvertent updates. Instructions for updating those environments will be included with any necessary Open Y updates at a later date.\nCase before October 30, 2020, when you are on composer 1.x Composer 2 is coming and older versions of composer 1.x show the message below.\nComposer 2.0 is about to be released and the older 1.x releases will self-update directly to it once it is released. To avoid surprises update now to the latest 1.x version If you see the message above, ensure your environments have updated composer to the latest 1.x version by running:\ncomposer selfupdate --1 To ensure the above command shows your version 1.x after an upgrade, check the version of composer:\ncomposer --version You should see something like\nMacBook-Pro-Andrii:www podarok$ composer --version Composer version 1.10.15 2020-10-13 15:59:09 as an output of the command.\nIf you do not upgrade to the latest 1.x version before October 30, 2020. i.e. if you accidentally upgrade to Composer 2.x If your composer updated to version 2 and you have issues with this upgrade, the solution is to downgrade Composer to the latest 1.x version by running:\ncomposer selfupdate --1 If you are faced with any issues connect with the Open Y team on GitHub (create issue) and the #developers channel on Slack.\n","categories":"","description":"","excerpt":"This article only applies to long-term users of Open Y. Open Y …","ref":"/openy_docs/docs/wiki/secure-devops-for-composer-2-release/","tags":"","title":"Secure-devops-for-composer-2-release"},{"body":"If you need to prepare server for the Open Y instance, here below you should find all needed software to meet its requirements.\nList of requirements   Ubuntu LTS (14 or 16) is preferred. CentOS is ok as well. Or even any other Linux distribution, but was not tested by Open Y team so far.\n  (Drupal 8 server requirements should be met)[https://www.drupal.org/docs/system-requirements/php-requirements].\n  PHP 5.6+ (PHP 7 is better in terms of performance)\n  List of PHP modules server should have:  php{{ php_version }} php{{ php_version }}-mcrypt php{{ php_version }}-cli php{{ php_version }}-common php{{ php_version }}-curl php{{ php_version }}-dev php{{ php_version }}-fpm php{{ php_version }}-gd php{{ php_version }}-mysql php{{ php_version }}-memcached php{{ php_version }}-imagick php{{ php_version }}-xml php{{ php_version }}-xdebug php{{ php_version }}-mbstring php{{ php_version }}-soap php{{ php_version }}-zip  MySQL 5.5+ . Here are the best settings https://github.com/cibox/cibox/blob/master/core/facade-mysql/defaults/main.yml to get it fast and furious Apache 2 with mod-php (preffered for stability) or nginx with php-fpm (better for speed and scalability)   libapache2-mod-php{{ php_version }}   Memcache server (optional)\n  Server tools\n   Ansible (optional) Docker (optional) SOLR 4.x (if there will be requirement for SOLR search support) Varnish (optional))  ","categories":"","description":"","excerpt":"If you need to prepare server for the Open Y instance, here below you …","ref":"/openy_docs/docs/development/server-requirements/","tags":"","title":"Server Requirements"},{"body":"Session Session content type is used for adding Sessions on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the session item.   Class field_session_class Yes A reference field for selecting the program subcategory.   Session Info Field group - -   Description field_session_description No Textarea for the description/body with WYSIWYG, without summary.   Gender field_session_gender No Select List with Gender options: Coed, Male, Female.   Online registration field_session_online No Boolean field that determines if the Register Now button/link gets displayed.   Ticket required field_session_ticket No Checkbox field to indicate that there is a ticket required.   Min Age field_session_min_age No Input field for adding the min age.   Max Age field_session_max_age No Input field for adding the max age.   Registration link field_session_reg_link No A link field with the Registration link Value.   Membership Field group - -   In membership field_session_in_mbrsh No Boolean field that helps determine if the session is included into membership package.   Member price field_session_mbr_price No Input with with the price information for members.   Non Member Price field_session_nmbr_price No Input with with the price information for members.   Location Field group - -   Location field_session_location Yes A reference field for selecting the branch or camp.   Physical Location field_session_plocation No A reference field for selecting the facility.   Time Field group - -   Exclusions field_session_exclusions No A date field that identifies dates that would normally have an instance of the session but won’t. Needs to be able to have multiple exclusions. Supports multiple values. Should be handled by a single date field with ‘end date’ option enabled. Its widget should be adjust to not to show period end date, but show period end time (to keep period start/end date equal).   Time field_session_time Paragraph Session schedule.   Date \u0026 Time field_session_time_date No This will use Drupal date/time fields \u0026 should be a single date field with ‘end date’ and ‘end time’ option enabled.   Days field_session_time_days No Checkboxes with following values: sunday|Sundaymonday|Mondaytuesday|Tuesdaywednesday|Wednesdaythursday|Thursdayfriday|Fridaysaturday|Saturday Should support multiple values.    URL pattern No URL pattern. Eventually this content type shouldn’t be available for end users.\n","categories":"","description":"","excerpt":"Session Session content type is used for adding Sessions on the site. …","ref":"/openy_docs/docs/content-structure/content-types/session/","tags":"","title":"Session"},{"body":"Session Time This is a paragraph type that will be used for field_session_time the in Session CT.\nFields    Name Machine name Required Description     Date \u0026 Time field_session_time_date No This will use Drupal date/time fields \u0026 should be a single date field with ‘end date’ and ‘end time’ option enabled.   Days field_session_time_days No Checkboxes with following values: Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday    ","categories":"","description":"","excerpt":"Session Time This is a paragraph type that will be used for …","ref":"/openy_docs/docs/content-structure/paragraphs/session-time/","tags":"","title":"Session Time"},{"body":"Simple Content Simple Content is used for adding text to the pages.\nFields    Name Machine name Required Description     Content field_prgf_description Yes WYSIWYG field without summary.    ","categories":"","description":"","excerpt":"Simple Content Simple Content is used for adding text to the pages. …","ref":"/openy_docs/docs/content-structure/paragraphs/simple-content/","tags":"","title":"Simple Content"},{"body":"Small Banner This is a paragraph type that will be used for the banner content.\nFields    Name Machine name Required Description Notes     Color field_prgf_color Yes Reference field for choosing the term from “Color” vocabulary.    Headline field_prgf_headline Yes Headline of the Small banner. Plain text, 255 characters   Image field_prgf_image No Entityreference to media image. Single value.    Description field_prgf_description No WYSIWYG field without summary.     ","categories":"","description":"","excerpt":"Small Banner This is a paragraph type that will be used for the banner …","ref":"/openy_docs/docs/content-structure/paragraphs/small-banner/","tags":"","title":"Small Banner"},{"body":"Social Post Social Post content type is used for adding Social Posts on the site. Social Posts are grabbed from social networks.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the program item.   ID field_id Yes Post Id in social network. This is system field. Is used by post fetcher.   Image field_image No Image field for saving post image. Can save jpg and png formats.   Link field_link no Contains link to original post in social network.   Platform field_platform no The name of platform where post was imported from.   Post field_post yes Text of post.   Posted field_posted no Date when post was posted in social network    URL pattern Content type is using following pattern: /social_post/[node:title]\n","categories":"","description":"","excerpt":"Social Post Social Post content type is used for adding Social Posts …","ref":"/openy_docs/docs/content-structure/content-types/social-post/","tags":"","title":"Social Post"},{"body":"Social Post Listing This is dynamic paragraph that renders the latest social posts that were imported from social networks.\nFields    Name Machine name Required Description     Title field_prgrf_sl_title No Title for block with social posts.   Description field_prgrf_sl_description No Description for block with social posts.   Social List field_prgrf_sl_block No Reference to views block which select posts and show them as masorny grid.    ","categories":"","description":"","excerpt":"Social Post Listing This is dynamic paragraph that renders the latest …","ref":"/openy_docs/docs/content-structure/paragraphs/social-post-listing/","tags":"","title":"Social Post Listing"},{"body":"Social Share Icons This is a paragraph type that will be used for the add social media share. See more How to configure AddThis\nFields    Name Machine name Required Description Notes    ","categories":"","description":"","excerpt":"Social Share Icons This is a paragraph type that will be used for the …","ref":"/openy_docs/docs/content-structure/paragraphs/social_share_icons/","tags":"","title":"Social_Share_Icons"},{"body":"Here you can find instructions how you can start project based on Open Y distribution.\nNew project from scratch based on Open Y In order to start new project from scratch, you can use installation instructions that will build your project and even add development environment.\nAdd Open Y to existing Drupal 8 project Please take a look at the full composer.json file below that you should eventually get.\n Example composer.json (Drupal 8.3.2 + Open Y 1.2) { \"name\": \"drupal/drupal\", \"description\": \"Drupal is an open source content management platform powering millions of websites and applications.\", \"type\": \"project\", \"license\": \"GPL-2.0+\", \"require\": { \"composer/installers\": \"^1.0.24\", \"wikimedia/composer-merge-plugin\": \"~1.4\", \"ymcatwincities/openy\": \"8.*.*\", \"cweagans/composer-patches\": \"~1.0\" }, \"minimum-stability\": \"dev\", \"prefer-stable\": true, \"config\": { \"preferred-install\": \"dist\", \"autoloader-suffix\": \"Drupal8\", \"secure-http\": false }, \"extra\": { \"_readme\": [ \"By default Drupal loads the autoloader from ./vendor/autoload.php.\", \"To change the autoloader you can edit ./autoload.php.\", \"This file specifies the packages.drupal.org repository.\", \"You can read more about this composer repository at:\", \"https://www.drupal.org/node/2718229\" ], \"merge-plugin\": { \"include\": [ \"core/composer.json\" ], \"recurse\": false, \"replace\": false, \"merge-extra\": false }, \"installer-paths\": { \"core\": [\"type:drupal-core\"], \"libraries/{$name}\": [\"type:drupal-library\"], \"modules/contrib/{$name}\": [\"type:drupal-module\"], \"profiles/contrib/{$name}\": [\"type:drupal-profile\"], \"themes/contrib/{$name}\": [\"type:drupal-theme\"], \"drush/contrib/{$name}\": [\"type:drupal-drush\"], \"modules/custom/{$name}\": [\"type:drupal-custom-module\"], \"themes/custom/{$name}\": [\"type:drupal-custom-theme\"] }, \"enable-patching\": true }, \"autoload\": { \"psr-4\": { \"Drupal\\Core\\Composer\\\": \"core/lib/Drupal/Core/Composer\" } }, \"scripts\": { \"pre-autoload-dump\": \"Drupal\\Core\\Composer\\Composer::preAutoloadDump\", \"post-autoload-dump\": [ \"Drupal\\Core\\Composer\\Composer::ensureHtaccess\" ], \"post-package-install\": \"Drupal\\Core\\Composer\\Composer::vendorTestCodeCleanup\", \"post-package-update\": \"Drupal\\Core\\Composer\\Composer::vendorTestCodeCleanup\", \"post-install-cmd\": [ \"bash scripts/remove_vendor_git_folders.sh || :\" ], \"post-update-cmd\": [ \"bash scripts/remove_vendor_git_folders.sh || :\" ] }, \"repositories\": [ { \"type\": \"composer\", \"url\": \"https://packages.drupal.org/8\" }, { \"type\": \"package\", \"package\": { \"name\": \"library-kenwheeler/slick\", \"version\": \"1.6.0\", \"type\": \"drupal-library\", \"source\": { \"url\": \"https://github.com/kenwheeler/slick\", \"type\": \"git\", \"reference\": \"1.6.0\" } } }, { \"type\": \"package\", \"package\": { \"name\": \"library-dinbror/blazy\", \"version\": \"1.8.2\", \"type\": \"drupal-library\", \"source\": { \"url\": \"https://github.com/dinbror/blazy\", \"type\": \"git\", \"reference\": \"1.8.2\" } } }, { \"type\": \"package\", \"package\": { \"name\": \"library-gdsmith/jquery.easing\", \"version\": \"1.4.1\", \"type\": \"drupal-library\", \"source\": { \"url\": \"https://github.com/gdsmith/jquery.easing\", \"type\": \"git\", \"reference\": \"1.4.1\" } } }, { \"type\": \"package\", \"package\": { \"name\": \"library-enyo/dropzone\", \"version\": \"4.3.0\", \"type\": \"drupal-library\", \"source\": { \"url\": \"https://github.com/enyo/dropzone\", \"type\": \"git\", \"reference\": \"v4.3.0\" } } }, { \"type\": \"package\", \"package\": { \"name\": \"library-jaypan/jquery_colorpicker\", \"version\": \"1.0.1\", \"type\": \"drupal-library\", \"source\": { \"url\": \"https://github.com/jaypan/jquery_colorpicker\", \"type\": \"git\", \"reference\": \"da978ae124c57817021b3166a31881876882f5f9\" } } }, { \"type\": \"package\", \"package\": { \"name\": \"library-ckeditor/panelbutton\", \"version\": \"4.7.0\", \"type\": \"drupal-library\", \"dist\": { \"url\": \"http://download.ckeditor.com/panelbutton/releases/panelbutton_4.7.0.zip\", \"type\": \"zip\" } } }, { \"type\": \"package\", \"package\": { \"name\": \"library-ckeditor/colorbutton\", \"version\": \"4.7.0\", \"type\": \"drupal-library\", \"dist\": { \"url\": \"http://download.ckeditor.com/colorbutton/releases/colorbutton_4.7.0.zip\", \"type\": \"zip\" } } }, { \"type\": \"package\", \"package\": { \"name\": \"library-ckeditor/colordialog\", \"version\": \"4.7.0\", \"type\": \"drupal-library\", \"dist\": { \"url\": \"http://download.ckeditor.com/colordialog/releases/colordialog_4.7.0.zip\", \"type\": \"zip\" } } }, { \"type\": \"package\", \"package\": { \"name\": \"library-ckeditor/glyphicons\", \"version\": \"2.2\", \"type\": \"drupal-library\", \"dist\": { \"url\": \"http://download.ckeditor.com/glyphicons/releases/glyphicons_2.2.zip\", \"type\": \"zip\" } } } ] }    Add \"ymcatwincities/openy\": \"8.*.*\" to the require section in your composer.json, like here\n  Add all required repositories that are listed here to your composer.json\n  Add installer path as here to your composer json. See example.\n    composer.json inside of docroot Installer path will look like this:\n\"installer-paths\": { \"core\": [\"type:drupal-core\"], \"libraries/{$name}\": [\"type:drupal-library\"], \"modules/contrib/{$name}\": [\"type:drupal-module\"], \"profiles/contrib/{$name}\": [\"type:drupal-profile\"], \"themes/contrib/{$name}\": [\"type:drupal-theme\"], \"drush/contrib/{$name}\": [\"type:drupal-drush\"], \"modules/custom/{$name}\": [\"type:drupal-custom-module\"], \"themes/custom/{$name}\": [\"type:drupal-custom-theme\"] }   composer.json outside of docroot Installer path will look like this:\n\"installer-paths\": { \"docroot/core\": [\"type:drupal-core\"], \"docroot/libraries/{$name}\": [\"type:drupal-library\"], \"docroot/modules/contrib/{$name}\": [\"type:drupal-module\"], \"docroot/profiles/contrib/{$name}\": [\"type:drupal-profile\"], \"docroot/themes/contrib/{$name}\": [\"type:drupal-theme\"], \"drush/contrib/{$name}\": [\"type:drupal-drush\"], \"docroot/modules/custom/{$name}\": [\"type:drupal-custom-module\"], \"docroot/themes/custom/{$name}\": [\"type:drupal-custom-theme\"] }    Add \"cweagans/composer-patches\": \"~1.0\" to the require section in you composer.json. See example.\n  Add \"enable-patching\": true to the extra section in your composer.json See example.\n  Add \"secure-http\": false to the config section in your composer.json See example.\n  Remove composer.lock and vendor folder from the project if they are exist in your folder.\n  Remove \"replace\" section from your composer.json\n  (Optional) If you keep vendor folder in your git repository, we recommend to clean up project from .git folder inside modules and libraries. To do so\n    Add cleaner script to your project from Open Y composer package. You can just copy it and paste onto your project.\n  Adjust folders that you would like to cleanup\n  Execute it in post-install-cmd and post-update-cmd:\n\"post-install-cmd\": [ \"bash scripts/remove_vendor_git_folders.sh || :\" ], \"post-update-cmd\": [ \"bash scripts/remove_vendor_git_folders.sh || :\" ]   Run composer install  CIBox In this section you can learn how to configure development environment and CI server using Open Source product CIBox.\nCreate project   Generate project based on this quickstart\n  Add Open Y to the project using (Add Open Y to already existing Drupal 8 project)\n  Init git and add initial commit\n  cd OPENY_PROJECT git init git commit -m \"Init Open Y project\" git remote add origin git@github.com:NAMESPACE/PROJECT.git git push -u origin master Spin up your local vagrant machine  vagrant up --provision Setup CI server for new project based on CIBox documentation.   Follow quick start starting from Jenkins Provisioning Step http://docs.cibox.tools/en/latest/Quickstart/#jenkins-provisioning (Here we will get PR builds and DEMO site (DEV environment) with credentials to it ) Setup hosting STAGE environment (it should be a 1:1 copy of existing or expected hosting account for ability to provide performance testing there) Setup deployment plans for CI by reusing DEMO builder job  Install Open Y on DigitalOcean  Create new Droplet using “One-click apps” image Drupal 8.*.* on 14.04 Login to server via SSH or web console Run command  bash \u003c(curl -s https://raw.githubusercontent.com/ymcatwincities/openy/8.x-1.x/build/openy-digital-ocean.sh) Open link(e.g. http://IP/core/install.php) from console output and finish Open Y installation  Video tutorial \nEnd to end installation )\n","categories":"","description":"","excerpt":"Here you can find instructions how you can start project based on Open …","ref":"/openy_docs/docs/development/start-new-openy-project/","tags":"","title":"Start new OpenY project"},{"body":"Story Card This is a Paragraph type that will be used for the Story Cards.\nFields    Name Machine name Required Description     Title field_prgf_title No Title of the Story Card.   Headline field_prgf_headline Yes Headline of the Story Card.   Link field_prgf_link No Link field that should store internal and external links.    ","categories":"","description":"","excerpt":"Story Card This is a Paragraph type that will be used for the Story …","ref":"/openy_docs/docs/content-structure/paragraphs/story-card/","tags":"","title":"Story Card"},{"body":"","categories":"","description":"","excerpt":"","ref":"/openy_docs/tags/","tags":"","title":"Tags"},{"body":"","categories":"","description":"","excerpt":"","ref":"/openy_docs/docs/content-structure/taxonomy/","tags":"","title":"Taxonomy"},{"body":"Teaser This is a paragraph type that will be used for the teaser content.\nFields    Name Machine name Required Description     Title field_prgf_title No Title of the Teaser.   Image field_prgf_image No Entityreference to media image. Single value.   Description field_prgf_description No WYSIWYG field without summary.   Link field_prgf_link No Link field that should store internal and external links.    ","categories":"","description":"","excerpt":"Teaser This is a paragraph type that will be used for the teaser …","ref":"/openy_docs/docs/content-structure/paragraphs/teaser/","tags":"","title":"Teaser"},{"body":"Requirements  php-cli 7.4 ( memory_limit value should be large ( 2000M ) or unlimiter ( -1 ) in order to not fail composer 2  Steps  Obtain latest development code of Open Y  composer create-project ymcatwincities/openy-project:9.2.x-development-dev openy7.4 Add phpcompatibility to require-dev section  cd open7.4 composer require --dev phpcompatibility/php-compatibility ./vendor/bin/phpcs -p . --standard=PHPCompatibility --runtime-set testVersion 7.4 --config-set installed_paths vendor/phpcompatibility/php-compatibility Generate report  ./vendor/bin/phpcs -p . --standard=PHPCompatibility --runtime-set testVersion 7.4 --report-file=report.txt or if you need to skip warnings\n./vendor/bin/phpcs -p . --standard=PHPCompatibility --runtime-set testVersion 7.4 --report-file=report.txt -n In report.txt you’d find a full list of findings to be resolved in order to pass compatibility\n","categories":"","description":"","excerpt":"Requirements  php-cli 7.4 ( memory_limit value should be large ( 2000M …","ref":"/openy_docs/docs/wiki/testing-open-y-for-php-7.4-version-support/","tags":"","title":"Testing-Open-Y-for-PHP-7.4-version-support"},{"body":"Running Tests These instructions explain how you can run tests.\nBehat Requirements  Ansible 1.9.4+ http://docs.ansible.com/ansible/intro_installation.html Docker https://docs.docker.com/engine/installation/  Run full test suite   Execute command\n$ cd profiles/contrib/openy $ sh runtests.sh   Open http://site.com/profiles/contrib/openy/build/reports/behat in browser.\n  Run selenium container + Behat tests in usual way In order to run only selenium container + behat in usual way:\n$ cd profiles/contrib/openy $ sh runtests.sh --tags run_selenium $ bin/behat Stop selenium container In order to stop selenium container:\n$ cd profiles/contrib/openy $ sh runtests.sh --tags stop_selenium If necessary, edit behat.local.yml to match your environment.\nVisual debugging - Video When you develop JS tests, it’s important to see what’s going on the Selenium screen. You can easily see this during development.\n Install https://www.realvnc.com/download/viewer Run selenium using command  $ cd profiles/contrib/openy $ sh runtests.sh --tags run_selenium Open installed VNC Viewer and connect to the server with IP 192.168.56.132:5901   Password = secret  Run tests and you should see everything that is performed by behat tests in VNC client  $ bin/behat \nCustom Behat functionality  Create entities in table forms, with key to use in reference and reference entities by key.  KEY is optional, and must be all CAPS. Taxonomy Given I create \"taxonomy_term\" of type \"color\" with key for reference: | KEY | name | field_color | | Blue | Blue | 0000FF | | Red | Red | FF0000 |  Paragraphs Given I create \"paragraph\" of type \"small_banner\" with key for reference: | KEY | field_prgf_headline | field_prgf_color | | banner1 | Headline 1 | Blue | | banner2 | Headline 2 | Red |  Media entities Given I create \"media\" of type \"image\" with key for reference: | KEY | name | file | | gallery_1 | Gallery image 1 | gallery.png | | gallery_2 | Gallery image 2 | gallery2.png | | gallery_3 | Gallery image 3 | gallery3.png |    Create nodes in table forms, with key to use in reference and reference entities by key.  KEY is optional, and must be all CAPS. Basic create Given I create \"landing_page\" content: | KEY | title | field_lp_layout | field_content | | landing_1 | Test Landing 01 | one_column | banner1 | | landing_2 | Test Landing 02 | one_column | banner2 |  Vertical field table Given I create large \"landing_page\" content: | KEY | landing_3 | landing_4 | | title | Test Landing 03 | Test Landing 04 | | field_lp_layout | one_column | one_column | | field_content | banner1 | banner2 |  Create \u0026 view immediately Given I view a \"landing_page\" content: | KEY | landing_5 | | title | Test Landing 05 | | field_lp_layout | one_column | | field_content | banner1 |  Multiple referenced entities by key on a field. Given I create \"landing_page\" content: | KEY | title | field_lp_layout | field_content | | landing_6 | Test Landing 06 | one_column | banner1, banner2 |     Example Address and Latitude + Longitude Fields with sub field/columns: The machine name and columns can be found in the form markup in the field name property. The first portion, field_location_address represents the Drupal field machine name, while the second array key address_line1 represents the column.\n Add Address Given I view a \"branch\" content: | title | Branch Example | | field_location_address:country_code | US | | :address_line1 | Main road 10 | | :locality | Seattle | | :administrative_area | WA | | :postal_code | 98101 |  Add Latitude and Longitude Given I view a \"branch\" content: | title | Branch Example 2 | | field_location_coordinates:lat | 47.293433 | | :lng | -122.238717 | | field_location_phone | +1234567890 | ```)   ","categories":"","description":"","excerpt":"Running Tests These instructions explain how you can run tests.\nBehat …","ref":"/openy_docs/docs/development/tests/","tags":"","title":"Tests"},{"body":"Welcome to Open Y Theming and Design documentation.\nHow to change styles on content type level Given: As an Open Y site developer, I want to be able to easily change the CSS for a Camp page independently from a Location page, so I can better customize the site to meet the needs of my customers.\nHow to:\n If you need to change CSS on some pages independently, you should enable Custom CSS functionality on the theme configuration page - Custom CSS - check “Enable or disable custom CSS”. Input CSS code into the textarea.  In order to change CSS on each particular page you should use the following selectors:\n .page-node-type-{node type}; .node-id-{node ID}; .path-frontpage.  The existing node types are: activity, alert, blog, branch, camp, class, facility, landing-page, membership, news, program, program-subcategory, session.)\n","categories":"","description":"","excerpt":"Welcome to Open Y Theming and Design documentation.\nHow to change …","ref":"/openy_docs/docs/development/theming_and_design/","tags":"","title":"Theming_and_Design"},{"body":"How to use Tour for modules How to use Open Y Tour Token with Tour In someone modules have tour tips and for more interactivity, you can add a token with a click to any selector.\n  In the module open tour yml file.   Select the tip for edit and in body add token like this [openy_tour:click:button_name:selector]   Create hook update for you changes and in command line run drush updb -y\n  Token components: [openy_tour:click:button_name:selector]* openy_tour - token name;\nclick - command in the token;\nbutton_name - name of button when show in a tip;\nselector - selector to be clicked.\nPlease see and use jQuery selectors.)\n","categories":"","description":"","excerpt":"How to use Tour for modules How to use Open Y Tour Token with Tour In …","ref":"/openy_docs/docs/development/tour/","tags":"","title":"Tour"},{"body":"How to support upgrade path All changes in configurations should be added to appropriate hook_update_N in order to update already existing environments. We suggest to use https://www.drupal.org/project/confi for working with hook_update_N.\nopeny.install in profile In this file we should put updates that are related to the distribution in general and don’t fit into any feature.\n Enable/Disable module General configs  openy_*.install in modules In case if you update some configuration for specific feature, make sure that you put updates into appropriate module.\nRevert only specific property from config With config_import module help we can update only part from full config.\nFor updating specific property in config (use service ‘openy_upgrade_tool.param_updater’):\n  go to related to this config module\n  create new hook_update_N in openy_*.install file\n  in update add next code (this is example):\n  $config = drupal_get_path('module', 'openy_media_image') . '/config/install/views.view.images_library.yml'; $config_importer = \\Drupal::service('openy_upgrade_tool.param_updater'); $config_importer-\u003eupdate($config, 'views.view.images_library', 'display.default.display_options.pager'); Where:\n $config variable contains path to config with config name “views.view.images_library” - config name “display.default.display_options.pager” - config specific property (you can set value from a nested array with variable depth)  Revert full configs For updating full config or several configs from directory use service ‘openy_upgrade_tool.importer’.\n$config_dir = drupal_get_path('module', 'openy_media_image') . '/config/install'; $config_importer = \\Drupal::service('openy_upgrade_tool.importer'); $config_importer-\u003esetDirectory($config_dir); $config_importer-\u003eimportConfigs(['views.view.images_library']); Where:\n $config_dir - path to directory with config “views.view.images_library” - config name  Also you can update several configs from directory:\n$config_importer-\u003eimportConfigs([ 'views.view.images_library', 'views.view.example_view', ]); ```) ","categories":"","description":"","excerpt":"How to support upgrade path All changes in configurations should be …","ref":"/openy_docs/docs/development/upgrade-path/","tags":"","title":"Upgrade path"},{"body":"Video tutorials Upgrade OpenY from 8.0.7 to 8.2.2.1 - https://www.youtube.com/watch?v=U_mg0-yKGOI\nDocument is work in progress These are instructions for upgrading a very old version of Open Y to the latest version. Given the fact Drupal 8.7+ has no support for automatic entity updates ( BaseFieldDefinitions ) we have to upgrade to 8.2.2.1 of OpenY, which is still on 8.6 Drupal Core, and then update to the latest Open Y version as usual.\nEnvironment vagrant@vagrant:/var/www/docroot$ uname -a Linux vagrant 4.15.0-29-generic #31-Ubuntu SMP Tue Jul 17 15:39:52 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux vagrant@vagrant:/var/www/docroot$ lsb_release -a No LSB modules are available. Distributor ID:\tUbuntu Description:\tUbuntu 18.04.1 LTS Release:\t18.04 Codename:\tbionic vagrant@vagrant:/var/www/docroot$ php -v **PHP 7.1.31-1**+ubuntu18.04.1+deb.sury.org+1 (cli) (built: Aug 7 2019 10:23:12) ( NTS ) Copyright (c) 1997-2018 The PHP Group Zend Engine v3.1.0, Copyright (c) 1998-2018 Zend Technologies with Zend OPcache v7.1.31-1+ubuntu18.04.1+deb.sury.org+1, Copyright (c) 1999-2018, by Zend Technologies with Xdebug v2.7.2, Copyright (c) 2002-2019, by Derick Rethans vagrant@vagrant:/var/www/docroot$ drush --version **Drush Version : 8.2.3** vagrant@vagrant:/var/www/docroot$ composer --version **Composer version 1.7.2** 2018-08-16 16:57:12 Step by step guide for update  Use PHP7.1 for upgrade and install php7.1-mysql php7.1-mcrypt php7.1-cli php7.1-common php7.1-curl php7.1-dev php7.1-fpm php7.1-gd php7.1-mysql php7.1-memcached php7.1-imagic php7.1-xml php7.1-xdebug php7.1-mbstring php7.1-soap php7.1-zip php7.1-xml Go to the folder of OpenY code tree where docroot folder is contained mv composer.json composer.json.orig wget https://raw.githubusercontent.com/ymcatwincities/openy-project/8.2.x/composer.json mkdir -p scripts ; cd scripts \u0026\u0026 wget https://raw.githubusercontent.com/ymcatwincities/openy-project/8.2.x/scripts/remove_libraries_gitignore_files.sh \u0026\u0026 cd .. composer require ymcatwincities/openy:8.2.2.1 --no-suggest --no-update composer install --ignore-platform-reqs --no-suggest composer update --prefer-stable --no-suggest cd docroot drush dl -y plugin-8.x-2.5 contribute-8.x-1.0-beta7 scheduler-8.x-1.0 views_block_filter_block datalayer simple_menu_icons rabbit_hole metatag simple_sitemap-8.x-3.0 easy_breadcrumb-8.x-1.6 drush en openy_upgrade_tool openy_er openy_prgf_loc_finder openy_map openy_data_wrapper openy_loc_branch content_moderation focal_point drush ev \"Drupal::service('module_installer')-\u003einstall(['openy']);\" \u003c- This steps fixes some hidden bug when openy profile removed from core.extension configuration for unknown reason. Manual step (optional, if you have issues with drush updatedb): Edit all yml files in profiles folder to comment media.type.image , field.field.node.program.field_header_content, field.field.node.branch.field_location_amenities in dependencies sections.   run drush updatedb -y \u003c- this will fail for the first time ( Media not installed yet ), disregard run drush updatedb -y \u003c- this should run properly. run drush entup  ","categories":"","description":"","excerpt":"Video tutorials Upgrade OpenY from 8.0.7 to 8.2.2.1 - …","ref":"/openy_docs/docs/wiki/upgrade-openy-8.1.3-to-8.2.2.1/","tags":"","title":"Upgrade-OpenY-8.1.3-to-8.2.2.1"},{"body":"1 uninstall lndr and optimizely modules before running composer update commands\n2 config to remove\ndrush cdel image.style.browser_thumbnail 3 enable openy_focal_point and media_directories_ui should be enabled when upgrade from 8.2.2.3 to 8.2.7.3\n4 - run drush updatedb and next steps from tutorial\n","categories":"","description":"","excerpt":"1 uninstall lndr and optimizely modules before running composer update …","ref":"/openy_docs/docs/wiki/upgrade-use-case-from-8.2.2.3-to-8.2.7.3/","tags":"","title":"Upgrade-use-case-from-8.2.2.3-to-8.2.7.3"},{"body":"Video Tutorials The Open Y team maintains a YouTube channel with video tutorials for developers, content editors, evaluators, and more. Visit YouTube for the full list of content.\nPlaylists As of December 2021:\n Open Y Monthly Calls 2021 Smoke Tests Open Y Tutorial; Virtual Y Live Streaming Tutorials Open Y Meetups Virtual Y: Installation Tutorials Open Y Monthly Calls 2020 Open Y Tutorial; Drupal Basics for Content Managers Open Y Summit 2019 Presentations Open Y Tutorial; Security OpenY components Open Y Tutorial; Content Types Open Y Tutorial; Blogs \u0026 Content Open Y Tutorial; Basic Configuration Instructions For Y Associations For Developers  ","categories":"","description":"","excerpt":"Video Tutorials The Open Y team maintains a YouTube channel with video …","ref":"/openy_docs/docs/wiki/videos/","tags":"","title":"Videos"},{"body":"Webform This is a paragraph type that will be used for the embedding webforms.\nFields    Name Machine name Required Description     Embedded Webform field_prgf_webform No Embedded webform entityreference (select). Single value.   Default webform submission data (YAML) field_prgf_webform_default_data No YAML code for passing in default values to webform.   Webform status field_prgf_webform_status No Status of webform on render. Radio with 2 options, open or closed (Closed prevents further submissions).    ","categories":"","description":"","excerpt":"Webform This is a paragraph type that will be used for the embedding …","ref":"/openy_docs/docs/content-structure/paragraphs/webform/","tags":"","title":"Webform"},{"body":"This wiki is the primary location for developer documentation for Open Y - a digital transformation platform for YMCAs.\nWhere to Start For YMCA Associations  OpenY Release Schedule  For Developers  Development Processes Updating Open Y Development FAQ Code review best practices  For QA Engineers  Open Y Smoke Tests Index   Table of Contents Community Guidelines Best Practices  Code of Conduct Coding Standards Pull Request Standards  Legal  Participant Agreement Terms of Use  Getting Started with Open Y Development Whether you are just getting started with Open Y or need to test a feature in a stable environment, the Open Y Core Team maintains a number of Sandboxes that you can use.\nProcesses \u0026 Components  Development Processes Development-FAQ Videos Spam Protection Strategies  Environment Setup  Tech Stack Open-Y-one-click-install-how-to Install-Solr-site-search-for-Open-Y Install-SSL-certificate-for-the-OpenY-site Switching Drupal Core Versions  Contributing to Open Y Working with Existing Functionality  Working with Themes Working with the Open Y Profile Smoke Tests for Validating Changes  Adding and Removing Functionality  How to Contribute a New Component How we Deprecate Components  Dependency Management  Managing Composer Version Constraints Updating to Composer 2  Decoupling Open Y  Intro to Decoupling Open Y Components List of Decoupled Components Managing Drupal Dependencies while Decoupling Analytics Decoupling and Opt-out  Ongoing Maintenance Releases  Open-Y-Release-Schedule-and-Guidelines How-we-release-OpenY-distribution-from-code-perspective  Update Processes \u0026 Notices  Updating Open Y Important-versions-for-upgrade-path  These documents are for old versions of Open Y, but may contain useful information for troubleshooting future update issues.\n SA-CORE-2018-004 SA-CORE-2018-002 Upgrade from 8.0.x to 8.1.x Upgrade-OpenY-8.1.3-to-8.2.2.1 Upgrade-use-case-from-8.2.2.3-to-8.2.7.3  ","categories":"","description":"","excerpt":"This wiki is the primary location for developer documentation for Open …","ref":"/openy_docs/docs/wiki/","tags":"","title":"Wiki"},{"body":"Media WYSIWYG View Modes Listed view modes are available for embedding in WYSIWYG editor.\nView Modes    Name Machine name Description     Full embedded_full This view mode displays media asset with full width.   Half embedded_half This view mode displays media asset with half width and uses alingment.   Link embedded_link This view mode displays link to media asset.    Bundles details Image In “Full” and “Half” view modes image should be display in \u003cimg\u003e tag with appropriate classes. Link - should lead to the original image with target=blank.\nVideo In “Full” and “Half” view modes should be displayed embedded video with appropriate classes. Link - should lead to the original video with target=blank.\nDocument In “Full” and “Half” view modes document should be displayed as iframe, where URL is URL to the document. Also it should have appripriate classes.\n\u003ciframe src=\"//docs.google.com/gview?url=URL\u0026embedded=true\" frameborder=\"0\"\u003e\u003c/iframe\u003e Link - should lead to the original document with target=blank.\n","categories":"","description":"","excerpt":"Media WYSIWYG View Modes Listed view modes are available for embedding …","ref":"/openy_docs/docs/content-structure/media/wysiwyg-view-modes/","tags":"","title":"WYSIWYG View Modes"}]