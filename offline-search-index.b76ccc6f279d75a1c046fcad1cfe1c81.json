[{"body":" These basic sample guidelines assume that your Docsy site is deployed using Netlify and your files are stored in GitHub. You can use the guidelines “as is” or adapt them with your own instructions: for example, other deployment options, information about your doc project’s file structure, project-specific review guidelines, versioning guidelines, or any other information your users might find useful when updating your site. Kubeflow has a great example.\nDon’t forget to link to your own doc repo rather than our example site! Also make sure users can find these guidelines from your doc repo README: either add them there and link to them from this page, add them here and link to them from the README, or include them in both locations.\n We use Hugo to format and generate our website, the Docsy theme for styling and site structure, and Netlify to manage the deployment of the site. Hugo is an open-source static site generator that provides us with templates, content organisation in a standard directory structure, and a website generation engine. You write the pages in Markdown (or HTML if you want), and Hugo wraps them up into a website.\nAll submissions, including submissions by project members, require review. We use GitHub pull requests for this purpose. Consult GitHub Help for more information on using pull requests.\nQuick start with Netlify Here’s a quick guide to updating the docs. It assumes you’re familiar with the GitHub workflow and you’re happy to use the automated preview of your doc updates:\n Fork the Goldydocs repo on GitHub. Make your changes and send a pull request (PR). If you’re not yet ready for a review, add “WIP” to the PR name to indicate it’s a work in progress. (Don’t add the Hugo property “draft = true” to the page front matter, because that prevents the auto-deployment of the content preview described in the next point.) Wait for the automated PR workflow to do some checks. When it’s ready, you should see a comment like this: deploy/netlify — Deploy preview ready! Click Details to the right of “Deploy preview ready” to see a preview of your updates. Continue updating your doc and pushing your changes until you’re happy with the content. When you’re ready for a review, add a comment to the PR, and remove any “WIP” markers.  Updating a single page If you’ve just spotted something you’d like to change while using the docs, Docsy has a shortcut for you:\n Click Edit this page in the top right hand corner of the page. If you don’t already have an up to date fork of the project repo, you are prompted to get one - click Fork this repository and propose changes or Update your Fork to get an up to date version of the project to edit. The appropriate page in your fork is displayed in edit mode. Follow the rest of the Quick start with Netlify process above to make, preview, and propose your changes.  Previewing your changes locally If you want to run your own local Hugo server to preview your changes as you work:\n  Follow the instructions in Getting started to install Hugo and any other tools you need. You’ll need at least Hugo version 0.45 (we recommend using the most recent available version), and it must be the extended version, which supports SCSS.\n  Fork the Goldydocs repo repo into your own project, then create a local copy using git clone. Don’t forget to use --recurse-submodules or you won’t pull down some of the code you need to generate a working site.\ngit clone --recurse-submodules --depth 1 https://github.com/google/docsy-example.git   Run hugo server in the site root directory. By default your site will be available at http://localhost:1313/. Now that you’re serving your site locally, Hugo will watch for changes to the content and automatically refresh your site.\n  Continue with the usual GitHub workflow to edit files, commit them, push the changes up to your fork, and create a pull request.\n  Creating an issue If you’ve found a problem in the docs, but you’re not sure how to fix it yourself, please create an issue in the Goldydocs repo. You can also create an issue about a specific page by clicking the Create Issue button in the top right hand corner of the page.\nUseful resources  Docsy user guide: All about Docsy, including how it manages navigation, look and feel, and multi-language support. Hugo documentation: Comprehensive reference for Hugo. Github Hello World!: A basic introduction to GitHub concepts and workflow.  ","categories":"","description":"How to contribute to the docs\n","excerpt":"How to contribute to the docs\n","ref":"/openy_docs/docs/contribution-guidelines/","tags":"","title":"Contribution Guidelines"},{"body":"","categories":"","description":"","excerpt":"","ref":"/openy_docs/blog/news/","tags":"","title":"News About Docsy"},{"body":"","categories":"","description":"","excerpt":"","ref":"/openy_docs/blog/releases/","tags":"","title":"New Releases"},{"body":"This is a typical blog post that includes images.\nThe front matter specifies the date of the blog post, its title, a short description that will be displayed on the blog landing page, and its author.\nIncluding images Here’s an image (featured-sunset-get.png) that includes a byline and a caption.\nFetch and scale an image in the upcoming Hugo 0.43. Photo: Riona MacNamara / CC-BY-CA\n  The front matter of this post specifies properties to be assigned to all image resources:\nresources: - src: \"**.{png,jpg}\" title: \"Image #:counter\" params: byline: \"Photo: Riona MacNamara / CC-BY-CA\" To include the image in a page, specify its details like this:\n Fetch and scale an image in the upcoming Hugo 0.43. Photo: Riona MacNamara / CC-BY-CA\n  The image will be rendered at the size and byline specified in the front matter.\n","categories":"","description":"The Docsy Hugo theme lets project maintainers and contributors focus on content, not on reinventing a website infrastructure from scratch","excerpt":"The Docsy Hugo theme lets project maintainers and contributors focus …","ref":"/openy_docs/blog/2018/10/06/easy-documentation-with-docsy/","tags":"","title":"Easy documentation with Docsy"},{"body":"Text can be bold, italic, or strikethrough. Links should be blue with no underlines (unless hovered over).\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\n There should be no margin above this first sentence.\nBlockquotes should be a lighter gray with a border along the left side in the secondary color.\nThere should be no margin below this final sentence.\n First Header This is a normal paragraph following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nBacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nOn big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.\nLorem markdownum tuta hospes stabat; idem saxum facit quaterque repetito occumbere, oves novem gestit haerebat frena; qui. Respicit recurvam erat: pignora hinc reppulit nos aut, aptos, ipsa.\nMeae optatos passa est Epiros utiliter Talibus niveis, hoc lata, edidit. Dixi ad aestum.\nHeader 2  This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\n Header 3 This is a code block following a header. Header 4  This is an unordered list following a header. This is an unordered list following a header. This is an unordered list following a header.  Header 5  This is an ordered list following a header. This is an ordered list following a header. This is an ordered list following a header.  Header 6    What Follows     A table A header   A table A header   A table A header     There’s a horizontal rule above and below this.\n Here is an unordered list:\n Salt-n-Pepa Bel Biv DeVoe Kid ‘N Play  And an ordered list:\n Michael Jackson Michael Bolton Michael Bublé  And an unordered task list:\n Create a sample markdown document Add task lists to it Take a vacation  And a “mixed” task list:\n Steal underpants ? Profit!  And a nested list:\n Jackson 5  Michael Tito Jackie Marlon Jermaine   TMNT  Leonardo Michelangelo Donatello Raphael    Definition lists can be used with Markdown syntax. Definition terms are bold.\n Name Godzilla Born 1952 Birthplace Japan Color Green   Tables should have bold headings and alternating shaded rows.\n   Artist Album Year     Michael Jackson Thriller 1982   Prince Purple Rain 1984   Beastie Boys License to Ill 1986    If a table is too wide, it should scroll horizontally.\n   Artist Album Year Label Awards Songs     Michael Jackson Thriller 1982 Epic Records Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical Wanna Be Startin’ Somethin', Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life   Prince Purple Rain 1984 Warner Brothers Records Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal Let’s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I’m a Star, Purple Rain   Beastie Boys License to Ill 1986 Mercury Records noawardsbutthistablecelliswide Rhymin \u0026 Stealin, The New Style, She’s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill     Code snippets like var foo = \"bar\"; can be shown inline.\nAlso, this should vertically align with this and this.\nCode can also be shown in a block element.\nfoo := \"bar\"; bar := \"foo\"; Code can also use syntax highlighting.\nfunc main() { input := `var foo = \"bar\";` lexer := lexers.Get(\"javascript\") iterator, _ := lexer.Tokenise(nil, input) style := styles.Get(\"github\") formatter := html.New(html.WithLineNumbers()) var buff bytes.Buffer formatter.Format(\u0026buff, style, iterator) fmt.Println(buff.String()) } Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Inline code inside table cells should still be distinguishable.\n   Language Code     Javascript var foo = \"bar\";   Ruby foo = \"bar\"{     Small images should be shown at their actual size.\nLarge images should always scale down and fit in the content container.\nComponents Alerts  This is an alert.  Note: This is an alert with a title.  This is a successful alert.  This is a warning!  Warning! This is a warning with a title!  Sizing Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nParameters available Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsing pixels Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsing rem Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nMemory Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nRAM to use Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nMore is better Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsed RAM Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nThis is the final element on the page and there should be no margin below this. ","categories":"","description":"A short lead description about this content page. Text here can also be **bold** or _italic_ and can even be split over multiple paragraphs.\n","excerpt":"A short lead description about this content page. Text here can also …","ref":"/openy_docs/blog/2018/10/06/the-second-blog-post/","tags":"","title":"The second blog post"},{"body":"Text can be bold, italic, or strikethrough. Links should be blue with no underlines (unless hovered over).\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\n There should be no margin above this first sentence.\nBlockquotes should be a lighter gray with a border along the left side in the secondary color.\nThere should be no margin below this final sentence.\n First Header This is a normal paragraph following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nBacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nOn big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.\nLorem markdownum tuta hospes stabat; idem saxum facit quaterque repetito occumbere, oves novem gestit haerebat frena; qui. Respicit recurvam erat: pignora hinc reppulit nos aut, aptos, ipsa.\nMeae optatos passa est Epiros utiliter Talibus niveis, hoc lata, edidit. Dixi ad aestum.\nHeader 2  This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\n Header 3 This is a code block following a header. Header 4  This is an unordered list following a header. This is an unordered list following a header. This is an unordered list following a header.  Header 5  This is an ordered list following a header. This is an ordered list following a header. This is an ordered list following a header.  Header 6    What Follows     A table A header   A table A header   A table A header     There’s a horizontal rule above and below this.\n Here is an unordered list:\n Salt-n-Pepa Bel Biv DeVoe Kid ‘N Play  And an ordered list:\n Michael Jackson Michael Bolton Michael Bublé  And an unordered task list:\n Create a sample markdown document Add task lists to it Take a vacation  And a “mixed” task list:\n Steal underpants ? Profit!  And a nested list:\n Jackson 5  Michael Tito Jackie Marlon Jermaine   TMNT  Leonardo Michelangelo Donatello Raphael    Definition lists can be used with Markdown syntax. Definition terms are bold.\n Name Godzilla Born 1952 Birthplace Japan Color Green   Tables should have bold headings and alternating shaded rows.\n   Artist Album Year     Michael Jackson Thriller 1982   Prince Purple Rain 1984   Beastie Boys License to Ill 1986    If a table is too wide, it should scroll horizontally.\n   Artist Album Year Label Awards Songs     Michael Jackson Thriller 1982 Epic Records Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical Wanna Be Startin’ Somethin', Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life   Prince Purple Rain 1984 Warner Brothers Records Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal Let’s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I’m a Star, Purple Rain   Beastie Boys License to Ill 1986 Mercury Records noawardsbutthistablecelliswide Rhymin \u0026 Stealin, The New Style, She’s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill     Code snippets like var foo = \"bar\"; can be shown inline.\nAlso, this should vertically align with this and this.\nCode can also be shown in a block element.\nfoo := \"bar\"; bar := \"foo\"; Code can also use syntax highlighting.\nfunc main() { input := `var foo = \"bar\";` lexer := lexers.Get(\"javascript\") iterator, _ := lexer.Tokenise(nil, input) style := styles.Get(\"github\") formatter := html.New(html.WithLineNumbers()) var buff bytes.Buffer formatter.Format(\u0026buff, style, iterator) fmt.Println(buff.String()) } Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Inline code inside table cells should still be distinguishable.\n   Language Code     Javascript var foo = \"bar\";   Ruby foo = \"bar\"{     Small images should be shown at their actual size.\nLarge images should always scale down and fit in the content container.\nComponents Alerts  This is an alert.  Note: This is an alert with a title.  This is a successful alert.  This is a warning!  Warning! This is a warning with a title!  Sizing Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nParameters available Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsing pixels Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsing rem Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nMemory Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nRAM to use Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nMore is better Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsed RAM Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nThis is the final element on the page and there should be no margin below this. ","categories":"","description":"A short lead description about this content page. Text here can also be **bold** or _italic_ and can even be split over multiple paragraphs.\n","excerpt":"A short lead description about this content page. Text here can also …","ref":"/openy_docs/blog/2018/01/04/another-great-release/","tags":"","title":"Another Great Release"},{"body":"Welcome to the Open Y Content Types documentation\nIn terms of Open Y - content types are bundles of node entity of the Drupal Framework. You can find a much more low level documentation at drupal.org.\nOpen Y has a bunch of content types shipped for the convenience of usage the resulting site. We are not limiting amount of content types, could be added by developers, so the list is not final. The only rule we are trying to follow is to cover shipped list of content types by Open Y upgrade path.\n","categories":"","description":"","excerpt":"Welcome to the Open Y Content Types documentation\nIn terms of Open Y - …","ref":"/openy_docs/docs/content-structure/content-types/readme/","tags":"","title":""},{"body":"Welcome to Open Y paragraphs.\nParagraphs are bits of content, components, from component based design ideology. In a scope of Open Y architecture paragraphs are based on Paragraphs Drupal module.\nThe core idea of paragraphs is to have a nice looking and behaving widget for adding predefined content blocks right in place, without referencing external entities. Keep in mind, that paragraphs are not reusable types. For having reusable type look for blocks or entities in terms of Drupal 8.\nParagraphs were created for making UX better and super convenient.\n","categories":"","description":"","excerpt":"Welcome to Open Y paragraphs.\nParagraphs are bits of content, …","ref":"/openy_docs/docs/content-structure/paragraphs/readme/","tags":"","title":""},{"body":"Welcome to the Content Structure documentation.\nHere you can find all needed technical descriptions about content types can be used by Open Y site builders. The Open Y core team decided to finalize and stick to specifictions of fields, created naming conventions aimed to help developers to maintain and upgrade their sites alongside Open Y development timeline.\n","categories":"","description":"","excerpt":"Welcome to the Content Structure documentation.\nHere you can find all …","ref":"/openy_docs/docs/content-structure/readme/","tags":"","title":""},{"body":"Welcome to the development corner of the Open Y distribution.\nHere you can find all needed documentation and how-to work with Open Y codebase from developer’s point of view.\n","categories":"","description":"","excerpt":"Welcome to the development corner of the Open Y distribution.\nHere you …","ref":"/openy_docs/docs/development/readme/","tags":"","title":""},{"body":"Open Y Distribution The Open Y platform is a content management system that uses Drupal 8 functionality and useful modules from YMCAs and digital partners. It’s easy and free to use—everyone is welcome to implement Open Y and run Open Y projects.\nIn 2016 a group of YMCA digital, marketing and technology experts recognized the digital opportunities that exist if we work together as a community and established Open Y.\nA core team led by a small group of YMCAs including the Greater Twin Cities, Greater Seattle and Greater Houston:\n Pays for expenses associated with managing Open Y Maintains the Open Y content management system Ensures all basic functionality accessible from the content management system is available free of charge—those who contribute cannot charge others for what is shared Strives to be aware of issues found within the Open Y content management system Is not liable for bugs, crashes or performance issues of the content management system Invites and approves digital partners to join Offers training for Open Y Specialists—digital partners that are very familiar with the platform Offers certification for Open Y Integrators—digital partners that can install and work directly on the codebase Distributes communication about Open Y Organizes events for the Open Y community—including an annual meeting each June  Open Y is similar to the Thunder Coalition for the publishing industry, which has generously agreed to share some of the same concepts and content that you see used on this site.\nDocumentation Documentation is available at https://github.com/ymcatwincities/openy/tree/8.x-1.x/docs\nDetails For details please visit http://www.openymca.org\n","categories":"","description":"","excerpt":"Open Y Distribution The Open Y platform is a content management system …","ref":"/openy_docs/docs/readme/","tags":"","title":""},{"body":"Paragraph 1 Column This is a paragraph type that will be used for implements a paragraph with 1 column.\nFields    Name Machine name Required Description Notes     Line Above field_prfg_display_line_above No Display a line above the column.    Column field_prgf_1c_column No Enter column body.    Paragraph Title field_prgf_1c_title No Enter title to display at the top of 1 column paragraph.    Paragraph Description field_prgf_1c_description No Enter description to display under the 1 column paragraph title.     ","categories":"","description":"","excerpt":"Paragraph 1 Column This is a paragraph type that will be used for …","ref":"/openy_docs/docs/content-structure/paragraphs/1c/","tags":"","title":"1c"},{"body":"Paragraph 2 Column This is a paragraph type that will be used for implements a paragraph with 2 column.\nFields    Name Machine name Required Description Notes     Line Above field_prfg_display_line_above No Display a line above the column.    Left Column field_prgf_2c_left No Enter left column body.    Right Column field_prgf_2c_right No Enter right column body.     ","categories":"","description":"","excerpt":"Paragraph 2 Column This is a paragraph type that will be used for …","ref":"/openy_docs/docs/content-structure/paragraphs/2c/","tags":"","title":"2c"},{"body":"Paragraph 3 Column This is a paragraph type that will be used for implements a paragraph with 3 column.\nFields    Name Machine name Required Description Notes     Line Above field_prfg_display_line_above No Display a line above the column.    Left Column field_prgf_3c_left No Enter left column body.    Center Column field_prgf_3c_center No Enter center column body.    Right Column field_prgf_3c_right No Enter right column body.    Paragraph Title field_prgf_title No Enter title to display at the top of 3 columns paragraph.     ","categories":"","description":"","excerpt":"Paragraph 3 Column This is a paragraph type that will be used for …","ref":"/openy_docs/docs/content-structure/paragraphs/3c/","tags":"","title":"3c"},{"body":"Paragraph 4 Column This is a paragraph type that will be used for implements a paragraph with 4 column.\nFields    Name Machine name Required Description Notes     Line Above field_prfg_display_line_above No Display a line above the column.    First Column field_prgf_4c_1st No Enter first column body.    Second Column field_prgf_4c_2nd No Enter second column body.    Third Column field_prgf_4c_3rd No Enter third column body.    Fourth Column field_prgf_4c_4th No Enter forth column body.    Button field_prgf_4c_button No Button with link to display under 4 column paragraph    Paragraph Title field_prgf_title No Enter title to display at the top of 4 columns paragraph.    Paragraph Description field_prgf_description No Enter description to display under the 4 columns paragraph title.     ","categories":"","description":"","excerpt":"Paragraph 4 Column This is a paragraph type that will be used for …","ref":"/openy_docs/docs/content-structure/paragraphs/4c/","tags":"","title":"4c"},{"body":"  #td-cover-block-0 { background-image: url(/openy_docs/about/featured-background_hu376e1fbab6ce6c455a2b3aa5c258c0d9_496231_960x540_fill_q75_catmullrom_bottom.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/openy_docs/about/featured-background_hu376e1fbab6ce6c455a2b3aa5c258c0d9_496231_1920x1080_fill_q75_catmullrom_bottom.jpg); } }  About Goldydocs A sample site using the Docsy Hugo theme.        Goldydocs is a sample site using the Docsy Hugo theme that shows what it can do and provides you with a template site structure. It’s designed for you to clone and edit as much as you like. See the different sections of the documentation and site for more ideas.\n    This is another section      This is another section     ","categories":"","description":"","excerpt":"  #td-cover-block-0 { background-image: …","ref":"/openy_docs/about/","tags":"","title":"About Goldydocs"},{"body":"Open Y Acceptance testing best practices Open Y is a big distribution with a large amount of modules, components, subsystems, and business processes, therefore we have to take appropriate steps to ensure the stability of major functionality during development.\nFor the automated tests we have created General Checks template on GitHub every developer should follow to get review approval from Open Y core team. However, General Checks are for testing functionality for the current proposed change only, not for Regression Testing.\nFor regression testing, Behat tests in this flow are provided automatically on each build by Open Y community.\nEvery pull request should include a testing plan prior to release into Open Y. This plan should cover the testing of all workflows and functionality to ensure that they continue to work with any new code or change implemented. This is because it is possible for conflicts to occur between elements of Open Y, Drupal Modules, and Drupal Core. These pull request testing plans will increase productivity and decrease effort for manual Acceptance Testing of upcoming Releases. This testing plan should cover specific features and functionality that is likely to cause regression issues post-release or post-upgrade to the latest version of Open Y once this new code is implemented.\nExample of testing plan: If the Drupal core is updated it is important to gather all Drupal core Release Notes since last release core upgrade for Open Y and analyze important issues fixed. Example - in case if you are doing upgrade from latest 8.4.0 to 8.4.4:\n https://www.drupal.org/project/drupal/releases/8.4.4 (translations) https://www.drupal.org/project/drupal/releases/8.4.3 (postgreSQL and migration) https://www.drupal.org/project/drupal/releases/8.4.2 (migrations, taxonomy, ckeditor) https://www.drupal.org/project/drupal/releases/8.4.1 (composer)  This means the list of systems should be tested are\n multilingual postgreSQL support migration taxonomy ckeditor composer  This list could be extended by analyzing some highly important parts of Open Y distributions that depends from the above subsystems. It is not required to spend time on every module that has a dependency taxonomy, but it is important to test at least one impacted module to ensure it is still working post-implementation. In case if there is a Behat test already created for the subsystem in a list then a manual test could be skipped as long as the build is not failing due to the module or element covered in the associatied Behat test.\nHow to choose which modules to test: These can be a random selection from the list of systems impacted, or one of the oldest modules in a system impacted. This is because there is a higher chance that a minor change could cause a regression issue for the modules that have not received recent or regular updates.\nThe oldest modules(contrib modules) that have dependencies from the above list should also be updated, but to improve productivity, these updates should only be initiated if there is a security issue or a module stopped working because of the subsystems getting updated within an upcoming release. In case if a respective module update creates more issues that the older version of said module - then it is better to keep the old module and fix an associated regression bug. Tip: usually a new version of the module already contains a bug fix, so adding a patch from the drupal.org to composer.json of the Open Y distribution is preffered to get distribution released. Keep in mind, you will need to create a follow-up task for the module to be updated after release.\nAfter creating list of modules that could introduce regression issues it is highly recommended to follow Quickstart section of the module’s readme files, that usually is shipped with modules. Example for the location_finder. In case if a module has no Quickstart of Acceptance testing section in readme - it is important to test at least one place where functionality of the module should be working. It is highly recommended to add this manual test steps as a follow-up task, new issue or even better - create Pull Request with changes to readme into Open Y repository. For the sake of performance, adding step by step how-to to the respective module’s README.md file is highly recommended. It takes only a few minutes to write a couple of lines of documentation which will greatly help others with future contributions and changes.\nOptional, but grately appreciated: Add a Drupal tour for the how-to, created in README will benefit future Open Y users and developers. Having a tour for the business functionality is highly recommended to ship with the component - it creates an in-site visual guided documentation and helps to decrease time for the Acceptance testing.\nAnd last, but not the lease - adding Behat tests to the system will ensure functionality is tested on every pull request, on every CI build in the future.\nRule Every release of Open Y since 8.1.9 should include list of subsystems, changed in release for the community to be aware of the possible regressions on their end.)\n","categories":"","description":"","excerpt":"Open Y Acceptance testing best practices Open Y is a big distribution …","ref":"/openy_docs/docs/development/acceptancetesting/","tags":"","title":"AcceptanceTesting"},{"body":"Activity Activity content type is used for adding Activities on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the activity item.   Program Subcategory field_activity_category Yes A reference field for selecting the program subcategory.   Content Area Field group     Description field_activity_description No Textarea for the description/body with WYSIWYG, without summary.    URL pattern Content type is using following pattern: /programs/[node:field_activity_category:entity:field_category_program:entity:title]/[node:field_activity_category:entity:title]/[node:title]\n","categories":"","description":"","excerpt":"Activity Activity content type is used for adding Activities on the …","ref":"/openy_docs/docs/content-structure/content-types/activity/","tags":"","title":"Activity"},{"body":"How to configure AddThis Open Y AddThis module allow you easy add Social icons to any node.\n  Go to http://www.addthis.com and create your account and get public id.\n  Go to admin/openy/settings/openy-addthis add public id   Select the content type for which to show the social icons and save.\n  How to use AddThis paragraph You can add AddThis to specific node use ‘Social share icons’ paragraph\n  Click on ‘Edit’ any node\n  After content add ‘Social share icons’ paragraph )\n  ","categories":"","description":"","excerpt":"How to configure AddThis Open Y AddThis module allow you easy add …","ref":"/openy_docs/docs/development/addthis/","tags":"","title":"AddThis"},{"body":"Alert Alert content type is used for adding alerts on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the activity item.   Background color field_alert_color Yes Reference field for choosing the term from “Color” vocabulary.   Text color field_alert_text_color Yes Reference field for choosing the term from “Color” vocabulary.   Icon color field_alert_icon_color No Reference field for choosing the term from “Color” vocabulary. Description for field: “Leave empty to hide icon.”   Placement field_alert_place Yes Select list field (singular) for choosing place: HeaderFooter   Description field_alert_description Yes Textarea for the description/body with WYSIWYG, without summary.   Link field_alert_link No Internal or external link.   Reference field_alert_belongs No Entityreference with autocomplete to any node. Description for field: “Reference to node (branch, camp, landing page and etc.), where local alert will be displayed.”    URL pattern Content type is using following pattern: /alert/[node:title].\n","categories":"","description":"","excerpt":"Alert Alert content type is used for adding alerts on the site.\nFields …","ref":"/openy_docs/docs/content-structure/content-types/alert/","tags":"","title":"Alert"},{"body":"All Amenities Provide a paragraph with a table view shows list of Branches.\nFields    Name Machine name Required Description     All amenities field_field_prgf_amnts_view No Predefined reference to a view to display all amenities.   Title field_prgf_title No Enter title which is going to be displayed on top of the paragraph.    ","categories":"","description":"","excerpt":"All Amenities Provide a paragraph with a table view shows list of …","ref":"/openy_docs/docs/content-structure/paragraphs/all-amenities/","tags":"","title":"All Amenities"},{"body":"Amenities Vocabulary This is a vocabulary that will be used for adding reference Branch amenities. We will use this for the Branch.\nMachine_name: amenities\n","categories":"","description":"","excerpt":"Amenities Vocabulary This is a vocabulary that will be used for adding …","ref":"/openy_docs/docs/content-structure/taxonomy/amenities/","tags":"","title":"Amenities"},{"body":"Area Vocabulary This is a vocabulary that will be used for adding location areas on the site. We will use this for the Location Branch and Facility CTs.\nMachine_name: area\n","categories":"","description":"","excerpt":"Area Vocabulary This is a vocabulary that will be used for adding …","ref":"/openy_docs/docs/content-structure/taxonomy/area/","tags":"","title":"Area"},{"body":"Banner This is a paragraph type that will be used for the banner content.\nFields    Name Machine name Required Description Notes     Headline field_prgf_headline Yes Headline of the banner. Plain text, 255 characters   Color field_prgf_color Yes Reference field for choosing the term from “Color” vocabulary.    Image field_prgf_image No Entityreference to media image. Single value.    Description field_prgf_description No WYSIWYG field without summary.    Link field_prgf_link No Link field that should store internal and external links.     ","categories":"","description":"","excerpt":"Banner This is a paragraph type that will be used for the banner …","ref":"/openy_docs/docs/content-structure/paragraphs/banner/","tags":"","title":"Banner"},{"body":"Basic Block A simple block with a description.\nFields    Name Machine name Required Description     Content field_block_content Yes WYSIWYG field without summary.    ","categories":"","description":"","excerpt":"Basic Block A simple block with a description.\nFields    Name Machine …","ref":"/openy_docs/docs/content-structure/blocks/basic/","tags":"","title":"Basic"},{"body":"Block Menu Implements custom block type with a links.\nFields    Name Machine name Required Description     Menu Links field_menu_block_links Yes The Menu Links.   Color field_menu_block_color Yes Select colors for menu block background gradient.   Text color field_menu_block_text_color Yes Select text color of the menu block.    ","categories":"","description":"","excerpt":"Block Menu Implements custom block type with a links.\nFields    Name …","ref":"/openy_docs/docs/content-structure/blocks/block-menu/","tags":"","title":"Block Menu"},{"body":"","categories":"","description":"","excerpt":"","ref":"/openy_docs/docs/content-structure/blocks/","tags":"","title":"Blocks"},{"body":"This is the blog section. It has two categories: News and Releases.\nFiles in these directories will be listed in reverse chronological order.\n","categories":"","description":"","excerpt":"This is the blog section. It has two categories: News and Releases. …","ref":"/openy_docs/blog/","tags":"","title":"Docsy Blog"},{"body":"Blog Blog Post content type is used for adding blog posts on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the blog item.   Locations field_blog_location Yes Reference field to branch and camp nodes. Multiple Values.   Category field_blog_category No Reference field for choosing the term from “Blog Category” vocabulary. Multiple Values.   Meta Tags field_meta_tags No A meta tags field allows us to provide structured metadata and Graph meta tags for Facebook, Pinterest, LinkedIn and other social networking sites.   Styles Field group     Style field_blog_style Yes Select list field with multiple options for choosing style: Story CardPhoto CardNews Card (default)Color Card   Background color field_blog_color No teaser background color (used when Color Card style is selected.)   Text color field_blog_text_color No teaser text color (used when Color Card style is selected.)   Content Area Field group     Image field_blog_image No Image field for the Blog item. Entity reference to Media bundle.   Description field_blog_description No Textarea for the description/body with WYSIWYG, without summary.   Content field_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Sidebar Area Field group     Related content field_blog_related No Reference field for choosing related Blog nodes. Multiple Values.   Content field_sidebar_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.    URL pattern Content type is using following pattern: /blog/[node:title]\n","categories":"","description":"","excerpt":"Blog Blog Post content type is used for adding blog posts on the site. …","ref":"/openy_docs/docs/content-structure/content-types/blog/","tags":"","title":"Blog"},{"body":"Blog Category This is a vocabulary that will be used for adding blog categories on the site.\nMachine_name: blog_category\n","categories":"","description":"","excerpt":"Blog Category This is a vocabulary that will be used for adding blog …","ref":"/openy_docs/docs/content-structure/taxonomy/blog-category/","tags":"","title":"Blog Category"},{"body":"Blog Posts Listing This is dynamic paragraph that renders the latest blog posts and utilizes exposed filters.\n Location Category Text  It uses sticky at the top option and order items based on published date (newest at the top).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Blog Posts Listing This is dynamic paragraph that renders the latest …","ref":"/openy_docs/docs/content-structure/paragraphs/blog-posts-listing/","tags":"","title":"Blog Posts Listing"},{"body":"Branch Branch content type is used for adding Branches on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the branch item.   Neighborhood field_location_area No A taxonomy reference field using the “Area” vocabulary.   Coming Soon field_location_state No A checkbox field to determine branches in development.   Temporary URL field_location_temp_url No A link field to provide a temporary page URL (a blog post, or smth else) if the branch is coming soon.   Meta Tags field_meta_tags No A meta tags field allows us to provide structured metadata and Graph meta tags for Facebook, Pinterest, LinkedIn and other social networking sites.   Contact Field group     Address field_location_address Yes An address field that will provide the ability to add details about the locations. Details to be completed: AddressCityStateZip Code   Branch Coordinates field_location_coordinates No Input for providing the latitude and longitude information.   Phone field_location_phone Yes Input for providing the phone information.   Fax field_location_fax No Input for providing the fax information.   Email field_location_email No Input for providing the email information.   Directions field_location_directions No A link field for adding the directions link.   Branch Hours Field group     Branch Hours field_branch_hours Paragraph Paragraph to indicate the branch hours.   Day of the week field_branch_hours_day No Select list with following values: sunday|Sundaymonday|Mondaytuesday|Tuesdaywednesday|Wednesdaythursday|Thursdayfriday|Fridaysaturday|Saturday   Start/End Time field_branch_hours_time No Textfield with description “e.g. 9am - 5pm, closed.”   Header Area Field group     Content field_header_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Content Area Field group     Content field_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Bottom Area Field group     Content field_bottom_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.    URL pattern Content type is using following pattern: /locations/[node:title]\n","categories":"","description":"","excerpt":"Branch Branch content type is used for adding Branches on the site. …","ref":"/openy_docs/docs/content-structure/content-types/branch/","tags":"","title":"Branch"},{"body":"Block Branch Amenities A block with amenities list of the current branch.\nFields    Name Machine name Required Description     Branch amenities field_branch_am Yes Uses only Custom Formatter to display a list of amenities within Paragraph block.   Link field_sb_link No Link to display at the bottom of the block.   Title field_sb_title No Title to display at top of block.   Icon class field_icon_class No Provide a “Font Awesome” icon name, e.g. flag, car, info. Overrides image icon.    ","categories":"","description":"","excerpt":"Block Branch Amenities A block with amenities list of the current …","ref":"/openy_docs/docs/content-structure/blocks/branch-amenities/","tags":"","title":"Branch Amenities"},{"body":"Branches Popup (All) This is dynamic paragraph that renders the locations selection popup, based on current node.\nRelates to:\n [Schedule search list](Schedule search list.md) [Classes Listing](Classes Listing.md)  Fields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Branches Popup (All) This is dynamic paragraph that renders the …","ref":"/openy_docs/docs/content-structure/paragraphs/branches-popup-all/","tags":"","title":"Branches Popup (All)"},{"body":"Branches Popup (Class) This is dynamic paragraph that renders the locations selection popup, based on current node.\nRelates to:\n [Class Sessions](Class Sessions.md) [Class Location](Class Location.md)  Fields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Branches Popup (Class) This is dynamic paragraph that renders the …","ref":"/openy_docs/docs/content-structure/paragraphs/branches-popup-class/","tags":"","title":"Branches Popup (Class)"},{"body":"Camp Camp content type is used for adding Camps on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the camp item.   Menu links field_camp_menu_links Yes Link field with multiple values, that should have the Title and Link field. Based on it, we will complete the Camp Menu.   Meta Tags field_meta_tags No A meta tags field allows us to provide structured metadata and Graph meta tags for Facebook, Pinterest, LinkedIn and other social networking sites.   Contact Field group     Address field_location_address Yes An address field that will provide the ability to add details about the locations. Details to be completed: AddressCityStateZip Code   Camp Coordinates field_location_coordinates No Input for providing the latitude and longitude information.   Phone field_location_phone Yes Input for providing the phone information.   Fax field_location_fax No Input for providing the fax information.   Email field_location_email No Input for providing the email information.   Directions field_location_directions No A link field for adding the directions link.   Header Area Field group     Content field_header_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Content Area Field group     Content field_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Bottom Area Field group     Content field_bottom_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.    URL pattern Content type is using following pattern: /camps/[node:title]\n","categories":"","description":"","excerpt":"Camp Camp content type is used for adding Camps on the site.\nFields …","ref":"/openy_docs/docs/content-structure/content-types/camp/","tags":"","title":"Camp"},{"body":"","categories":"","description":"","excerpt":"","ref":"/openy_docs/categories/","tags":"","title":"Categories"},{"body":"Categories Listing This is dynamic paragraph that renders all published categories according to current program page.\nIt uses sticky at the top option and order items based on published date(newest at the top).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Categories Listing This is dynamic paragraph that renders all …","ref":"/openy_docs/docs/content-structure/paragraphs/categories-listing/","tags":"","title":"Categories Listing"},{"body":"Class Class content type is used for adding Classes on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the class item.   Activity field_class_activity No A reference field for selecting the class.   Meta Tags field_meta_tags No A meta tags field allows us to provide structured metadata and Graph meta tags for Facebook, Pinterest, LinkedIn and other social networking sites.   Header Area Field group     Content field_header_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Content Area Field group     Description field_class_description No Textarea for the description/body with WYSIWYG, without summary.   Content field_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Sidebar Area Field group     Content field_sidebar_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Bottom Area Field group     Content field_bottom_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.    URL pattern Content type is using following pattern: /programs/[node:field_class_activity:entity:field_activity_category:entity:field_category_program:entity:title]/[node:field_class_activity:entity:field_activity_category:entity:title]/[node:title]/class-times\n","categories":"","description":"","excerpt":"Class Class content type is used for adding Classes on the site. …","ref":"/openy_docs/docs/content-structure/content-types/class/","tags":"","title":"Class"},{"body":"Class Location This is dynamic paragraph that renders the locations class location view mode, based on url query parameter location with a valid id.\nRelates to [Branches Popup (Class)](Branches Popup (Class).md).\n When the page has a location parameter the Branches Popup paragraph will make an “Edit” link on this paragraph visible. That link triggers the Branches Popup to open.  Fields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Class Location This is dynamic paragraph that renders the locations …","ref":"/openy_docs/docs/content-structure/paragraphs/class-location/","tags":"","title":"Class Location"},{"body":"Class Sessions This is dynamic paragraph that renders the class session instances, based on url query parameter location with a valid id.\nRelates to [Branches Popup (Class)](Branches Popup (Class).md).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    Displayed table  Location(should be displayed in case if \u0026location=% not in the URL. Otherwise should be hiddedn. Time + date Registration(link) Details  Online registration Ticket required In membership   Age Min - Max  Use cases Use case 3: Class page WITHOUT location popup 3.1 Location in specified URL\n When I open Class page WITHOUT location popup on page And I have location=% in the URL We skip cookie whether is empty or exist Results should be filtered based on location from URL In sidebar we should see location teaser  3.2 Preferred branch is empty and no location in URL or Preferred branch is selected and no location in URL\n When I open Class page WITHOUT location popup on page And I don’t have a preferred branch Or I have a preferred branch And I don’t have location=% in the URL Results should contain all branches In sidebar we should see “All locations….”  Use case 4: Class page WITH location popup 4.1 Location in specified URL\n When I open Class page WITH location popup on page And I have location=% in the URL We skip cookie whether is empty or exist Results should be filtered based on location from URL In sidebar we should see location teaser Location is sidebar should have “Edit” link that will open location popup  4.2 Preferred branch is empty and no location in URL or Preferred branch is selected and no location in URL\n When I open Class page WITH location popup on page And I don’t have a preferred branch Or I have a preferred branch And I don’t have location=% in the URL Results should contain all branches In sidebar we should see “All locations….” Location popup should be shown (Unless only one location is associated with the class)  ","categories":"","description":"","excerpt":"Class Sessions This is dynamic paragraph that renders the class …","ref":"/openy_docs/docs/content-structure/paragraphs/class-sessions/","tags":"","title":"Class Sessions"},{"body":"Classes Listing + Classes Listing Filters Classes Listing - should display all published classes grouped by activity.\nClasses Listing Filters - this paragraph should disply filter form for “Classes Listing” with following fields:\n Location Program Sub-program Activity  Relates to [Branches Popup (All)](Branches Popup (All).md).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    Use cases Use case 1: Classes Listing paragraph on a Program subcategory page WITHOUT location popup paragraph 1.1 Preferred branch is selected and no location in URL\n When I open Program subcategory page with Classes Listing WITHOUT location popup on page And I have a preferred branch And I don’t have location=% in the URL Filter by location should be predefined based on cookie Results should be filtered  1.2 Preferred branch is empty and no location in URL\n When I open Program subcategory page with Classes Listing WITHOUT location popup on page And I don’t have a preferred branch And I don’t have location=% in the URL Filter by location should show “All” Results should be shown for all branches  1.3 Location in specified URL\n When I open Program subcategory page with Classes Listing WITHOUT location popup on page And I have location=% in the URL We skip cookie whether is empty or exist Filter by location should show branch from URL Results should be filtered  Use case 2: Classes Listing paragraph on a Program subcategory page WITH location popup 2.1 Preferred branch is selected and no location in URL\n When I open Program subcategory page with Classes Listing WITH location popup on page And I have a preferred branch And I don’t have location=% in the URL Location popup shouldn’t be shown Filter by location should be predefined based on cookie Results should be filtered  2.2 Preferred branch is empty and no location in URL\n When I open Program subcategory page with Classes Listing WITH location popup on page And I don’t have a preferred branch And I don’t have location=% in the URL Filter by location should show “All” Results should be shown for all branches Location popup should be shown  2.3 Location in specified URL\n When I open Program subcategory page with Classes Listing WITH location popup on page And I have location=% in the URL We skip cookie whether is empty or exist Location popup shouldn’t be shown Filter by location should show branch from URL Results should be filtered  ","categories":"","description":"","excerpt":"Classes Listing + Classes Listing Filters Classes Listing - should …","ref":"/openy_docs/docs/content-structure/paragraphs/classes-listing/","tags":"","title":"Classes Listing"},{"body":"Code Provide paragraph containing a Code block. Can be used to embed Youtube video for instance.\nFields    Name Machine name Required Description     Code field_prgf_code_block Yes Block reference to Code block. Create a new one or pick up an existed Code block.    ","categories":"","description":"","excerpt":"Code Provide paragraph containing a Code block. Can be used to embed …","ref":"/openy_docs/docs/content-structure/paragraphs/code/","tags":"","title":"Code"},{"body":"Area Vocabulary This is a vocabulary that will be used for adding colors on the site.\nMachine_name: color\nFields    Name Machine name Required Description     Name drupal’s default Yes Color name.   Color field_color Yes Color selector.    ","categories":"","description":"","excerpt":"Area Vocabulary This is a vocabulary that will be used for adding …","ref":"/openy_docs/docs/content-structure/taxonomy/color/","tags":"","title":"Color"},{"body":"","categories":"","description":"","excerpt":"","ref":"/openy_docs/community/","tags":"","title":"Community"},{"body":"Composer Please always make sure composer.lock file is updated after any changes in composer.json file. You can use composer update command to update any package, in this case composer will take care about updating of composer.lock file.\ncomposer update drupal/metatag Also you can use composer update --lock command to force updating of composer.lock file according to dependencies in composer.json.\nPlease check official composer documentation for details: https://getcomposer.org/doc/01-basic-usage.md)\n","categories":"","description":"","excerpt":"Composer Please always make sure composer.lock file is updated after …","ref":"/openy_docs/docs/development/composer/","tags":"","title":"Composer"},{"body":"Add import social posts to site (Facebook, Instagram, Twitter)\nHow configure import of posts from the social networks Given: As an Open Y site developer, I want to be able import posts from company’s accounts form social networks (Twitter, Facebook, Instagram) and save them as content on the site.\nHow to:\n Open configuration page /admin/config/social_feed_fetcher_settings - Configuration -\u003e Social Feed Settings Select checkbox for needed social network and add additional settings. Every social network has their own API, please read documentation for this settings on the official pages of each social networks. When all settings will be filled - click on the button - Run Cron. Import is started. )  ","categories":"","description":"","excerpt":"Add import social posts to site (Facebook, Instagram, Twitter)\nHow …","ref":"/openy_docs/docs/development/configuration-for-social-posts-import/","tags":"","title":"Configuration for social posts import"},{"body":"Welcome to the Content Structure documentation.\nHere you can find all needed technical descriptions about content types can be used by Open Y site builders. The Open Y core team decided to finalize and stick to specifictions of fields, created naming conventions aimed to help developers to maintain and upgrade their sites alongside Open Y development timeline.\n","categories":"","description":"","excerpt":"Welcome to the Content Structure documentation.\nHere you can find all …","ref":"/openy_docs/docs/content-structure/","tags":"","title":"Content Structure"},{"body":"Welcome to the Open Y Content Types documentation\nIn terms of Open Y - content types are bundles of node entity of the Drupal Framework. You can find a much more low level documentation at drupal.org.\nOpen Y has a bunch of content types shipped for the convenience of usage the resulting site. We are not limiting amount of content types, could be added by developers, so the list is not final. The only rule we are trying to follow is to cover shipped list of content types by Open Y upgrade path.\n","categories":"","description":"","excerpt":"Welcome to the Open Y Content Types documentation\nIn terms of Open Y - …","ref":"/openy_docs/docs/content-structure/content-types/","tags":"","title":"Content Types"},{"body":"Contributing to Open Y Issues If you have a support request, you’ve found a bug or you have a feature request:\n Search through known issues/requests https://github.com/ymcatwincities/openy/issues Create new issue https://github.com/ymcatwincities/openy/issues/new  Pull Requests If you have some time to make a contribution to the project, here are the steps that will help you:\n Create fork of main project. How to create fork. Commit \u0026 push changes into your fork Create new Pull Request. How to create Pull Request. Write steps for review. In this way maintainers can go through steps on build to verify your fix/feature. Ensure steps for review added to README.md file in a module’s/project’s directory if it makes sence to check them on regular basis. Often this is needed for crucial parts of the system which is main business functionality of the component. Example of super simple steps for review see in Quickstart section of location_finder module, plese. Create Drupal tour module, based on steps for review and ship it with the module which provides a functionality. Wait for a CI build and ask maintainers for review.  Important: make sure your git email is associated with account on drupal.org, otherwise you won’t get commits there.\nDrupal.org credits If you would like to get drupal.org credits for your contribution:\n Create issue on drupal.org Link drupal.org issue to GitHub Pull Request Specify in GitHub Pull Request link to drupal.org issue Once PR has been merged, reviewer will close drupal.org issue with appropriate credits.)  ","categories":"","description":"","excerpt":"Contributing to Open Y Issues If you have a support request, you’ve …","ref":"/openy_docs/docs/development/contributing/","tags":"","title":"Contributing"},{"body":"How to Create new View mode and use As with any other entity in drupal, when it comes to render the rendering it in different contexts, you might want to have specific viewmodes.\nHere you can find instructions how you can add new view modes into embedded entity form on Open Y distribution.\nHow-to create new View mode  Go to ‘View modes’ page: Structure -\u003e Display modes -\u003e View modes (or visit the URL: /admin/structure/display-modes/view )   Create new view mode: click ‘Add view mode’ button and select entity type (or visit the URL: /admin/structure/display-modes/view/add )  or after each entity type you can see ‘Add new {Name} view mode’ and click on it Select “Media” and then give a name to your new viewmode (or visit the URL: /admin/structure/display-modes/view/add/media )   How-to use new View mode  Go to Configuration -\u003e Text editor embed buttons (or visit the URL: /admin/config/content/embed )   Then make sure you enable the new viewmode in “Allowed Entity Embed Display plugins”, and at the bottom of the page click “Save”. )  ","categories":"","description":"","excerpt":"How to Create new View mode and use As with any other entity in …","ref":"/openy_docs/docs/development/create-view-modes/","tags":"","title":"Create View Modes"},{"body":"Block Custom Simple A simple block with a body.\nFields    Name Machine name Required Description     Icon field_icon No Icon for block.   Icon class field_icon_class No Provide a “Font Awesome” icon name, e.g. flag, car, info. Overrides image icon.   Body field_sb_body No Enter body text.   Link field_sb_link No Add link to the block.   Title field_sb_title No Title to display at top of block.    ","categories":"","description":"","excerpt":"Block Custom Simple A simple block with a body.\nFields    Name Machine …","ref":"/openy_docs/docs/content-structure/blocks/custom-simple/","tags":"","title":"Custom Simple"},{"body":"See also the Data Layer module readme datalayer/README.md\nThe Data Layers module output data on the page in a json format. By default it will output properties (langcode, vid, name, uid, created, status, roles) and related taxonomy for any node, user, or any route based entity.\nA limited set of properties are available via the Data Layers configuration form at /admin/config/search/datalayer (langcode, vid, name, uid, created, status, roles).\nAdding additional properties can be done through use of hook_datalayer_meta().\nfunction my_module_datalayer_meta() { return array( 'property', ); } It will be added to the page as:\n{ \"entityProperty\": \"whatever the value is\" } Altering which properties will be output can be done via hook_datalayer_meta_alter().\nfunction my_module_datalayer_meta_alter(\u0026$properties) { // Override module norm in all cases.  unset($properties['entityUid']); // Specific situation alteration...  $type = false; if ($obj = _datalayer_menu_get_any_object($type)) { if ($type === 'node' \u0026\u0026 in_array(array('my_bundle', 'my_nodetype'), $obj-\u003etype)) { // Remove author names on some content type.  if ($key = array_search('name', $properties)) { unset($properties[$key]); } } elseif ($type === 'my_entity_type') { // Remove some property on some entity type.  if ($key = array_search('my_property', $properties)) { unset($properties[$key]); } } } } Adding additional data can be done using datalayer_add().\nfunction _my_module_myevent_func($argument = FALSE) { if ($argument) { datalayer_add(array( 'drupalMyProperty' =\u003e $argument, 'userAnotherProperty' =\u003e _my_module_other_funct($argument), )); } } To alter the data to be output use hook_datalayer_alter().\nfunction my_module_datalayer_alter(\u0026$data_layer) { // Make the title lowercase on some node type.  if (isset($data_layer['entityBundle']) \u0026\u0026 $data_layer['entityBundle'] == 'mytype') { $data_layer['entityLabel'] = strtolower($data_layer['entityLabel']); } } ```) ","categories":"","description":"","excerpt":"See also the Data Layer module readme datalayer/README.md\nThe Data …","ref":"/openy_docs/docs/development/datalayer/","tags":"","title":"DataLayer"},{"body":"Daxko Relates to: [Program Registration (Daxko)](../Paragraphs/Program Registration (Daxko).md)\nConfiguration setting at /admin/config/development/daxko\nAccount configuration must be setup before the Program Registration paragraph will work.)\n","categories":"","description":"","excerpt":"Daxko Relates to: [Program Registration (Daxko)](../Paragraphs/Program …","ref":"/openy_docs/docs/development/daxko/","tags":"","title":"Daxko"},{"body":"Welcome to the development corner of the Open Y distribution.\nHere you can find all needed documentation and how-to work with Open Y codebase from developer’s point of view.)\n","categories":"","description":"","excerpt":"Welcome to the development corner of the Open Y distribution.\nHere you …","ref":"/openy_docs/docs/development/","tags":"","title":"Development"},{"body":"Open Y Distribution The Open Y platform is a content management system that uses Drupal 8 functionality and useful modules from YMCAs and digital partners. It’s easy and free to use—everyone is welcome to implement Open Y and run Open Y projects.\nIn 2016 a group of YMCA digital, marketing and technology experts recognized the digital opportunities that exist if we work together as a community and established Open Y.\nA core team led by a small group of YMCAs including the Greater Twin Cities, Greater Seattle and Greater Houston:\n Pays for expenses associated with managing Open Y Maintains the Open Y content management system Ensures all basic functionality accessible from the content management system is available free of charge—those who contribute cannot charge others for what is shared Strives to be aware of issues found within the Open Y content management system Is not liable for bugs, crashes or performance issues of the content management system Invites and approves digital partners to join Offers training for Open Y Specialists—digital partners that are very familiar with the platform Offers certification for Open Y Integrators—digital partners that can install and work directly on the codebase Distributes communication about Open Y Organizes events for the Open Y community—including an annual meeting each June  Open Y is similar to the Thunder Coalition for the publishing industry, which has generously agreed to share some of the same concepts and content that you see used on this site.\nDocumentation Documentation is available at https://github.com/ymcatwincities/openy/tree/8.x-1.x/docs\nDetails For details please visit http://www.openymca.org\n","categories":"","description":"","excerpt":"Open Y Distribution The Open Y platform is a content management system …","ref":"/openy_docs/docs/","tags":"","title":"Documentation"},{"body":"Facility Facility content type is used for adding facilities on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the facility item.   Neighborhood field_location_area No A taxonomy reference field using the Area Vocabulary(area).   Type field_facility_type No A taxonomy reference field using the “Facility Type” vocabulary.   Facility Branch field_facility_loc No A entity reference field to reference the related Branch node.   Meta Tags field_meta_tags No A meta tags field allows us to provide structured metadata and Graph meta tags for Facebook, Pinterest, LinkedIn and other social networking sites.   Contact Field group     Address field_location_address Yes An address field that will provide the ability to add details about the locations. Details to be completed: AddressCityStateZip Code   Facility Coordinates field_location_coordinates No Input for providing the latitude and longitude information.   Phone field_location_phone Yes Input for providing the phone information.   Fax field_location_fax No Input for providing the fax information.   Email field_location_email No Input for providing the email information.   Directions field_location_directions No A link field for adding the directions link.   Content Area Field group     Content field_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Sidebar Area Field group     Content field_sidebar_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.    URL pattern Content type is using following pattern: /facility/[node:title]\n","categories":"","description":"","excerpt":"Facility Facility content type is used for adding facilities on the …","ref":"/openy_docs/docs/content-structure/content-types/facility/","tags":"","title":"Facility"},{"body":"Facility Type This is a vocabulary that will be used for adding facility type on the site. We will use this for the Facility CT.\nMachine name: facility_type\n","categories":"","description":"","excerpt":"Facility Type This is a vocabulary that will be used for adding …","ref":"/openy_docs/docs/content-structure/taxonomy/facility-type/","tags":"","title":"Facility Type"},{"body":"Featured Blog Posts This is a paragraph type that will be used for the featured stories.\nFields    Name Machine name Required Description     Headline field_prgf_headline No Headline of the banner.   Blog Posts field_fblog_posts Yes Multiple values. Reference field to Blog posts.    ","categories":"","description":"","excerpt":"Featured Blog Posts This is a paragraph type that will be used for the …","ref":"/openy_docs/docs/content-structure/paragraphs/featured-blog-posts/","tags":"","title":"Featured Blog Posts"},{"body":"Featured Content This is a paragraph type that will be used for the featured content.\nFields    Name Machine name Required Description     Headline field_prgf_headline No Headline of the featured content.   Description field_prgf_description No Textarea for the description/body with WYSIWYG, without summary.   Link field_prgf_link No Link field that supports internal and external URLs.   Style field_prgf_grid_style Yes Select list with following values: 2:2 items per row, 3:3 items per row, 4:4 items per row   Column description field_prgf_fc_clm_description No Multiple values. Textarea for the column with WYSIWYG, without summary.    ","categories":"","description":"","excerpt":"Featured Content This is a paragraph type that will be used for the …","ref":"/openy_docs/docs/content-structure/paragraphs/featured-content/","tags":"","title":"Featured Content"},{"body":"Featured Highlights Provides a paragraph containing blocks of specific types positioned as 2, 3 or 4 blocks per row.\nFields    Name Machine name Required Description     Title field_prgf_title No Paragraph title.   Style field_prgf_grid_style Yes Select list with following values: 2:2 items per row, 3:3 items per row, 4:4 items per row.   Featured Highlights block field_prgf_block_ref_unlim Yes Create a new one or pick up an existing block of given types: Featured Highlight Block, Basic Block, Simple Block, Date block.    ","categories":"","description":"","excerpt":"Featured Highlights Provides a paragraph containing blocks of specific …","ref":"/openy_docs/docs/content-structure/paragraphs/featured-highlights/","tags":"","title":"Featured Highlights"},{"body":"Featured News Posts This is a paragraph type that will be used for the featured news.\nFields    Name Machine name Required Description     Headline field_prgf_headline No Headline of the banner.   News Posts field_fnews_posts Yes Multiple values. Reference field to News posts.    ","categories":"","description":"","excerpt":"Featured News Posts This is a paragraph type that will be used for the …","ref":"/openy_docs/docs/content-structure/paragraphs/featured-news-posts/","tags":"","title":"Featured News Posts"},{"body":"Block Flexible Content A block with amenities list of the current branch.\nFields    Name Machine name Required Description     Node reference field_node_ref Yes Provide reference to Node .    ","categories":"","description":"","excerpt":"Block Flexible Content A block with amenities list of the current …","ref":"/openy_docs/docs/content-structure/blocks/flexible/","tags":"","title":"Flexible"},{"body":"#Fonts\nThe majority of the fonts used by the Open Y distribution are freely available, except for Cachet.\nHelvetica is used for paragraph text, with Verdana as a fallback. Page titles, headers, highlighted text, etc, use Cachet, with Ubuntu Condensed as a fallback.\nThe font definitions in the distribution’s main theme, Open Y Rose, are set to use Cachet, but fallback to Ubuntu Condensed if the font is not present.\nfont-family: \"Cachet W01 Bold\", 'Ubuntu Condensed', sans-serif;  Ubuntu Condensed Ubuntu Condensed is a free font available from Google Fonts, https://fonts.google.com/specimen/Ubuntu+Condensed .\nIf you look at the openy_rose.libraries.yml file you can see Ubunutu Condensed is already linked as part of the theme.\nglobal-styling: css: base: //fonts.googleapis.com/css?family=Ubuntu+Condensed:400,700: {}  Cachet Cachet, specifically “Cachet W01 Medium”, is part of the YMCA styleguide. It is a commercial font, and must be purchased for individual sites. It cannot be distributed as part of the Open Y distribution or hosted on Drupal.org.\nThe font can be purchased from fonts.com, https://www.fonts.com/font/monotype/cachet/book .\nInstalling Cachet There are a number of ways to get Cachet setup on your site. As long as the font gets linked in the page it should get used, since it is already part of the font declarations.\nIf you purchase Cachet from fonts.com, add the URL you are provided to the global-styling library in openy_rose.libraries.yml, right where Ubuntu Condensed is linked.\n css: base: //fast.fonts.net/cssapi/abcdef-12345-tuvwxyx-67890.css: {} //fonts.googleapis.com/css?family=Ubuntu+Condensed:400,700: {}  You may also need to add a JavaScript file provided by fonts.com. You can add that in the same global-styling library.\njs: //fast.fonts.net/jsapi/12345-abcdef-67890.js: {}  Another option is to use the @font-your-face Drupal module, https://www.drupal.org/project/fontyourface .\nOnce installed you can connect your Drupal site to your font.com account, or one of the other font providers, and have the font automatically retrieved and added to your site. Follow the directions provided by the module to connect to your font provider account.)\n","categories":"","description":"","excerpt":"#Fonts\nThe majority of the fonts used by the Open Y distribution are …","ref":"/openy_docs/docs/development/fonts/","tags":"","title":"Fonts"},{"body":"Gallery This is a paragraph type that will be used for the gallery content.\nFields    Name Machine name Required Description     Headline field_prgf_headline Yes Headline of the gallery.   Description field_prgf_description No WYSIWYG field without summary.   Link field_prgf_link No Link field that should store internal and external links.   Images field_prgf_images No Entityreference to media image. Multiple values.    ","categories":"","description":"","excerpt":"Gallery This is a paragraph type that will be used for the gallery …","ref":"/openy_docs/docs/content-structure/paragraphs/gallery/","tags":"","title":"Gallery"},{"body":"  #td-cover-block-0 { background-image: url(/openy_docs/featured-background_hu7c3508149195da5eb41afb368d166c0f_85952_960x540_fill_q75_catmullrom_top.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/openy_docs/featured-background_hu7c3508149195da5eb41afb368d166c0f_85952_1920x1080_fill_q75_catmullrom_top.jpg); } }  Welcome to Open Y: A Docsy Example Project! Learn More   Download   Porridge temperature assessment - in the cloud!\n         Goldydocs provides a single web UI providing visibility into porridge temperature, chair size, and bed softness metrics! You can even find out who’s been eating your porridge.\n(Sadly, Goldydocs isn’t a real project, but you can use this site as an example to create your own real websites with Docsy)\n      New chair metrics! The Goldydocs UI now shows chair size metrics by default.\nPlease follow this space for updates!\n    Contributions welcome! We do a Pull Request contributions workflow on GitHub. New users are always welcome!\n Read more …\n   Follow us on Twitter! For announcement of latest features etc.\n Read more …\n     This is the second Section        Download from AppStore Get the Goldydocs app!\n    Contributions welcome! We do a Pull Request contributions workflow on GitHub. New users are always welcome!\n Read more …\n   Follow us on Twitter! For announcement of latest features etc.\n Read more …\n     This is another Section     ","categories":"","description":"","excerpt":"  #td-cover-block-0 { background-image: …","ref":"/openy_docs/","tags":"","title":"Goldydocs"},{"body":"How to configure search tracking in Google Analytics account ##Prerequisites Google Analitycs account to track you site should be created. Google Analitycs contrib module should be enabled and configured to use existing GA account.\n##Steps\n  Log in to Google Analytics account that configured to track your Open Y site.\n  Click Admin button in bottom right corner of main screen   Click View Settings   Scroll to “Site Search Settings” section and enable “Site Search Tracking” switch   Fill query parameter field with q, query values and click Save\n  Reports about the search tracking you can find at main screen in Behavior → Site Search Section\n  Attention: Data processing latency for search tracking reports is 24-48 hours (see https://support.google.com/analytics/answer/1070983?hl=en#DataProcessingLatency))\n","categories":"","description":"","excerpt":"How to configure search tracking in Google Analytics account …","ref":"/openy_docs/docs/development/google_analytics_search/","tags":"","title":"Google_Analytics_Search"},{"body":"Google Custom Search configuration The Open Y release 8.2.4 introduces Google Custom Search for the website out of the box.\nEnabling the module Fresh installations The search feature is included in the Extended installation type. For Standard see the Existing websites section.\nIf you are installing a fresh Open Y website and going through the installation process via the Web interface, on the 3rd party integration step you can specify Google Search ID. If you specify the Google Search ID in this form your site’s search feature is up.\nExisting websites The search feature is not automatically enabled after upgrading an Open Y website. You have to manually enable it.\nIn order to do that:\n Log in as an admin (or a user with the administrator role). Go to the Open Y package install page (Admin menu \u003e Open Y \u003e Extend \u003e Install, or /admin/openy/extend/list) Find the SEARCH package there, tick the checkbox and submit the form.  Now the search modules are enabled and the header of the website should have a search field. Upon installation, the modules create a Landing page for search results and point the header search form to the page.\nConfiguring the Google Search modules  Go to the Google Search settings form (Admin menu \u003e Open Y \u003e Settings \u003e Google Search settings, or /admin/openy/settings/google-search). Set the value of the Google Search ID field (see the following section for details) and submit the form.  Obtaining Search Engine ID  Go to https://cse.google.com/, register if you haven’t yet, log in if you aren’t logged in. Create the Search Engine (this process is explained in Google documentation https://support.google.com/customsearch/answer/4513882?hl=en\u0026ref_topic=4513742):  Click “New Search Engine”. Specify the domain of your website (e.g. www.openymca.org). Specify the name of the Search Engine (e.g. openymca.org). Click “Create”.   On the newly created Search Engine page there is the Search engine ID field. Use this value in the Open Y Google Search configuration form.  Configuring the Search Engine look and feel  Go to Look and feel section of the Search Engine In the Layout tab, select Full width option and click Save  If this change hasn’t made, the search results on the website are shown in a popup window.\nDealing with ads By default, newly created Search engines use Free Edition (with ads) of the service. As YMCAs are non-profit organizations they have the option to switch to Non-profit Edition of the CSE, where it is possible to disable ads.\nTake a look here https://support.google.com/customsearch/answer/4542102?hl=en\u0026ctx=topic\nIf you are already registered as a Non-profit in Google:\n From the CSE Control Panel, select the search engine you want to change. Click Setup then Make Money Toggle the Show Ads option to off.  Advanced setup Official Google documentation https://support.google.com/customsearch/topic/4542213?hl=en\u0026ref_topic=4513868\nMutli-site search You can add not only your website’s domain but other domains as well if you have other websites dedicated to your Association but split from the main website.\nYou can also add not only the whole websites but their parts by specifying patterns like example.com/blog/*.\nRefinements and facets https://support.google.com/customsearch/answer/4542637?hl=en\u0026ctx=topic\u0026topic=2642564\u0026visit_id=637166170019174137-3540762397\u0026rd=1\nRefinements let users filter results according to categories you provide.\nRefinements appear in the search results page as tabs. The content of each tab is configured in Search features \u003e Refinement section of the Custom Search Control panel.\nTo set up a dedicated tab in search results for Blog posts do the following:\n In Control panel, go to Search features \u003e Refinements Click Add  Set the name of the refinement to Blog Select Search only the sites with this label for How to search sites with this label? Click Ok   Go to Setup Find Sites to search, click Add  Add the yourymcadomain.org/blog/* in the text field Select Blog in the Label dropdown Select Include just this specific page or URL pattern I have entered Click Save    The search results page now shows the Blog tab that only shows blog entries relevant to the search term.\nPromotions Official Google documentation https://support.google.com/customsearch/answer/4542640?hl=en\u0026ref_topic=4542213\nInformation for developers Google Custom Search Developers documentation \nEnabling via Drush Use the following snippet to enable the package on existing websites:\ndrush en openy_google_search Configuring the module via Drush Use the following snippet when you install Open Y via Drush to set the Search Engine ID:\ndrush site-install openy \\ --account-pass=password \\ --db-url=\"mysql://user:pass@host:3306/db\" \\ --root=/var/www/docroot \\ openy_configure_profile.preset=extended \\ openy_theme_select.theme=openy_rose \\ openy_third_party_services.google_search_engine_id=\"01234567890123456789:abcedefgh\" The openy_third_party_services.google_search_engine_id parameter sets the Search Engine ID (01234567890123456789:abcedefgh in the example).\nUse the following snippet to set the Search Engine ID on already installed websites:\ndrush config-set openy_google_search.settings google_engine_id \"01234567890123456789:abcedefgh\" ```) ","categories":"","description":"","excerpt":"Google Custom Search configuration The Open Y release 8.2.4 introduces …","ref":"/openy_docs/docs/development/googlecustomsearchconfiguration/","tags":"","title":"GoogleCustomSearchConfiguration"},{"body":"Grid columns This is a paragraph type that will be used for field_grid_columns the in Grid Content paragraph.\nFields    Name Machine name Required Description     Description field_prgf_grid_clm_description No Textarea for the description/body with WYSIWYG, without summary.   Headline field_prgf_clm_headline No Headline of the grid content.   Icon field_prgf_clm_icon No Entityreference to media asset. Should allow to upload svgs.   Icon class field_prgf_clm_class No Input field that allows to add the font-awesome icons needed. Description - “Provide a “Font Awesome” icon mane, e.g. flag, car, info. Overrides image Icon.”   Link field_prgf_clm_link No Link field that supports internal and external URLs.    ","categories":"","description":"","excerpt":"Grid columns This is a paragraph type that will be used for …","ref":"/openy_docs/docs/content-structure/paragraphs/grid-columns/","tags":"","title":"Grid columns"},{"body":"Grid Content This is a paragraph type that will be used for the grid content stories.\nFields    Name Machine name Required Description     Style field_prgf_grid_style Yes Select list with following values: 2:2 items per row, 3:3 items per row, 4:4 items per row   Content field_grid_columns Paragraph Grid columns   Description field_prgf_grid_clm_description No Textarea for the description/body with WYSIWYG, without summary.   Headline field_prgf_clm_headline No Headline of the grid content.   Icon field_prgf_clm_icon No Entityreference to media asset. Should allow to upload svgs.   Icon class field_prgf_clm_class No Input field that allows to add the font-awesome icons needed. Description - “Provide a “Font Awesome” icon mane, e.g. flag, car, info. Overrides image Icon.”   Link field_prgf_clm_link No Link field that supports internal and external URLs.    ","categories":"","description":"","excerpt":"Grid Content This is a paragraph type that will be used for the grid …","ref":"/openy_docs/docs/content-structure/paragraphs/grid-content/","tags":"","title":"Grid Content"},{"body":"Group Schedules This is dynamic paragraph that renders the group schedules from GroupEx Pro.\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and is configurable in form display.    ","categories":"","description":"","excerpt":"Group Schedules This is dynamic paragraph that renders the group …","ref":"/openy_docs/docs/content-structure/paragraphs/group-schedules/","tags":"","title":"Group Schedules"},{"body":"Site installation with drush Use drush site-install command.\nBasically you use something like this:\ndrush site-install openy --account-pass=password --db-url=\"mysql://user:pass@host:3306/db\" --root=/var/www/docroot Complete Open Y profile preset and Open Y Rose theme is used in this case.\nYou can set which preset must be installed by specifying it with openy_configure_profile.preset variable, and theme with openy_theme_select.themevariable e.g.:\ndrush site-install openy --account-pass=password --db-url=\"mysql://user:pass@host:3306/db\" --root=/var/www/docroot openy_configure_profile.preset=extended openy_theme_select.theme=openy_rose ```) ","categories":"","description":"","excerpt":"Site installation with drush Use drush site-install command.\nBasically …","ref":"/openy_docs/docs/development/installationwithdrush/","tags":"","title":"InstallationWithDrush"},{"body":"Landing Page Landing Page content type is used for adding landing pages on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the landing page item.   Layout field_lp_layout Yes Select list with the options: one_column_clean|One Column - Full widthone_column|One Columntwo_column|Two Columnstwo_column_fixed|Two Columns with fixed sidebar (sticky at the top)   Meta Tags field_meta_tags No A meta tags field allows us to provide structured metadata and Graph meta tags for Facebook, Pinterest, LinkedIn and other social networking sites.   Header Area Field group     Content field_header_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Content Area Field group     Content field_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Sidebar Area Field group     Content field_sidebar_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Bottom Area Field group     Content field_bottom_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.    URL pattern Content type is using following pattern: [node:title]\n","categories":"","description":"","excerpt":"Landing Page Landing Page content type is used for adding landing …","ref":"/openy_docs/docs/content-structure/content-types/landing-page/","tags":"","title":"Landing Page"},{"body":"Latest Blog Posts This is dynamic paragraph that renders the latest blog posts that are promoted to the front page.\nIt uses sticky at the top option and order items based on published date (newest at the top).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Latest Blog Posts This is dynamic paragraph that renders the latest …","ref":"/openy_docs/docs/content-structure/paragraphs/latest-blog-posts/","tags":"","title":"Latest Blog Posts"},{"body":"Latest Blog Posts (Branch) This is dynamic paragraph that renders the latest blog posts associated with a branch.\nIt uses sticky at the top option and order items based on published date (newest at the top).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Latest Blog Posts (Branch) This is dynamic paragraph that renders the …","ref":"/openy_docs/docs/content-structure/paragraphs/latest-blog-posts-branch/","tags":"","title":"Latest Blog Posts (Branch)"},{"body":"Latest Blog Posts (Camp) This is dynamic paragraph that renders the latest blog posts associated with a camp.\nIt uses sticky at the top option and order items based on published date (newest at the top).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Latest Blog Posts (Camp) This is dynamic paragraph that renders the …","ref":"/openy_docs/docs/content-structure/paragraphs/latest-blog-posts-camp/","tags":"","title":"Latest Blog Posts (Camp)"},{"body":"Latest News Posts This is dynamic paragraph that renders the latest news posts that are promoted to the front page.\nIt uses sticky at the top option and order items based on published date (newest at the top).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Latest News Posts This is dynamic paragraph that renders the latest …","ref":"/openy_docs/docs/content-structure/paragraphs/latest-news-posts/","tags":"","title":"Latest News Posts"},{"body":"Latest News Posts (Branch) This is dynamic paragraph that renders the latest news posts associated with a branch.\nIt uses sticky at the top option and order items based on published date (newest at the top).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Latest News Posts (Branch) This is dynamic paragraph that renders the …","ref":"/openy_docs/docs/content-structure/paragraphs/latest-news-posts-branch/","tags":"","title":"Latest News Posts (Branch)"},{"body":"Latest News Posts (Camp) This is dynamic paragraph that renders the latest news posts associated with a camp.\nIt uses sticky at the top option and order items based on published date (newest at the top).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Latest News Posts (Camp) This is dynamic paragraph that renders the …","ref":"/openy_docs/docs/content-structure/paragraphs/latest-news-posts-camp/","tags":"","title":"Latest News Posts (Camp)"},{"body":"Limited Time Offer This Paragraph add limited time offer for Home Page based on Landing Page CT.\nFields    Name Machine name Required Description     Subtitle field_lto_subtitle No Enter subtitle for Limited time offer.   Link field_lto_link No Add link for Latest time offer.   Title field_lto_title No Enter title for the Limited Time Offer.    ","categories":"","description":"","excerpt":"Limited Time Offer This Paragraph add limited time offer for Home Page …","ref":"/openy_docs/docs/content-structure/paragraphs/limited-time-offer/","tags":"","title":"Limited Time Offer"},{"body":"Location finder This is paragraph that renders the Location finder block.\nLocation finder block contains locations views displays with branches, camps and facilities.\nFields    Name Machine name Required Description     Location finder field_prgf_location_finder No Block reference to the location_finder block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Location finder This is paragraph that renders the Location finder …","ref":"/openy_docs/docs/content-structure/paragraphs/location-finder/","tags":"","title":"Location finder"},{"body":"Location finder filters This is paragraph that renders the Location finder map with pins and filters.\nFields    Name Machine name Required Description     Location finder field_prgf_location_finder No Block reference to the location_finder block. Should have default value and should be hidden in form display.   Tags style field_prgf_lf_tags_style Yes Tags style that will be used for map tags filter. Default - checkboxes. Second option is multiselect widget with checkboxes.    ","categories":"","description":"","excerpt":"Location finder filters This is paragraph that renders the Location …","ref":"/openy_docs/docs/content-structure/paragraphs/location-finder-filters/","tags":"","title":"Location finder filters"},{"body":"","categories":"","description":"","excerpt":"","ref":"/openy_docs/docs/content-structure/media/","tags":"","title":"Media"},{"body":"Media Tags This is a vocabulary that will be used for adding media tags that will allow you to structurize your media assets library.\nMachine name: media_tags\n","categories":"","description":"","excerpt":"Media Tags This is a vocabulary that will be used for adding media …","ref":"/openy_docs/docs/content-structure/taxonomy/media-tags/","tags":"","title":"Media Tags"},{"body":"Membership Membership content type is used for adding membership on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the membership item.   Description field_mbrshp_description Yes Textarea for the description/body with WYSIWYG, without summary.   Image field_mbrshp_image Yes Media field to upload the image.   Membership info field_mbrshp_info Paragraph Paragraph to indicate the location where the membership is available and the URL.   Location field_mbrshp_location No Select list with locations (branches). Single value.   Link field_mbrshp_link No Link field to provide the membership redirect URL.   Join Fee field_mbrshp_join_fee No Dollar value for how much someone has to pay to join.   Monthly Rate field_mbrshp_monthly_rate No Dollar value for the monthly fee of the membership.    URL pattern Content type is using following pattern: /membership/[node:title]\n","categories":"","description":"","excerpt":"Membership Membership content type is used for adding membership on …","ref":"/openy_docs/docs/content-structure/content-types/membership/","tags":"","title":"Membership"},{"body":"Membership info This is a paragraph type that will be used for field_mbrshp_info the in Membership CT.\nFields    Name Machine name Required Description     Location field_mbrshp_location No Select list with locations (branches). Single value.   Link field_mbrshp_link No Link field to provide the membership redirect URL.   Join Fee field_mbrshp_join_fee No Dollar value for how much someone has to pay to join.   Monthly Rate field_mbrshp_monthly_rate No Dollar value for the monthly fee of the membership.    ","categories":"","description":"","excerpt":"Membership info This is a paragraph type that will be used for …","ref":"/openy_docs/docs/content-structure/paragraphs/membership-info/","tags":"","title":"Membership info"},{"body":"Microsites Menu Provide paragraph containing a microsites menu block.\nFields    Name Machine name Required Description     Menu Block field_prgf_block_ref Yes Block reference to the view/block. Create a new one or pick up an existed menu block.   Hide Main Menu field_prgf_ms_menu_hide_menu No Whether to hide or not the main website menu.    ","categories":"","description":"","excerpt":"Microsites Menu Provide paragraph containing a microsites menu block. …","ref":"/openy_docs/docs/content-structure/paragraphs/microsites-menu/","tags":"","title":"Microsites menu"},{"body":"Module content removal When deleting an entity, where plugins or services of removing module are used, then content removal should be done in the hook_uninstall() of that module. See openy_prgf_camp_menu.install as example.)\n","categories":"","description":"","excerpt":"Module content removal When deleting an entity, where plugins or …","ref":"/openy_docs/docs/development/module-develompent/","tags":"","title":"Module Develompent"},{"body":"News News Post content type is used for adding news posts on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the news item.   Locations field_news_location Yes Reference field to branch and camp nodes. Multiple Values.   Category field_news_category No Reference field for choosing the term from “News Category” vocabulary. Multiple Values.   Meta Tags field_meta_tags No A meta tags field allows us to provide structured metadata and Graph meta tags for Facebook, Pinterest, LinkedIn and other social networking sites.   Content Area Field group     Image field_news_image No Image field for the News item. Entity reference to Media bundle.   Description field_news_description No Textarea for the description/body with WYSIWYG, without summary.   Content field_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Sidebar Area Field group     Related content field_news_related No Reference field for choosing related News nodes. Multiple Values.   Content field_sidebar_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.    URL pattern Content type is using following pattern: /news/[node:title]\n","categories":"","description":"","excerpt":"News News Post content type is used for adding news posts on the site. …","ref":"/openy_docs/docs/content-structure/content-types/news/","tags":"","title":"News"},{"body":"News Category This is a vocabulary that will be used for adding news categories on the site.\nMachine_name: news_category\n","categories":"","description":"","excerpt":"News Category This is a vocabulary that will be used for adding news …","ref":"/openy_docs/docs/content-structure/taxonomy/news-category/","tags":"","title":"News Category"},{"body":"News Posts Listing This is dynamic paragraph that renders the latest news posts and utilizes exposed filters.\n Location Category Text  It uses sticky at the top option and order items based on published date (newest at the top).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"News Posts Listing This is dynamic paragraph that renders the latest …","ref":"/openy_docs/docs/content-structure/paragraphs/news-posts-listing/","tags":"","title":"News Posts Listing"},{"body":"Welcome to Open Y paragraphs.\nParagraphs are bits of content, components, from component based design ideology. In a scope of Open Y architecture paragraphs are based on Paragraphs Drupal module.\nThe core idea of paragraphs is to have a nice looking and behaving widget for adding predefined content blocks right in place, without referencing external entities. Keep in mind, that paragraphs are not reusable types. For having reusable type look for blocks or entities in terms of Drupal 8.\nParagraphs were created for making UX better and super convenient.\n","categories":"","description":"","excerpt":"Welcome to Open Y paragraphs.\nParagraphs are bits of content, …","ref":"/openy_docs/docs/content-structure/paragraphs/","tags":"","title":"Paragraphs"},{"body":"Here you can find instructions how you can patch Open Y distribution used on your project.\nWhen you need to patch Open Y  In case you found a bug and prepared a patch for Open Y on github. In case you developed a new feature that will be good to have in Open Y and created Pull Request to Open Y repository In case you want to add a feature that added to Open Y but not included yet to Open Y release.  How to patch Open Y via composer? If you followed instructions docs/Development/Start new Open Y project and you have configured composer.json you need just to do a few simple steps:\n Build a link to a patch using pull request ID https://patch-diff.githubusercontent.com/raw/ymcatwincities/openy/pull/XXX.patch   Where XXX is a number of pull request you want to use.\nAdd a new section patches to the section extra and add a patch to Open Y repository, as on this example: \"extra\": { \"installer-paths\": { ... }, \"enable-patching\": true, \"patches\": { \"ymcatwincities/openy\": { \"Patch description\": \"https://patch-diff.githubusercontent.com/raw/ymcatwincities/openy/pull/XXX.patch\" } } }  After adding a patch execute command composer update Verify you can see added changes in Open Y Enjoy!)  ","categories":"","description":"","excerpt":"Here you can find instructions how you can patch Open Y distribution …","ref":"/openy_docs/docs/development/patch-openy/","tags":"","title":"Patch OpenY"},{"body":"Program Program content type is used for adding Programs on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the program item.   Meta Tags field_meta_tags No A meta tags field allows us to provide structured metadata and Graph meta tags for Facebook, Pinterest, LinkedIn and other social networking sites.   Header Area Field group     Icon field_program_icon No A image field, supporting .svg for uploading the program icon.   Image field_program_image No A image field, for uploading the program image.   Color field_program_color No Reference field for choosing the term from “Color” vocabulary.   Content field_header_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types. If this field is not empty, then the image and icon are not displayed on the page.   Content Area Field group     Description field_program_description No Textarea for the description/body with WYSIWYG, without summary.   Content field_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Sidebar Area Field group     Content field_sidebar_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.    URL pattern Content type is using following pattern: /programs/[node:title]\n","categories":"","description":"","excerpt":"Program Program content type is used for adding Programs on the site. …","ref":"/openy_docs/docs/content-structure/content-types/program/","tags":"","title":"Program"},{"body":"Program Registration (Daxko) This is paragraph that renders the Programs Search Block.\nPrograms Search Block provides a form to search programs from Daxko.\nRelates to: Daxko\nDaxko \u0026 Program Registration (Daxko) configuration must be setup before the Program Registration paragraph will work.\nConfiguration setting at /admin/config/development/daxko/programs-search\nFields    Name Machine name Required Description     Program registration block field_prgf_reg_block No Block reference to the programs_search_block block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Program Registration (Daxko) This is paragraph that renders the …","ref":"/openy_docs/docs/content-structure/paragraphs/program-registration-daxko/","tags":"","title":"Program Registration (Daxko)"},{"body":"Program Subcategory Program Subcategory content type is used for adding program subcategories on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the program subcategory item.   Program field_category_program Yes A reference field for selecting the program.   Meta Tags field_meta_tags No A meta tags field allows us to provide structured metadata and Graph meta tags for Facebook, Pinterest, LinkedIn and other social networking sites.   Header Area Field group     Image field_category_image No A image field, for uploading the category image.   Color field_category_color No Reference field for choosing the term from “Color” vocabulary.   Content field_header_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Content Area Field group     Description field_category_description No Textarea for the description/body with WYSIWYG, without summary.   Content field_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Sidebar Area Field group     Content field_sidebar_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.   Bottom Area Field group     Content field_bottom_content No A paragraph embed field that will allow us to add various flexible content modules, from the predefined list of paragraph types.    URL pattern Content type is using following pattern: /programs/[node:field_category_program:entity:title]/[node:title]\n","categories":"","description":"","excerpt":"Program Subcategory Program Subcategory content type is used for …","ref":"/openy_docs/docs/content-structure/content-types/program-subcategory/","tags":"","title":"Program Subcategory"},{"body":"Promo Card This is a Paragraph type that will be used for the Promo Cards.\nFields    Name Machine name Required Description     Title field_prgf_title No Title of the Promo Card.   Headline field_prgf_headline Yes Headline of the Promo Card.   Description field_prgf_description No WYSIWYG field without summary.   Link field_prgf_link No Link field that should store internal and external links.    ","categories":"","description":"","excerpt":"Promo Card This is a Paragraph type that will be used for the Promo …","ref":"/openy_docs/docs/content-structure/paragraphs/promo-card/","tags":"","title":"Promo Card"},{"body":"Schedule search form This is dynamic paragraph that renders the session instances filters for [Schedule search list](Schedule search list.md).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    ","categories":"","description":"","excerpt":"Schedule search form This is dynamic paragraph that renders the …","ref":"/openy_docs/docs/content-structure/paragraphs/schedule-search-form/","tags":"","title":"Schedule search form"},{"body":"Schedule search list This is dynamic paragraph that renders the session instances, based on url parameters, and or filters from [Schedule search form](Schedule search form.md).\nRelates to [Branches Popup (All)](Branches Popup (All).md).\nFields    Name Machine name Required Description     Block field_prgf_block Yes Block reference to the view/block. Should have default value and should be hidden in form display.    Use cases Use case 1: Schedule search list paragraph on a page WITHOUT location popup paragraph 1.1 Preferred branch is selected and no location in URL\n When I open Schedule search list page WITHOUT location popup on page And I have a preferred branch And I don’t have location=% in the URL Filter by location should be predefined based on cookie Results should be filtered  1.2 Preferred branch is empty and no location in URL\n When I open Schedule search list page WITHOUT location popup on page And I don’t have a preferred branch And I don’t have location=% in the URL Filter by location should show “All” Results should be shown for all branches  1.3 Location in specified URL\n When I open Schedule search list page WITHOUT location popup on page And I have location=% in the URL We skip cookie whether is empty or exist Filter by location should show branch from URL Results should be filtered  Use case 2: Schedule search list paragraph on a page WITH location popup 2.1 Preferred branch is selected and no location in URL\n When I open Schedule search list page WITH location popup on page And I have a preferred branch And I don’t have location=% in the URL Location popup shouldn’t be shown Filter by location should be predefined based on cookie Results should be filtered  2.2 Preferred branch is empty and no location in URL\n When I open Schedule search list page WITH location popup on page And I don’t have a preferred branch And I don’t have location=% in the URL Filter by location should show “All” Results should be shown for all branches Location popup should be shown  2.3 Location in specified URL\n When I open Schedule search list page WITH location popup on page And I have location=% in the URL We skip cookie whether is empty or exist Location popup shouldn’t be shown Filter by location should show branch from URL Results should be filtered  ","categories":"","description":"","excerpt":"Schedule search list This is dynamic paragraph that renders the …","ref":"/openy_docs/docs/content-structure/paragraphs/schedule-search-list/","tags":"","title":"Schedule search list"},{"body":"","categories":"","description":"","excerpt":"","ref":"/openy_docs/search/","tags":"","title":"Search Results"},{"body":"Secondary Description and Sidebar This is a Paragraph type that will be used for the paragraphs with left (secondary description) and right (sidebar) blocks.\nFields    Name Machine name Required Description     Left Column field_prgf_left_column_block No Block reference to: Basic Block, Code Block, Date block or Simple Block. Create a new one or pick up an existed block.   Right Column field_prgf_right_column_block No Block reference to: Basic Block, Code Block, Date block or Simple Block. Create a new one or pick up an existed block.    ","categories":"","description":"","excerpt":"Secondary Description and Sidebar This is a Paragraph type that will …","ref":"/openy_docs/docs/content-structure/paragraphs/secondary-description-and-sidebar/","tags":"","title":"Secondary Description and Sidebar"},{"body":"If you need to prepare server for the Open Y instance, here below you should find all needed software to meet its requirements.\nList of requirements   Ubuntu LTS (14 or 16) is preferred. CentOS is ok as well. Or even any other Linux distribution, but was not tested by Open Y team so far.\n  (Drupal 8 server requirements should be met)[https://www.drupal.org/docs/system-requirements/php-requirements].\n  PHP 5.6+ (PHP 7 is better in terms of performance)\n  List of PHP modules server should have:  php{{ php_version }} php{{ php_version }}-mcrypt php{{ php_version }}-cli php{{ php_version }}-common php{{ php_version }}-curl php{{ php_version }}-dev php{{ php_version }}-fpm php{{ php_version }}-gd php{{ php_version }}-mysql php{{ php_version }}-memcached php{{ php_version }}-imagick php{{ php_version }}-xml php{{ php_version }}-xdebug php{{ php_version }}-mbstring php{{ php_version }}-soap php{{ php_version }}-zip  MySQL 5.5+ . Here are the best settings https://github.com/cibox/cibox/blob/master/core/facade-mysql/defaults/main.yml to get it fast and furious Apache 2 with mod-php (preffered for stability) or nginx with php-fpm (better for speed and scalability)   libapache2-mod-php{{ php_version }}   Memcache server (optional)\n  Server tools\n   Ansible (optional) Docker (optional) SOLR 4.x (if there will be requirement for SOLR search support) Varnish (optional))  ","categories":"","description":"","excerpt":"If you need to prepare server for the Open Y instance, here below you …","ref":"/openy_docs/docs/development/server-requirements/","tags":"","title":"Server Requirements"},{"body":"Session Session content type is used for adding Sessions on the site.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the session item.   Class field_session_class Yes A reference field for selecting the program subcategory.   Session Info Field group - -   Description field_session_description No Textarea for the description/body with WYSIWYG, without summary.   Gender field_session_gender No Select List with Gender options: Coed, Male, Female.   Online registration field_session_online No Boolean field that determines if the Register Now button/link gets displayed.   Ticket required field_session_ticket No Checkbox field to indicate that there is a ticket required.   Min Age field_session_min_age No Input field for adding the min age.   Max Age field_session_max_age No Input field for adding the max age.   Registration link field_session_reg_link No A link field with the Registration link Value.   Membership Field group - -   In membership field_session_in_mbrsh No Boolean field that helps determine if the session is included into membership package.   Member price field_session_mbr_price No Input with with the price information for members.   Non Member Price field_session_nmbr_price No Input with with the price information for members.   Location Field group - -   Location field_session_location Yes A reference field for selecting the branch or camp.   Physical Location field_session_plocation No A reference field for selecting the facility.   Time Field group - -   Exclusions field_session_exclusions No A date field that identifies dates that would normally have an instance of the session but won’t. Needs to be able to have multiple exclusions. Supports multiple values. Should be handled by a single date field with ‘end date’ option enabled. Its widget should be adjust to not to show period end date, but show period end time (to keep period start/end date equal).   Time field_session_time Paragraph Session schedule.   Date \u0026 Time field_session_time_date No This will use Drupal date/time fields \u0026 should be a single date field with ‘end date’ and ‘end time’ option enabled.   Days field_session_time_days No Checkboxes with following values: sunday|Sundaymonday|Mondaytuesday|Tuesdaywednesday|Wednesdaythursday|Thursdayfriday|Fridaysaturday|Saturday Should support multiple values.    URL pattern No URL pattern. Eventually this content type shouldn’t be available for end users.\n","categories":"","description":"","excerpt":"Session Session content type is used for adding Sessions on the site. …","ref":"/openy_docs/docs/content-structure/content-types/session/","tags":"","title":"Session"},{"body":"Session Time This is a paragraph type that will be used for field_session_time the in Session CT.\nFields    Name Machine name Required Description     Date \u0026 Time field_session_time_date No This will use Drupal date/time fields \u0026 should be a single date field with ‘end date’ and ‘end time’ option enabled.   Days field_session_time_days No Checkboxes with following values: Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday    ","categories":"","description":"","excerpt":"Session Time This is a paragraph type that will be used for …","ref":"/openy_docs/docs/content-structure/paragraphs/session-time/","tags":"","title":"Session Time"},{"body":"Simple Content Simple Content is used for adding text to the pages.\nFields    Name Machine name Required Description     Content field_prgf_description Yes WYSIWYG field without summary.    ","categories":"","description":"","excerpt":"Simple Content Simple Content is used for adding text to the pages. …","ref":"/openy_docs/docs/content-structure/paragraphs/simple-content/","tags":"","title":"Simple Content"},{"body":"Small Banner This is a paragraph type that will be used for the banner content.\nFields    Name Machine name Required Description Notes     Color field_prgf_color Yes Reference field for choosing the term from “Color” vocabulary.    Headline field_prgf_headline Yes Headline of the Small banner. Plain text, 255 characters   Image field_prgf_image No Entityreference to media image. Single value.    Description field_prgf_description No WYSIWYG field without summary.     ","categories":"","description":"","excerpt":"Small Banner This is a paragraph type that will be used for the banner …","ref":"/openy_docs/docs/content-structure/paragraphs/small-banner/","tags":"","title":"Small Banner"},{"body":"Social Post Social Post content type is used for adding Social Posts on the site. Social Posts are grabbed from social networks.\nFields    Name Machine name Required Description     Title drupal’s default Yes Title of the program item.   ID field_id Yes Post Id in social network. This is system field. Is used by post fetcher.   Image field_image No Image field for saving post image. Can save jpg and png formats.   Link field_link no Contains link to original post in social network.   Platform field_platform no The name of platform where post was imported from.   Post field_post yes Text of post.   Posted field_posted no Date when post was posted in social network    URL pattern Content type is using following pattern: /social_post/[node:title]\n","categories":"","description":"","excerpt":"Social Post Social Post content type is used for adding Social Posts …","ref":"/openy_docs/docs/content-structure/content-types/social-post/","tags":"","title":"Social Post"},{"body":"Social Post Listing This is dynamic paragraph that renders the latest social posts that were imported from social networks.\nFields    Name Machine name Required Description     Title field_prgrf_sl_title No Title for block with social posts.   Description field_prgrf_sl_description No Description for block with social posts.   Social List field_prgrf_sl_block No Reference to views block which select posts and show them as masorny grid.    ","categories":"","description":"","excerpt":"Social Post Listing This is dynamic paragraph that renders the latest …","ref":"/openy_docs/docs/content-structure/paragraphs/social-post-listing/","tags":"","title":"Social Post Listing"},{"body":"Social Share Icons This is a paragraph type that will be used for the add social media share. See more How to configure AddThis\nFields    Name Machine name Required Description Notes    ","categories":"","description":"","excerpt":"Social Share Icons This is a paragraph type that will be used for the …","ref":"/openy_docs/docs/content-structure/paragraphs/social_share_icons/","tags":"","title":"Social_Share_Icons"},{"body":"Here you can find instructions how you can start project based on Open Y distribution.\nNew project from scratch based on Open Y In order to start new project from scratch, you can use installation instructions that will build your project and even add development environment.\nAdd Open Y to existing Drupal 8 project Please take a look at the full composer.json file below that you should eventually get.\n Example composer.json (Drupal 8.3.2 + Open Y 1.2) { \"name\": \"drupal/drupal\", \"description\": \"Drupal is an open source content management platform powering millions of websites and applications.\", \"type\": \"project\", \"license\": \"GPL-2.0+\", \"require\": { \"composer/installers\": \"^1.0.24\", \"wikimedia/composer-merge-plugin\": \"~1.4\", \"ymcatwincities/openy\": \"8.*.*\", \"cweagans/composer-patches\": \"~1.0\" }, \"minimum-stability\": \"dev\", \"prefer-stable\": true, \"config\": { \"preferred-install\": \"dist\", \"autoloader-suffix\": \"Drupal8\", \"secure-http\": false }, \"extra\": { \"_readme\": [ \"By default Drupal loads the autoloader from ./vendor/autoload.php.\", \"To change the autoloader you can edit ./autoload.php.\", \"This file specifies the packages.drupal.org repository.\", \"You can read more about this composer repository at:\", \"https://www.drupal.org/node/2718229\" ], \"merge-plugin\": { \"include\": [ \"core/composer.json\" ], \"recurse\": false, \"replace\": false, \"merge-extra\": false }, \"installer-paths\": { \"core\": [\"type:drupal-core\"], \"libraries/{$name}\": [\"type:drupal-library\"], \"modules/contrib/{$name}\": [\"type:drupal-module\"], \"profiles/contrib/{$name}\": [\"type:drupal-profile\"], \"themes/contrib/{$name}\": [\"type:drupal-theme\"], \"drush/contrib/{$name}\": [\"type:drupal-drush\"], \"modules/custom/{$name}\": [\"type:drupal-custom-module\"], \"themes/custom/{$name}\": [\"type:drupal-custom-theme\"] }, \"enable-patching\": true }, \"autoload\": { \"psr-4\": { \"Drupal\\Core\\Composer\\\": \"core/lib/Drupal/Core/Composer\" } }, \"scripts\": { \"pre-autoload-dump\": \"Drupal\\Core\\Composer\\Composer::preAutoloadDump\", \"post-autoload-dump\": [ \"Drupal\\Core\\Composer\\Composer::ensureHtaccess\" ], \"post-package-install\": \"Drupal\\Core\\Composer\\Composer::vendorTestCodeCleanup\", \"post-package-update\": \"Drupal\\Core\\Composer\\Composer::vendorTestCodeCleanup\", \"post-install-cmd\": [ \"bash scripts/remove_vendor_git_folders.sh || :\" ], \"post-update-cmd\": [ \"bash scripts/remove_vendor_git_folders.sh || :\" ] }, \"repositories\": [ { \"type\": \"composer\", \"url\": \"https://packages.drupal.org/8\" }, { \"type\": \"package\", \"package\": { \"name\": \"library-kenwheeler/slick\", \"version\": \"1.6.0\", \"type\": \"drupal-library\", \"source\": { \"url\": \"https://github.com/kenwheeler/slick\", \"type\": \"git\", \"reference\": \"1.6.0\" } } }, { \"type\": \"package\", \"package\": { \"name\": \"library-dinbror/blazy\", \"version\": \"1.8.2\", \"type\": \"drupal-library\", \"source\": { \"url\": \"https://github.com/dinbror/blazy\", \"type\": \"git\", \"reference\": \"1.8.2\" } } }, { \"type\": \"package\", \"package\": { \"name\": \"library-gdsmith/jquery.easing\", \"version\": \"1.4.1\", \"type\": \"drupal-library\", \"source\": { \"url\": \"https://github.com/gdsmith/jquery.easing\", \"type\": \"git\", \"reference\": \"1.4.1\" } } }, { \"type\": \"package\", \"package\": { \"name\": \"library-enyo/dropzone\", \"version\": \"4.3.0\", \"type\": \"drupal-library\", \"source\": { \"url\": \"https://github.com/enyo/dropzone\", \"type\": \"git\", \"reference\": \"v4.3.0\" } } }, { \"type\": \"package\", \"package\": { \"name\": \"library-jaypan/jquery_colorpicker\", \"version\": \"1.0.1\", \"type\": \"drupal-library\", \"source\": { \"url\": \"https://github.com/jaypan/jquery_colorpicker\", \"type\": \"git\", \"reference\": \"da978ae124c57817021b3166a31881876882f5f9\" } } }, { \"type\": \"package\", \"package\": { \"name\": \"library-ckeditor/panelbutton\", \"version\": \"4.7.0\", \"type\": \"drupal-library\", \"dist\": { \"url\": \"http://download.ckeditor.com/panelbutton/releases/panelbutton_4.7.0.zip\", \"type\": \"zip\" } } }, { \"type\": \"package\", \"package\": { \"name\": \"library-ckeditor/colorbutton\", \"version\": \"4.7.0\", \"type\": \"drupal-library\", \"dist\": { \"url\": \"http://download.ckeditor.com/colorbutton/releases/colorbutton_4.7.0.zip\", \"type\": \"zip\" } } }, { \"type\": \"package\", \"package\": { \"name\": \"library-ckeditor/colordialog\", \"version\": \"4.7.0\", \"type\": \"drupal-library\", \"dist\": { \"url\": \"http://download.ckeditor.com/colordialog/releases/colordialog_4.7.0.zip\", \"type\": \"zip\" } } }, { \"type\": \"package\", \"package\": { \"name\": \"library-ckeditor/glyphicons\", \"version\": \"2.2\", \"type\": \"drupal-library\", \"dist\": { \"url\": \"http://download.ckeditor.com/glyphicons/releases/glyphicons_2.2.zip\", \"type\": \"zip\" } } } ] }    Add \"ymcatwincities/openy\": \"8.*.*\" to the require section in your composer.json, like here\n  Add all required repositories that are listed here to your composer.json\n  Add installer path as here to your composer json. See example.\n    composer.json inside of docroot Installer path will look like this:\n\"installer-paths\": { \"core\": [\"type:drupal-core\"], \"libraries/{$name}\": [\"type:drupal-library\"], \"modules/contrib/{$name}\": [\"type:drupal-module\"], \"profiles/contrib/{$name}\": [\"type:drupal-profile\"], \"themes/contrib/{$name}\": [\"type:drupal-theme\"], \"drush/contrib/{$name}\": [\"type:drupal-drush\"], \"modules/custom/{$name}\": [\"type:drupal-custom-module\"], \"themes/custom/{$name}\": [\"type:drupal-custom-theme\"] }   composer.json outside of docroot Installer path will look like this:\n\"installer-paths\": { \"docroot/core\": [\"type:drupal-core\"], \"docroot/libraries/{$name}\": [\"type:drupal-library\"], \"docroot/modules/contrib/{$name}\": [\"type:drupal-module\"], \"docroot/profiles/contrib/{$name}\": [\"type:drupal-profile\"], \"docroot/themes/contrib/{$name}\": [\"type:drupal-theme\"], \"drush/contrib/{$name}\": [\"type:drupal-drush\"], \"docroot/modules/custom/{$name}\": [\"type:drupal-custom-module\"], \"docroot/themes/custom/{$name}\": [\"type:drupal-custom-theme\"] }    Add \"cweagans/composer-patches\": \"~1.0\" to the require section in you composer.json. See example.\n  Add \"enable-patching\": true to the extra section in your composer.json See example.\n  Add \"secure-http\": false to the config section in your composer.json See example.\n  Remove composer.lock and vendor folder from the project if they are exist in your folder.\n  Remove \"replace\" section from your composer.json\n  (Optional) If you keep vendor folder in your git repository, we recommend to clean up project from .git folder inside modules and libraries. To do so\n    Add cleaner script to your project from Open Y composer package. You can just copy it and paste onto your project.\n  Adjust folders that you would like to cleanup\n  Execute it in post-install-cmd and post-update-cmd:\n\"post-install-cmd\": [ \"bash scripts/remove_vendor_git_folders.sh || :\" ], \"post-update-cmd\": [ \"bash scripts/remove_vendor_git_folders.sh || :\" ]   Run composer install  CIBox In this section you can learn how to configure development environment and CI server using Open Source product CIBox.\nCreate project   Generate project based on this quickstart\n  Add Open Y to the project using (Add Open Y to already existing Drupal 8 project)\n  Init git and add initial commit\n  cd OPENY_PROJECT git init git commit -m \"Init Open Y project\" git remote add origin git@github.com:NAMESPACE/PROJECT.git git push -u origin master Spin up your local vagrant machine  vagrant up --provision Setup CI server for new project based on CIBox documentation.   Follow quick start starting from Jenkins Provisioning Step http://docs.cibox.tools/en/latest/Quickstart/#jenkins-provisioning (Here we will get PR builds and DEMO site (DEV environment) with credentials to it ) Setup hosting STAGE environment (it should be a 1:1 copy of existing or expected hosting account for ability to provide performance testing there) Setup deployment plans for CI by reusing DEMO builder job  Install Open Y on DigitalOcean  Create new Droplet using “One-click apps” image Drupal 8.*.* on 14.04 Login to server via SSH or web console Run command  bash \u003c(curl -s https://raw.githubusercontent.com/ymcatwincities/openy/8.x-1.x/build/openy-digital-ocean.sh) Open link(e.g. http://IP/core/install.php) from console output and finish Open Y installation  Video tutorial \nEnd to end installation )\n","categories":"","description":"","excerpt":"Here you can find instructions how you can start project based on Open …","ref":"/openy_docs/docs/development/start-new-openy-project/","tags":"","title":"Start new OpenY project"},{"body":"Story Card This is a Paragraph type that will be used for the Story Cards.\nFields    Name Machine name Required Description     Title field_prgf_title No Title of the Story Card.   Headline field_prgf_headline Yes Headline of the Story Card.   Link field_prgf_link No Link field that should store internal and external links.    ","categories":"","description":"","excerpt":"Story Card This is a Paragraph type that will be used for the Story …","ref":"/openy_docs/docs/content-structure/paragraphs/story-card/","tags":"","title":"Story Card"},{"body":"","categories":"","description":"","excerpt":"","ref":"/openy_docs/tags/","tags":"","title":"Tags"},{"body":"","categories":"","description":"","excerpt":"","ref":"/openy_docs/docs/content-structure/taxonomy/","tags":"","title":"Taxonomy"},{"body":"Teaser This is a paragraph type that will be used for the teaser content.\nFields    Name Machine name Required Description     Title field_prgf_title No Title of the Teaser.   Image field_prgf_image No Entityreference to media image. Single value.   Description field_prgf_description No WYSIWYG field without summary.   Link field_prgf_link No Link field that should store internal and external links.    ","categories":"","description":"","excerpt":"Teaser This is a paragraph type that will be used for the teaser …","ref":"/openy_docs/docs/content-structure/paragraphs/teaser/","tags":"","title":"Teaser"},{"body":"Running Tests These instructions explain how you can run tests.\nBehat Requirements  Ansible 1.9.4+ http://docs.ansible.com/ansible/intro_installation.html Docker https://docs.docker.com/engine/installation/  Run full test suite   Execute command\n$ cd profiles/contrib/openy $ sh runtests.sh   Open http://site.com/profiles/contrib/openy/build/reports/behat in browser.\n  Run selenium container + Behat tests in usual way In order to run only selenium container + behat in usual way:\n$ cd profiles/contrib/openy $ sh runtests.sh --tags run_selenium $ bin/behat Stop selenium container In order to stop selenium container:\n$ cd profiles/contrib/openy $ sh runtests.sh --tags stop_selenium If necessary, edit behat.local.yml to match your environment.\nVisual debugging - Video When you develop JS tests, it’s important to see what’s going on the Selenium screen. You can easily see this during development.\n Install https://www.realvnc.com/download/viewer Run selenium using command  $ cd profiles/contrib/openy $ sh runtests.sh --tags run_selenium Open installed VNC Viewer and connect to the server with IP 192.168.56.132:5901   Password = secret  Run tests and you should see everything that is performed by behat tests in VNC client  $ bin/behat \nCustom Behat functionality  Create entities in table forms, with key to use in reference and reference entities by key.  KEY is optional, and must be all CAPS. Taxonomy Given I create \"taxonomy_term\" of type \"color\" with key for reference: | KEY | name | field_color | | Blue | Blue | 0000FF | | Red | Red | FF0000 |  Paragraphs Given I create \"paragraph\" of type \"small_banner\" with key for reference: | KEY | field_prgf_headline | field_prgf_color | | banner1 | Headline 1 | Blue | | banner2 | Headline 2 | Red |  Media entities Given I create \"media\" of type \"image\" with key for reference: | KEY | name | file | | gallery_1 | Gallery image 1 | gallery.png | | gallery_2 | Gallery image 2 | gallery2.png | | gallery_3 | Gallery image 3 | gallery3.png |    Create nodes in table forms, with key to use in reference and reference entities by key.  KEY is optional, and must be all CAPS. Basic create Given I create \"landing_page\" content: | KEY | title | field_lp_layout | field_content | | landing_1 | Test Landing 01 | one_column | banner1 | | landing_2 | Test Landing 02 | one_column | banner2 |  Vertical field table Given I create large \"landing_page\" content: | KEY | landing_3 | landing_4 | | title | Test Landing 03 | Test Landing 04 | | field_lp_layout | one_column | one_column | | field_content | banner1 | banner2 |  Create \u0026 view immediately Given I view a \"landing_page\" content: | KEY | landing_5 | | title | Test Landing 05 | | field_lp_layout | one_column | | field_content | banner1 |  Multiple referenced entities by key on a field. Given I create \"landing_page\" content: | KEY | title | field_lp_layout | field_content | | landing_6 | Test Landing 06 | one_column | banner1, banner2 |     Example Address and Latitude + Longitude Fields with sub field/columns: The machine name and columns can be found in the form markup in the field name property. The first portion, field_location_address represents the Drupal field machine name, while the second array key address_line1 represents the column.\n Add Address Given I view a \"branch\" content: | title | Branch Example | | field_location_address:country_code | US | | :address_line1 | Main road 10 | | :locality | Seattle | | :administrative_area | WA | | :postal_code | 98101 |  Add Latitude and Longitude Given I view a \"branch\" content: | title | Branch Example 2 | | field_location_coordinates:lat | 47.293433 | | :lng | -122.238717 | | field_location_phone | +1234567890 | ```)   ","categories":"","description":"","excerpt":"Running Tests These instructions explain how you can run tests.\nBehat …","ref":"/openy_docs/docs/development/tests/","tags":"","title":"Tests"},{"body":"Welcome to Open Y Theming and Design documentation.\nHow to change styles on content type level Given: As an Open Y site developer, I want to be able to easily change the CSS for a Camp page independently from a Location page, so I can better customize the site to meet the needs of my customers.\nHow to:\n If you need to change CSS on some pages independently, you should enable Custom CSS functionality on the theme configuration page - Custom CSS - check “Enable or disable custom CSS”. Input CSS code into the textarea.  In order to change CSS on each particular page you should use the following selectors:\n .page-node-type-{node type}; .node-id-{node ID}; .path-frontpage.  The existing node types are: activity, alert, blog, branch, camp, class, facility, landing-page, membership, news, program, program-subcategory, session.)\n","categories":"","description":"","excerpt":"Welcome to Open Y Theming and Design documentation.\nHow to change …","ref":"/openy_docs/docs/development/theming_and_design/","tags":"","title":"Theming_and_Design"},{"body":"How to use Tour for modules How to use Open Y Tour Token with Tour In someone modules have tour tips and for more interactivity, you can add a token with a click to any selector.\n  In the module open tour yml file.   Select the tip for edit and in body add token like this [openy_tour:click:button_name:selector]   Create hook update for you changes and in command line run drush updb -y\n  Token components: [openy_tour:click:button_name:selector]* openy_tour - token name;\nclick - command in the token;\nbutton_name - name of button when show in a tip;\nselector - selector to be clicked.\nPlease see and use jQuery selectors.)\n","categories":"","description":"","excerpt":"How to use Tour for modules How to use Open Y Tour Token with Tour In …","ref":"/openy_docs/docs/development/tour/","tags":"","title":"Tour"},{"body":"How to support upgrade path All changes in configurations should be added to appropriate hook_update_N in order to update already existing environments. We suggest to use https://www.drupal.org/project/confi for working with hook_update_N.\nopeny.install in profile In this file we should put updates that are related to the distribution in general and don’t fit into any feature.\n Enable/Disable module General configs  openy_*.install in modules In case if you update some configuration for specific feature, make sure that you put updates into appropriate module.\nRevert only specific property from config With config_import module help we can update only part from full config.\nFor updating specific property in config (use service ‘openy_upgrade_tool.param_updater’):\n  go to related to this config module\n  create new hook_update_N in openy_*.install file\n  in update add next code (this is example):\n  $config = drupal_get_path('module', 'openy_media_image') . '/config/install/views.view.images_library.yml'; $config_importer = \\Drupal::service('openy_upgrade_tool.param_updater'); $config_importer-\u003eupdate($config, 'views.view.images_library', 'display.default.display_options.pager'); Where:\n $config variable contains path to config with config name “views.view.images_library” - config name “display.default.display_options.pager” - config specific property (you can set value from a nested array with variable depth)  Revert full configs For updating full config or several configs from directory use service ‘openy_upgrade_tool.importer’.\n$config_dir = drupal_get_path('module', 'openy_media_image') . '/config/install'; $config_importer = \\Drupal::service('openy_upgrade_tool.importer'); $config_importer-\u003esetDirectory($config_dir); $config_importer-\u003eimportConfigs(['views.view.images_library']); Where:\n $config_dir - path to directory with config “views.view.images_library” - config name  Also you can update several configs from directory:\n$config_importer-\u003eimportConfigs([ 'views.view.images_library', 'views.view.example_view', ]); ```) ","categories":"","description":"","excerpt":"How to support upgrade path All changes in configurations should be …","ref":"/openy_docs/docs/development/upgrade-path/","tags":"","title":"Upgrade path"},{"body":"Webform This is a paragraph type that will be used for the embedding webforms.\nFields    Name Machine name Required Description     Embedded Webform field_prgf_webform No Embedded webform entityreference (select). Single value.   Default webform submission data (YAML) field_prgf_webform_default_data No YAML code for passing in default values to webform.   Webform status field_prgf_webform_status No Status of webform on render. Radio with 2 options, open or closed (Closed prevents further submissions).    ","categories":"","description":"","excerpt":"Webform This is a paragraph type that will be used for the embedding …","ref":"/openy_docs/docs/content-structure/paragraphs/webform/","tags":"","title":"Webform"},{"body":"Media WYSIWYG View Modes Listed view modes are available for embedding in WYSIWYG editor.\nView Modes    Name Machine name Description     Full embedded_full This view mode displays media asset with full width.   Half embedded_half This view mode displays media asset with half width and uses alingment.   Link embedded_link This view mode displays link to media asset.    Bundles details Image In “Full” and “Half” view modes image should be display in \u003cimg\u003e tag with appropriate classes. Link - should lead to the original image with target=blank.\nVideo In “Full” and “Half” view modes should be displayed embedded video with appropriate classes. Link - should lead to the original video with target=blank.\nDocument In “Full” and “Half” view modes document should be displayed as iframe, where URL is URL to the document. Also it should have appripriate classes.\n\u003ciframe src=\"//docs.google.com/gview?url=URL\u0026embedded=true\" frameborder=\"0\"\u003e\u003c/iframe\u003e Link - should lead to the original document with target=blank.\n","categories":"","description":"","excerpt":"Media WYSIWYG View Modes Listed view modes are available for embedding …","ref":"/openy_docs/docs/content-structure/media/wysiwyg-view-modes/","tags":"","title":"WYSIWYG View Modes"}]